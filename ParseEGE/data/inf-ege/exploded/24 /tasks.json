{
    "data": [
        {
            "answer": "Решение.1. При вводе M = 10 и N = 40 программа выведет число 4.2. Примеры чисел, при вводе которых программа выводит верный ответ: M и NВерный ответОтвет программы5, 162236, 6433 Пример исправления для языка ПаскальПервая ошибка: t := 1;Исправленная строка: t := 0;Вторая ошибка: while k*k < n do beginИсправленная строка: while k*k <= n do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:38.954609",
            "question": "Даны целые положительные числа M и N. Необходимо определить количество таких целых положительных чисел K, для которых выполняется неравенство Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM M, N, K, T AS INTEGER INPUT M, N K = 1 T = 1 WHILE K*K < N  IF K*K >= M THEN T = T + 1  K = K + 1 WEND PRINT T END m = int(input())n = int(input())k = 1t = 1while k*k < n:  if k*k >= m:    t = t+1  k = k + 1print(t)  ПаскальАлгоритмический языкvar m, n, k, t: integer;begin  read(m, n);  k := 1;  t := 1;  while k*k < n do begin    if k*k >= m      then t := t+1;    k := k + 1;  end;  writeln(t)end.алгнач  цел m, n, k, t  ввод m, n  k := 1  t := 1  нц пока k*k < n    если k*k >= m      то t := t+1    все    k := k+1  кц  вывод tконСи++#include <iostream>using namespace std;int main(){  int m, n, k, t;  cin >> m >> n;  k = 1;  t = 1;  while (k*k < n) {    if (k*k >= m) t = t + 1;    k = k + 1;  }  cout « t « endl;  return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе M = 10 и N = 40.2. Приведите пример таких чисел M и N, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться. Замечание.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body935616\" width=\"100%\"><p class=\"left_margin\">Даны целые положительные числа <i>M</i> и <i>N</i>. Необходимо определить количество таких целых положительных чисел <i>K</i>, для которых выполняется неравенство<center><p><img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/8e/8ead3b6f6cc279b4af720fef1f301a38.svg\" style=\"vertical-align:-2pt\"/><p> </p></p></center><p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"52%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM M, N, K, T AS INTEGER<p> INPUT M, N<p> K = 1<p> T = 1<p> WHILE K*K &lt; N<p>  IF K*K &gt;= M THEN T = T + 1<p>  K = K + 1<p> WEND<p> PRINT T<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>m = int(input())<p>n = int(input())<p>k = 1<p>t = 1<p>while k*k &lt; n:<p>  if k*k &gt;= m:<p>    t = t+1<p>  k = k + 1<p>print(t)<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var m, n, k, t: integer;<p>begin<p>  read(m, n);<p>  k := 1;<p>  t := 1;<p>  while k*k &lt; n do begin<p>    if k*k &gt;= m<p>      then t := t+1;<p>    k := k + 1;<p>  end;<p>  writeln(t)<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел m, n, k, t<p>  ввод m, n<p>  k := 1<p>  t := 1<p>  нц пока k*k &lt; n<p>    если k*k &gt;= m<p>      то t := t+1<p>    все<p>    k := k+1<p>  кц<p>  вывод t<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>  int m, n, k, t;<p>  cin &gt;&gt; m &gt;&gt; n;<p>  k = 1;<p>  t = 1;<p>  while (k*k &lt; n) {<p>    if (k*k &gt;= m) t = t + 1;<p>    k = k + 1;<p>  }<p>  cout « t « endl;<p>  return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>M</i> = 10 и <i>N</i> = 40.<p class=\"left_margin\">2. Приведите пример таких чисел <i>M</i> и <i>N</i>, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.<p> </p><p><b>Замечание.</b></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе M = 10 и N = 40 программа выведет число 4.2. Примеры чисел, при вводе которых программа выводит верный ответ: M и NВерный ответОтвет программы5, 162236, 6433 Пример исправления для языка ПаскальПервая ошибка: t := 1;Исправленная строка: t := 0;Вторая ошибка: while k*k < n do beginИсправленная строка: while k*k <= n do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol10300\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>M</i> = 10 и <i>N</i> = 40 программа выведет число 4.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ:<p> </p><p><table style=\"margin:auto\"><tr><th style=\"text-align:center\">M и N</th><th style=\"text-align:center\">Верный ответ</th><th style=\"text-align:center\">Ответ программы</th></tr><tr><td style=\"text-align:left\">5, 16</td><td style=\"text-align:center\">2</td><td style=\"text-align:center\">2</td></tr><tr><td style=\"text-align:left\">36, 64</td><td style=\"text-align:center\">3</td><td style=\"text-align:center\">3</td></tr></table><p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль<p class=\"left_margin\">Первая ошибка: <tt>t := 1;</tt><p class=\"left_margin\">Исправленная строка: <tt>t := 0;</tt><p class=\"left_margin\">Вторая ошибка: <tt>while k*k &lt; n do begin</tt><p class=\"left_margin\">Исправленная строка: <tt>while k*k &lt;= n do begin</tt><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "10300"
        },
        {
            "answer": "Решение.1. При вводе N = 2016 программа выведет число 7.2. Примеры чисел, при вводе которых программа выводит верный ответ: 4, 12, 20, 2020. Ответ во всех этих случаях равен 4. Пример исправления для языка ПаскальПервая ошибка: k := 2;Исправленная строка: k := 1;Вторая ошибка: k := k + 1;Исправленная строка: k := k * 2;В программах на других языках ошибочные строки и их исправления аналогичны. Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:39.277617",
            "question": "Дано целое положительное число N. Необходимо определить максимальное значение степени числа 2, на которое N делится без остатка. Например, для N = 2016 нужно получить результат 32, а для N = 2017 — результат 1. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER INPUT N K = 2 WHILE N MOD 2 = 0  N = N\\2  K = K + 1 WEND PRINT K END n = int(input())k = 2while n%2 == 0:  n = n//2  k = k + 1print(k)  ПаскальАлгоритмический языкvar n, k: integer;begin  read(n);  k := 2;  while n mod 2 = 0 do begin    n := n div 2;    k := k + 1;  end;  writeln(k)end.алгнач  цел n, k  ввод n  k := 2  нц пока mod(n,2) = 0    n := div(n,2)    k := k+1  кц  вывод kконСи++#include <iostream>using namespace std;int main(){  int n, k;  cin >> n;  k = 2;  while (n%2 == 0) {    n = n/2;    k = k + 1;  }  cout « k « endl;  return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 2016.2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body935522\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число N. Необходимо определить максимальное значение степени числа 2, на которое <i>N</i> делится без остатка. Например, для <i>N</i> = 2016 нужно получить результат 32, а для <i>N</i> = 2017 — результат 1. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"52%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 2<p> WHILE N MOD 2 = 0<p>  N = N\\2<p>  K = K + 1<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 2<p>while n%2 == 0:<p>  n = n//2<p>  k = k + 1<p>print(k)<p> </p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>  read(n);<p>  k := 2;<p>  while n mod 2 = 0 do begin<p>    n := n div 2;<p>    k := k + 1;<p>  end;<p>  writeln(k)<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n, k<p>  ввод n<p>  k := 2<p>  нц пока mod(n,2) = 0<p>    n := div(n,2)<p>    k := k+1<p>  кц<p>  вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>  int n, k;<p>  cin &gt;&gt; n;<p>  k = 2;<p>  while (n%2 == 0) {<p>    n = n/2;<p>    k = k + 1;<p>  }<p>  cout « k « endl;<p>  return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 2016.<p class=\"left_margin\">2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 2016 программа выведет число 7.2. Примеры чисел, при вводе которых программа выводит верный ответ: 4, 12, 20, 2020. Ответ во всех этих случаях равен 4. Пример исправления для языка ПаскальПервая ошибка: k := 2;Исправленная строка: k := 1;Вторая ошибка: k := k + 1;Исправленная строка: k := k * 2;В программах на других языках ошибочные строки и их исправления аналогичны. Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol10398\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе N = 2016 программа выведет число 7.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 4, 12, 20, 2020. Ответ во всех этих случаях равен 4.<p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль<p class=\"left_margin\">Первая ошибка: <tt>k := 2;</tt><p class=\"left_margin\">Исправленная строка: <tt>k := 1;</tt><p class=\"left_margin\">Вторая ошибка: <tt>k := k + 1;</tt><p class=\"left_margin\">Исправленная строка: <tt>k := k * 2;</tt><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны. Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "10398"
        },
        {
            "answer": "Решение.1. При вводе N = 2016 программа выведет число 10.2. Примеры чисел, при вводе которых программа выводит верный ответ: 2, 10, 2018 (ответ в этих случаях равен 2), 4, 20, 2020 (ответ равен 4). Пример исправления для языка ПаскальПервая ошибка: k := 0;Исправленная строка: k := 1;Вторая ошибка: k := k + 2;Исправленная строка: k := k * 2;В программах на других языках ошибочные строки и их исправления аналогичны. Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:39.607700",
            "question": "Дано целое положительное число N. Необходимо определить максимальное значение степени числа 2, на которое N делится без остатка. Например, для N = 2016 нужно получить результат 32, а для N = 2017 — результат 1. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER INPUT N K = 0 WHILE N MOD 2 = 0  N = N\\2  K = K + 2 WEND PRINT K END n = int(input())k = 0while n%2 == 0:  n = n//2  k = k + 2print(k)  ПаскальАлгоритмический языкvar n, k: integer;begin  read(n);  k := 0;  while n mod 2 = 0 do begin    n := n div 2;    k := k + 2;  end;  writeln(k)end.алгнач  цел n, k  ввод n  k := 0  нц пока mod(n,2) = 0    n := div(n,2)    k := k+2  кц  вывод kконСи++#include <iostream>using namespace std;int main(){  int n, k;  cin >> n;  k = 0;  while (n%2 == 0) {    n = n/2;    k = k + 2;  }  cout « k « endl;  return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 2016.2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body935493\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число N. Необходимо определить максимальное значение степени числа 2, на которое <i>N</i> делится без остатка. Например, для <i>N</i> = 2016 нужно получить результат 32, а для <i>N</i> = 2017 — результат 1. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"52%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 0<p> WHILE N MOD 2 = 0<p>  N = N\\2<p>  K = K + 2<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 0<p>while n%2 == 0:<p>  n = n//2<p>  k = k + 2<p>print(k)<p> </p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>  read(n);<p>  k := 0;<p>  while n mod 2 = 0 do begin<p>    n := n div 2;<p>    k := k + 2;<p>  end;<p>  writeln(k)<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n, k<p>  ввод n<p>  k := 0<p>  нц пока mod(n,2) = 0<p>    n := div(n,2)<p>    k := k+2<p>  кц<p>  вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>  int n, k;<p>  cin &gt;&gt; n;<p>  k = 0;<p>  while (n%2 == 0) {<p>    n = n/2;<p>    k = k + 2;<p>  }<p>  cout « k « endl;<p>  return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 2016.<p class=\"left_margin\">2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 2016 программа выведет число 10.2. Примеры чисел, при вводе которых программа выводит верный ответ: 2, 10, 2018 (ответ в этих случаях равен 2), 4, 20, 2020 (ответ равен 4). Пример исправления для языка ПаскальПервая ошибка: k := 0;Исправленная строка: k := 1;Вторая ошибка: k := k + 2;Исправленная строка: k := k * 2;В программах на других языках ошибочные строки и их исправления аналогичны. Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol10425\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе N = 2016 программа выведет число 10.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 2, 10, 2018 (ответ в этих случаях равен 2), 4, 20, 2020 (ответ равен 4).<p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль<p class=\"left_margin\">Первая ошибка: <tt>k := 0;</tt><p class=\"left_margin\">Исправленная строка: <tt>k := 1;</tt><p class=\"left_margin\">Вторая ошибка: <tt>k := k + 2;</tt><p class=\"left_margin\">Исправленная строка: <tt>k := k * 2;</tt><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны. Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "10425"
        },
        {
            "answer": "Решение.1. Программа выведет 2 1000.2. Например, набор 2 4 5 1000.3. Пример исправлений для языка ПаскальПервая ошибка: maximum := 1000; Исправленная строка: maximum := -1;Вторая ошибка: maximum := iИсправленная строка: maximum := xВ программах на других языках ошибочные строки и их исправления аналогичны.",
            "parsed": "2019-04-29 21:09:28.926425",
            "question": "На обработку поступает последовательность из четырёх неотрицательных целых чисел (некоторые числа могут быть одинаковыми). Нужно написать программу, которая выводит на экран количество чётных чисел в исходной последовательности и максимальное чётное число. Если чётных чисел нет, требуется на экран вывести «NO». Известно, что вводимые числа не превышают 1000. Программист написал программу неправильно. Ниже эта написанная им программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython CONST n = 4 count = 0 maximum = 1000 FOR I = 1 TO n  INPUT x     IF x mod 2 = 0 THEN       count = count + 1     IF x > maximum THEN       maximum = I     END IF   END IF NEXT I IF count > 0 THEN   PRINT count   PRINT maximum ELSE   PRINT \"NO\" END IF n = 4count = 0maximum = 1000for i in range (1, n+1):    x = int(input())    if x % 2 == 0:        count += 1        if x > maximum:            maximum = iif count > 0:    print (count)    print (maximum)else:    print (\"NO\") Алгоритмический языкПаскальалгнач  цел n = 4  цел i, x  цел maximum, count  count := 0  maximum := 1000  нц для i от 1 до n    ввод x    если mod(x, 2) = 0 то      count := count + 1      если x > maximum то        maximum := i      все    все  кц  если count > 0 то    вывод count, нсв    ывод maximum  иначе    вывод \"NO\"  всеконconst n = 4;var i, x: integer;var maximum, count: integer;begin  count := 0;  maximum := 1000;  for i := 1 to n do  begin    read(x);    if x mod 2 = 0 then    begin      count := count + 1;      if x > maximum then          maximum := i    end  end;  if count > 0 then  begin    writeln(count);    writeln(maximum)  end  else    writeln('NO')end.Си++#include <iostream>using namespace std;#define n 4int main(void){  int i, x;  int maximum, count;  count = 0;  maximum = 1000;  for (i = 1; i <= n; i++)  {    cin >> x;    if (x % 2 == 0)    {      count++;      if (x > maximum)        maximum = i;    }  }  if (count > 0)  {    cout << count << endl;    cout << maximum << endl;  }  else    cout << \"NO\\n\";}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе последовательности: 2 9 4 32. Приведите пример такой последовательности, содержащей хотя бы одно чётное число, что, несмотря на ошибки, приведённая программа печатает правильный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка. Примечание. 0 – чётное число.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body935305\" width=\"100%\"><p class=\"left_margin\">На обработку поступает последовательность из четырёх неотрицательных целых чисел (некоторые числа могут быть одинаковыми). Нужно написать программу, которая выводит на экран количество чётных чисел в исходной последовательности и максимальное чётное число. Если чётных чисел нет, требуется на экран вывести «NO». Известно, что вводимые числа не превышают 1000. Программист написал программу неправильно. Ниже эта написанная им программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"50%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> CONST n = 4<p> count = 0<p> maximum = 1000<p> FOR I = 1 TO n<p>  INPUT x<p>     IF x mod 2 = 0 THEN<p>       count = count + 1<p>     IF x &gt; maximum THEN<p>       maximum = I<p>     END IF<p>   END IF<p> NEXT I<p> IF count &gt; 0 THEN<p>   PRINT count<p>   PRINT maximum<p> ELSE<p>   PRINT \"NO\"<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = 4<p>count = 0<p>maximum = 1000<p>for i in range (1, n+1):<p>    x = int(input())<p>    if x % 2 == 0:<p>        count += 1<p>        if x &gt; maximum:<p>            maximum = i<p>if count &gt; 0:<p>    print (count)<p>    print (maximum)<p>else:<p>    print (\"NO\")<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Алгоритмический язык</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n = 4<p>  цел i, x<p>  цел maximum, count<p>  count := 0<p>  maximum := 1000<p>  нц для i от 1 до n<p>    ввод x<p>    если mod(x, 2) = 0 то<p>      count := count + 1<p>      если x &gt; maximum то<p>        maximum := i<p>      все<p>    все<p>  кц<p>  если count &gt; 0 то<p>    вывод count, нс<p>в    ывод maximum<p>  иначе<p>    вывод \"NO\"<p>  все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>const n = 4;<p>var i, x: integer;<p>var maximum, count: integer;<p>begin<p>  count := 0;<p>  maximum := 1000;<p>  for i := 1 to n do<p>  begin<p>    read(x);<p>    if x mod 2 = 0 then<p>    begin<p>      count := count + 1;<p>      if x &gt; maximum then<p>          maximum := i<p>    end<p>  end;<p>  if count &gt; 0 then<p>  begin<p>    writeln(count);<p>    writeln(maximum)<p>  end<p>  else<p>    writeln('NO')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>#define n 4<p>int main(void)<p>{<p>  int i, x;<p>  int maximum, count;<p>  count = 0;<p>  maximum = 1000;<p>  for (i = 1; i &lt;= n; i++)<p>  {<p>    cin &gt;&gt; x;<p>    if (x % 2 == 0)<p>    {<p>      count++;<p>      if (x &gt; maximum)<p>        maximum = i;<p>    }<p>  }<p>  if (count &gt; 0)<p>  {<p>    cout &lt;&lt; count &lt;&lt; endl;<p>    cout &lt;&lt; maximum &lt;&lt; endl;<p>  }<p>  else<p>    cout &lt;&lt; \"NO\\n\";<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе последовательности: 2 9 4 3<p class=\"left_margin\">2. Приведите пример такой последовательности, содержащей хотя бы одно чётное число, что, несмотря на ошибки, приведённая программа печатает правильный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.<p> </p><p><b>Примечание.</b> 0 – чётное число.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. Программа выведет 2 1000.2. Например, набор 2 4 5 1000.3. Пример исправлений для языка ПаскальПервая ошибка: maximum := 1000; Исправленная строка: maximum := -1;Вторая ошибка: maximum := iИсправленная строка: maximum := xВ программах на других языках ошибочные строки и их исправления аналогичны.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11125\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. Программа выведет 2 1000.<p class=\"left_margin\">2. Например, набор 2 4 5 1000.<p class=\"left_margin\">3. Пример исправлений для языка Паскаль<p class=\"left_margin\">Первая ошибка: <tt>maximum := 1000;</tt> Исправленная строка: <tt>maximum := -1;</tt><p class=\"left_margin\">Вторая ошибка: <tt>maximum := i</tt><p class=\"left_margin\">Исправленная строка: <tt>maximum := x</tt><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.</p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 23.03.2016. До­сроч­ная волна",
            "task_id": "11125"
        },
        {
            "answer": "Решение.1. При вводе N = 2016 программа выведет числа 1936 и 2025.2. Программа выведет верный ответ при N = 0. В ответе будут числа 0 и 1.3. Программа содержит две ошибки:1) неверная организация цикла;2) неверный вывод результатов. Пример исправления для языка Паскаль:Первая ошибка:while k*k <= n doИсправленная строка:while k*k < n doВторая ошибка:writeln((k-1)*(k-1),' ',k*k)Исправленная строка:writeln(k-1,' ',k) В программах на других языках ошибочные строки и их исправления аналогичны. Замечание. N = 0 — единственное подходящее значение. Программа выводит квадраты вместо самих чисел. Для 0 и 1 числа совпадают с квадратами, поэтому при N = 0 и N = 1 должен получаться правильный результат. Однако при N = 1 из-за ошибки в организации цикла вместо верного результата «0 1» выводится «1 4», поэтому правильный ответ получается только при N = 0.В работе достаточно привести правильное значение N и ответ программы, подробное обоснование не требуется.",
            "parsed": "2019-04-29 21:09:39.982040",
            "question": "Дано целое неотрицательное число N. Необходимо вывести два неотрицательных целых числа, которые при возведении к квадрат дадут результаты, наиболее близкие к N. Например, для N = 2016 нужно вывести числа 44 и 45 (442 = 1936, 452 = 2025), а для N = 9 нужно вывести числа 2 и 3. Для решения этой задачи ученик написал программу, но, к сожалению, его программа — неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, K AS INTEGER INPUT N K = 1 WHILE K*K <= N   K = K + 1 WEND PRINT (K-1)*(K-1), K*K END n = int(input())k = 1while k*k <= n:    k = k + 1print((k-1)*(k-1),k*k) Алгоритмический языкПаскальалгнач  цел n, k  ввод n  k := 1  нц пока k*k <= n    k := k + 1  кц  вывод (k-1)*(k-1), \" \", k*kконvar n, k: integer;begin  read(n);  k := 1;  while k*k <= n do    k := k + 1;  writeln((k-1)*(k-1),' ',k*k)end.Си++#include <iostream>using namespace std;    int main(){    int n, k;    cin >> n;    k = 1;    while (k*k <= n)        k = k + 1;    cout << (k-1)*(k-1) <<  k*k << endl;    return 0;}   Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе N = 2016.2. Назовите значение N, при вводе которого программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body935177\" width=\"100%\"><p class=\"left_margin\">Дано целое неотрицательное число N. Необходимо вывести два неотрицательных целых числа, которые при возведении к квадрат дадут результаты, наиболее близкие к N. Например, для N = 2016 нужно вывести числа 44 и 45 (44<sup>2</sup> = 1936, 45<sup>2</sup> = 2025), а для N = 9 нужно вывести числа 2 и 3. Для решения этой задачи ученик написал программу, но, к сожалению, его программа — неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"50%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 1<p> WHILE K*K &lt;= N<p>   K = K + 1<p> WEND<p> PRINT (K-1)*(K-1), K*K<p> END<p> </p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 1<p>while k*k &lt;= n:<p>    k = k + 1<p>print((k-1)*(k-1),k*k)<p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Алгоритмический язык</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n, k<p>  ввод n<p>  k := 1<p>  нц пока k*k &lt;= n<p>    k := k + 1<p>  кц<p>  вывод (k-1)*(k-1), \" \", k*k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>  read(n);<p>  k := 1;<p>  while k*k &lt;= n do<p>    k := k + 1;<p>  writeln((k-1)*(k-1),' ',k*k)<p>end.<p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>    int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 1;<p>    while (k*k &lt;= n)<p>        k = k + 1;<p>    cout &lt;&lt; (k-1)*(k-1) &lt;&lt;  k*k &lt;&lt; endl;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе N = 2016.<p class=\"left_margin\">2. Назовите значение N, при вводе которого программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.<p> </p><p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 2016 программа выведет числа 1936 и 2025.2. Программа выведет верный ответ при N = 0. В ответе будут числа 0 и 1.3. Программа содержит две ошибки:1) неверная организация цикла;2) неверный вывод результатов. Пример исправления для языка Паскаль:Первая ошибка:while k*k <= n doИсправленная строка:while k*k < n doВторая ошибка:writeln((k-1)*(k-1),' ',k*k)Исправленная строка:writeln(k-1,' ',k) В программах на других языках ошибочные строки и их исправления аналогичны. Замечание. N = 0 — единственное подходящее значение. Программа выводит квадраты вместо самих чисел. Для 0 и 1 числа совпадают с квадратами, поэтому при N = 0 и N = 1 должен получаться правильный результат. Однако при N = 1 из-за ошибки в организации цикла вместо верного результата «0 1» выводится «1 4», поэтому правильный ответ получается только при N = 0.В работе достаточно привести правильное значение N и ответ программы, подробное обоснование не требуется.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11253\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе N = 2016 программа выведет числа 1936 и 2025.<p class=\"left_margin\">2. Программа выведет верный ответ при N = 0. В ответе будут числа 0 и 1.<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверная организация цикла;<p class=\"left_margin\">2) неверный вывод результатов.<p> </p><p><b>Пример исправления для языка Паскаль</b>:<p class=\"left_margin\">Первая ошибка:<p class=\"left_margin\"><tt>while k*k &lt;= n do</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>while k*k &lt; n do</tt><p class=\"left_margin\">Вторая ошибка:<p class=\"left_margin\"><tt>writeln((k-1)*(k-1),' ',k*k)</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>writeln(k-1,' ',k)</tt><p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p> </p><p><i>Замечание.</i> N = 0 — единственное подходящее значение. Программа выводит квадраты вместо самих чисел. Для 0 и 1 числа совпадают с квадратами, поэтому при N = 0 и N = 1 должен получаться правильный результат. Однако при N = 1 из-за ошибки в организации цикла вместо верного результата «0 1» выводится «1 4», поэтому правильный ответ получается только при N = 0.<p class=\"left_margin\">В работе достаточно привести правильное значение N и ответ программы, подробное обоснование не требуется.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "11253"
        },
        {
            "answer": "Решение.1. При вводе N = 2016 программа выведет числа 44 и 45.2. Программа выведет верный ответ при N = 0. В ответе будут числа 0 и 1.3. Программа содержит две ошибки:1) неверная организация цикла;2) неверный вывод результатов. Пример исправления для языка Паскаль:Первая ошибка:while k*k <= n doИсправленная строка:while k*k < n doВторая ошибка:writeln(k-1, \" \", k)Исправленная строка:writeln((k-1)*(k-1), \" \", k*k) В программах на других языках ошибочные строки и их исправления аналогичны. Замечание. N = 0 – единственное подходящее значение. Программа выводит вместо квадратов числа, которые нужно возвести в квадрат. Для 0 и 1 числа совпадают с квадратами, поэтому при N = 0 и N = 1 должен получаться правильный результат. Однако при N = 1 из-за ошибки в организации цикла вместо верного результата «0 1» выводится «1 2», поэтому правильный ответ получается только при N = 0. В работе достаточно привести правильное значение N и ответ программы, подробное обоснование не требуется.",
            "parsed": "2019-04-29 21:09:40.364845",
            "question": "Дано целое неотрицательное число N. Необходимо вывести два ближайших к нему точных квадрата в порядке возрастания. Например, для N = 2016 нужно вывести числа 1936 и 2025 (1936 = 442, 2025 = 452), а для N = 9 нужно вывести числа 4 и 9.Для решения этой задачи ученик написал программу, но, к сожалению, его программа — неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, K AS INTEGER INPUT N K = 1 WHILE K*K <= N   K = K + 1 WEND PRINT K-1, K END n = int(input())k = 1while k*k <= n:    k = k + 1print(k-1,k) Алгоритмический языкПаскальалгнач  цел n, k  ввод n  k := 1  нц пока k*k <= n    k := k + 1  кц  вывод k-1, \" \", kконvar n, k: integer;begin  read(n);  k := 1;  while k*k <= n do    k := k + 1;  writeln(k-1, \" \", k)end.Си++#include <iostream>using namespace std;    int main(){    int n, k;    cin >> n;    k = 1;    while (k*k <= n)        k = k + 1;    cout << k-1 << k << endl;    return 0;}   Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе N = 2016.2. Назовите значение N, при вводе которого программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). ля каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body934636\" width=\"100%\"><p class=\"left_margin\">Дано целое неотрицательное число N. Необходимо вывести два ближайших к нему точных квадрата в порядке возрастания. Например, для N = 2016 нужно вывести числа 1936 и 2025 (1936 = 44<sup>2</sup>, 2025 = 45<sup>2</sup>), а для N = 9 нужно вывести числа 4 и 9.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа — неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"50%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 1<p> WHILE K*K &lt;= N<p>   K = K + 1<p> WEND<p> PRINT K-1, K<p> END<p> </p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 1<p>while k*k &lt;= n:<p>    k = k + 1<p>print(k-1,k)<p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Алгоритмический язык</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n, k<p>  ввод n<p>  k := 1<p>  нц пока k*k &lt;= n<p>    k := k + 1<p>  кц<p>  вывод k-1, \" \", k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>  read(n);<p>  k := 1;<p>  while k*k &lt;= n do<p>    k := k + 1;<p>  writeln(k-1, \" \", k)<p>end.<p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>    int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 1;<p>    while (k*k &lt;= n)<p>        k = k + 1;<p>    cout &lt;&lt; k-1 &lt;&lt; k &lt;&lt; endl;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе N = 2016.<p class=\"left_margin\">2. Назовите значение N, при вводе которого программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). ля каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.<p> </p><p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 2016 программа выведет числа 44 и 45.2. Программа выведет верный ответ при N = 0. В ответе будут числа 0 и 1.3. Программа содержит две ошибки:1) неверная организация цикла;2) неверный вывод результатов. Пример исправления для языка Паскаль:Первая ошибка:while k*k <= n doИсправленная строка:while k*k < n doВторая ошибка:writeln(k-1, \" \", k)Исправленная строка:writeln((k-1)*(k-1), \" \", k*k) В программах на других языках ошибочные строки и их исправления аналогичны. Замечание. N = 0 – единственное подходящее значение. Программа выводит вместо квадратов числа, которые нужно возвести в квадрат. Для 0 и 1 числа совпадают с квадратами, поэтому при N = 0 и N = 1 должен получаться правильный результат. Однако при N = 1 из-за ошибки в организации цикла вместо верного результата «0 1» выводится «1 2», поэтому правильный ответ получается только при N = 0. В работе достаточно привести правильное значение N и ответ программы, подробное обоснование не требуется.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11280\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе N = 2016 программа выведет числа 44 и 45.<p class=\"left_margin\">2. Программа выведет верный ответ при N = 0. В ответе будут числа 0 и 1.<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверная организация цикла;<p class=\"left_margin\">2) неверный вывод результатов.<p> </p><p><b>Пример исправления для языка Паскаль</b>:<p class=\"left_margin\">Первая ошибка:<p class=\"left_margin\"><tt>while k*k &lt;= n do</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>while k*k &lt; n do</tt><p class=\"left_margin\">Вторая ошибка:<p class=\"left_margin\"><tt>writeln(k-1, \" \", k)</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>writeln((k-1)*(k-1), \" \", k*k)</tt><p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p> </p><p><i>Замечание.</i> N = 0 – единственное подходящее значение. Программа выводит вместо квадратов числа, которые нужно возвести в квадрат. Для 0 и 1 числа совпадают с квадратами, поэтому при N = 0 и N = 1 должен получаться правильный результат. Однако при N = 1 из-за ошибки в организации цикла вместо верного результата «0 1» выводится «1 2», поэтому правильный ответ получается только при N = 0. В работе достаточно привести правильное значение N и ответ программы, подробное обоснование не требуется.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "11280"
        },
        {
            "answer": "Решение.1. При вводе числа 64 программа выведет \"Не существует\".2. n = 4 (выдаст k = 1)3. Пример исправления для языка Python 3.3.Первая ошибка:while k % 4 == 0:Исправленная строка:while n % 4 == 0:Вторая ошибка:if n <= 4:Исправленная строка:if n == 1: 3. Пример исправления для языка Паскаль. Первая ошибка: while (k mod 4 = 0); Исправленная строка: while (n mod 4 = 0); Вторая ошибка: if n <= 4; Исправленная строка: if n = 1;",
            "parsed": "2019-04-29 21:09:40.861323",
            "question": "Ученик написал программу, определяющую, какой степенью числа 4 является введенное. Например, для 16 это 2, так как 42 = 16. Если же такой степени нет, то необходимо вывести сообщение \"Не существует\". К сожалению, ученик написал программу неверно.   БейсикPython DIM N, K AS INTEGER  INPUT N K = 0 WHILE K MOD 4 = 0    N = N \\ 4    K = K + 1 WEND IF N <= 4 THEN    PRINT K ELSE    PRINT \"Не существует\" END IF END n = int(input())k = 0while k%4 == 0:    n = n // 4    k = k + 1if n <= 4:    print(k)else:    print(\"Не существует\")  ПаскальАлгоритмический языкvar n, k: integer;begin    read(n);    k := 0;    while k mod 4 = 0 do begin        n := n div 4;        k := k + 1;    end;    if n <= 4 then        writeln(k)    else        writeln('Не существует')end. алгнач    цел n, k    ввод n    k := 0    нц пока mod(k, 4)=0        n := div(n,4)        k := k + 1    кц    если n <= 4        то вывод k        иначе вывод \"Не существует\"    всеконСи++#include <iostream>using namespace std;int main(){    int n, k;    cin >> n;    k = 0;    while (k%4 == 0) {        n = n / 4;        k = k + 1;    }    if (n <= 4)        cout « k « endl;    else        cout << \"Не существует\";    return 0;}    Последовательно выполните следующее. 1. Что выдаст программа при вводе числа 64?2. При вводе какого числа программа выдаст верный ответ? Укажите этот ответ.3. Исправьте программу. Запишите ошибочную строку, затем исправленный вариант. Помните, что нужно исправить имеющуюся программу, а не писать свою, хоть и с лучшим алгоритмом.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body934596\" width=\"100%\"><p class=\"left_margin\">Ученик написал программу, определяющую, какой степенью числа 4 является введенное. Например, для 16 это 2, так как 4<sup>2</sup> = 16. Если же такой степени нет, то необходимо вывести сообщение \"Не существует\". К сожалению, ученик написал программу неверно. <p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p>  INPUT N<p> K = 0<p> WHILE K MOD 4 = 0<p>    N = N \\ 4<p>    K = K + 1<p> WEND<p> IF N &lt;= 4 THEN<p>    PRINT K<p> ELSE<p>    PRINT \"Не существует\"<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 0<p>while k%4 == 0:<p>    n = n // 4<p>    k = k + 1<p>if n &lt;= 4:<p>    print(k)<p>else:<p>    print(\"Не существует\")<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>    read(n);<p>    k := 0;<p>    while k mod 4 = 0 do begin<p>        n := n div 4;<p>        k := k + 1;<p>    end;<p>    if n &lt;= 4 then<p>        writeln(k)<p>    else<p>        writeln('Не существует')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n, k<p>    ввод n<p>    k := 0<p>    нц пока mod(k, 4)=0<p>        n := div(n,4)<p>        k := k + 1<p>    кц<p>    если n &lt;= 4<p>        то вывод k<p>        иначе вывод \"Не существует\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 0;<p>    while (k%4 == 0) {<p>        n = n / 4;<p>        k = k + 1;<p>    }<p>    if (n &lt;= 4)<p>        cout « k « endl;<p>    else<p>        cout &lt;&lt; \"Не существует\";<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Что выдаст программа при вводе числа 64?<p class=\"left_margin\">2. При вводе какого числа программа выдаст верный ответ? Укажите этот ответ.<p class=\"left_margin\">3. Исправьте программу. Запишите ошибочную строку, затем исправленный вариант. Помните, что нужно исправить имеющуюся программу, а не писать свою, хоть и с лучшим алгоритмом.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 64 программа выведет \"Не существует\".2. n = 4 (выдаст k = 1)3. Пример исправления для языка Python 3.3.Первая ошибка:while k % 4 == 0:Исправленная строка:while n % 4 == 0:Вторая ошибка:if n <= 4:Исправленная строка:if n == 1: 3. Пример исправления для языка Паскаль. Первая ошибка: while (k mod 4 = 0); Исправленная строка: while (n mod 4 = 0); Вторая ошибка: if n <= 4; Исправленная строка: if n = 1;",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11320\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 64 программа выведет \"Не существует\".<p class=\"left_margin\">2. <tt>n = 4</tt> (выдаст <tt>k = 1</tt>)<p class=\"left_margin\">3. Пример исправления для языка Python 3.3.<p class=\"left_margin\">Первая ошибка:<p class=\"left_margin\"><tt>while k % 4 == 0:</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>while n % 4 == 0:</tt><p class=\"left_margin\">Вторая ошибка:<p class=\"left_margin\"><tt>if n &lt;= 4:</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>if n == 1:</tt><p> </p><p class=\"left_margin\">3. Пример исправления для языка Паскаль. <p class=\"left_margin\">Первая ошибка: <p class=\"left_margin\">while (k mod 4 = 0); <p class=\"left_margin\">Исправленная строка: <p class=\"left_margin\">while (n mod 4 = 0); <p class=\"left_margin\">Вторая ошибка: <p class=\"left_margin\">if n &lt;= 4; <p class=\"left_margin\">Исправленная строка: <p class=\"left_margin\">if n = 1;</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ 16.06.2016 по информатике. Основная волна. Вариант 41 (Часть С)",
            "task_id": "11320"
        },
        {
            "answer": "Решение.1) Выведет 1.2) n = 5 (выведет 1)3) Ошибочно while (k mod 5=0)исправлено while (n mod 5=0)ошибочно if (k<=5)исправлено if (n=1)",
            "parsed": "2019-04-29 21:09:41.243138",
            "question": "Ученик написал программу, определяющую, какой степенью числа 5 является введенное. Например, для 25 это 2, так как 52 = 25. Если же такой степени нет, то необходимо вывести сообщение \"Не существует\". К сожалению, ученик написал программу неверно.   БейсикPython DIM N, K AS INTEGER  INPUT N K = 0 WHILE K MOD 5 = 0    N = N \\ 5    K = K + 1 WEND IF K <= 5 THEN    PRINT K ELSE    PRINT \"Не существует\" END IF END n = int(input())k = 0while k%5 == 0:    n = n // 5    k = k + 1if k <= 5:    print(k)else:    print(\"Не существует\")  ПаскальАлгоритмический языкvar n, k: integer;begin    read(n);    k := 0;    while k mod 5 = 0 do begin        n := n div 5;        k := k + 1;    end;    if k <= 5 then        writeln(k)    else        writeln('Не существует')end. алгнач    цел n, k    ввод n    k := 0    нц пока mod(k, 5)=0        n := div(n,5)        k := k + 1    кц    если k <= 5        то вывод k        иначе вывод \"Не существует\"    всеконСи++#include <iostream>using namespace std;int main(){    int n, k;    cin >> n;    k = 0;    while (k%5 == 0) {        n = n / 5;        k = k + 1;    }    if (k <= 5)        cout « k « endl;    else        cout << \"Не существует\";    return 0;}   Последовательно выполните следующее. 1. Что выдаст программа при вводе числа 125?2. При вводе какого числа программа выдаст верный ответ? Укажите этот ответ.3. Исправьте программу. Запишите ошибочную строку, затем исправленный вариант. Помните, что нужно исправить имеющуюся программу, а не писать свою, хоть и с лучшим алгоритмом'",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body934592\" width=\"100%\"><p class=\"left_margin\">Ученик написал программу, определяющую, какой степенью числа 5 является введенное. Например, для 25 это 2, так как 5<sup>2</sup> = 25. Если же такой степени нет, то необходимо вывести сообщение \"Не существует\". К сожалению, ученик написал программу неверно. <p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p>  INPUT N<p> K = 0<p> WHILE K MOD 5 = 0<p>    N = N \\ 5<p>    K = K + 1<p> WEND<p> IF K &lt;= 5 THEN<p>    PRINT K<p> ELSE<p>    PRINT \"Не существует\"<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 0<p>while k%5 == 0:<p>    n = n // 5<p>    k = k + 1<p>if k &lt;= 5:<p>    print(k)<p>else:<p>    print(\"Не существует\")<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>    read(n);<p>    k := 0;<p>    while k mod 5 = 0 do begin<p>        n := n div 5;<p>        k := k + 1;<p>    end;<p>    if k &lt;= 5 then<p>        writeln(k)<p>    else<p>        writeln('Не существует')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n, k<p>    ввод n<p>    k := 0<p>    нц пока mod(k, 5)=0<p>        n := div(n,5)<p>        k := k + 1<p>    кц<p>    если k &lt;= 5<p>        то вывод k<p>        иначе вывод \"Не существует\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 0;<p>    while (k%5 == 0) {<p>        n = n / 5;<p>        k = k + 1;<p>    }<p>    if (k &lt;= 5)<p>        cout « k « endl;<p>    else<p>        cout &lt;&lt; \"Не существует\";<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Что выдаст программа при вводе числа 125?<p class=\"left_margin\">2. При вводе какого числа программа выдаст верный ответ? Укажите этот ответ.<p class=\"left_margin\">3. Исправьте программу. Запишите ошибочную строку, затем исправленный вариант. Помните, что нужно исправить имеющуюся программу, а не писать свою, хоть и с лучшим алгоритмом'</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) Выведет 1.2) n = 5 (выведет 1)3) Ошибочно while (k mod 5=0)исправлено while (n mod 5=0)ошибочно if (k<=5)исправлено if (n=1)",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11324\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) Выведет 1.<p class=\"left_margin\">2) <tt>n = 5</tt> (выведет 1)<p class=\"left_margin\">3) Ошибочно <tt>while (k mod 5=0)</tt><p class=\"left_margin\">исправлено <tt>while (n mod 5=0)</tt><p class=\"left_margin\">ошибочно <tt>if (k&lt;=5)</tt><p class=\"left_margin\">исправлено <tt>if (n=1)</tt></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ 16.06.2016 по информатике. Основная волна. Вариант 52 (Часть С)",
            "task_id": "11324"
        },
        {
            "answer": "Решение.1) Выведет 5.2) 43) Ошибочно k:= k + n div 4;исправлено k:= k + 1ошибочно if n <= 4 thenисправлено if n = 1 then",
            "parsed": "2019-04-29 21:09:41.716551",
            "question": "Дано целое положительное число N, не превосходящее 1000. Необходимо определить, является ли это число степенью числа 4. То есть требуется определить, существует ли такое целое число К, что 4K = N, и вывести это число либо сообщение, что такого числа не существует. Для решения этой задачи ученик написал программу, но, к сожалению, его программа оказалась неверной.   БейсикPython DIM N, K AS INTEGER  INPUT N K = 0 WHILE N MOD 4 = 0    K = K + (n \\ 4)    N = n div 4 WEND IF N <= 4 THEN    PRINT K ELSE    PRINT \"Не существует\" END IF END n = int(input())k = 0while n%4 == 0:    k = k + (n // 4)    n = n // 4if n <= 4:    print(k)else:    print(\"Не существует\")  ПаскальАлгоритмический языкvar n, k: integer;begin    read(n);    k := 0;    while n mod 4 = 0 do begin        k := k + n div 4;        n := n div 4;    end;    if n <= 4 then        writeln(k)    else        writeln('Не существует')end. алгнач    цел n, k    ввод n    k := 0    нц пока mod(n, 4)=0        k := k + div(n, 4)        n := div(n,4)    кц    если n <= 4        то вывод k        иначе вывод \"Не существует\"    всеконСи++#include <iostream>using namespace std;int main(){    int n, k;    cin >> n;    k = 0;    while (n%4 == 0) {        k = k + n / 4;        n = n / 4;    }    if (n <= 4)        cout « k « endl;    else        cout << \"Не существует\";    return 0;}    Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 16. 2. Приведите пример числа, при вводе которого приведённая программа напечатает то, что требуется. 3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body934589\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i>, не превосходящее 1000. Необходимо определить, является ли это число степенью числа 4. То есть требуется определить, существует ли такое целое число <i>К</i>, что 4<sup><i>K</i></sup> = <i>N</i>, и вывести это число либо сообщение, что такого числа не существует. Для решения этой задачи ученик написал программу, но, к сожалению, его программа оказалась неверной. <p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p>  INPUT N<p> K = 0<p> WHILE N MOD 4 = 0<p>    K = K + (n \\ 4)<p>    N = n div 4<p> WEND<p> IF N &lt;= 4 THEN<p>    PRINT K<p> ELSE<p>    PRINT \"Не существует\"<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 0<p>while n%4 == 0:<p>    k = k + (n // 4)<p>    n = n // 4<p>if n &lt;= 4:<p>    print(k)<p>else:<p>    print(\"Не существует\")<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>    read(n);<p>    k := 0;<p>    while n mod 4 = 0 do begin<p>        k := k + n div 4;<p>        n := n div 4;<p>    end;<p>    if n &lt;= 4 then<p>        writeln(k)<p>    else<p>        writeln('Не существует')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n, k<p>    ввод n<p>    k := 0<p>    нц пока mod(n, 4)=0<p>        k := k + div(n, 4)<p>        n := div(n,4)<p>    кц<p>    если n &lt;= 4<p>        то вывод k<p>        иначе вывод \"Не существует\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 0;<p>    while (n%4 == 0) {<p>        k = k + n / 4;<p>        n = n / 4;<p>    }<p>    if (n &lt;= 4)<p>        cout « k « endl;<p>    else<p>        cout &lt;&lt; \"Не существует\";<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p> </p><p class=\"left_margin\">Последовательно выполните следующее. <p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 16. <p class=\"left_margin\">2. Приведите пример числа, при вводе которого приведённая программа напечатает то, что требуется. <p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) Выведет 5.2) 43) Ошибочно k:= k + n div 4;исправлено k:= k + 1ошибочно if n <= 4 thenисправлено if n = 1 then",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11329\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) Выведет 5.<p class=\"left_margin\">2) 4<p class=\"left_margin\">3) Ошибочно <tt>k:= k + n div 4;</tt><p class=\"left_margin\">исправлено <tt>k:= k + 1</tt><p class=\"left_margin\">ошибочно <tt>if n &lt;= 4 then</tt><p class=\"left_margin\">исправлено <tt>if n = 1 then</tt></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ 16.06.2016 по информатике. Основная волна. Вариант 77 (Часть С)",
            "task_id": "11329"
        },
        {
            "answer": "Решение.1) Выведет 6.2) 53) Ошибочно k:= k + n div 5;исправлено k:= k + 1ошибочно if n > 0 then writeln(k)исправлено if n = 1 then writeln(k)",
            "parsed": "2019-04-29 21:09:42.105689",
            "question": "Дано целое положительное число N, не превосходящее 1000. Необходимо определить, является ли это число степенью числа 5. То есть требуется определить, существует ли такое целое число К, что 5K = N, и вывести это число либо сообщение, что такого числа не существует. Для решения этой задачи ученик написал программу, но, к сожалению, его программа оказалась неверной.   БейсикPython DIM N, K AS INTEGER  INPUT N K = 0 WHILE N MOD 5 = 0    K = K + (n \\ 5)    N = n div 5 WEND IF N > 0 THEN    PRINT K ELSE    PRINT \"Не существует\" END IF END n = int(input())k = 0while n%5 == 0:    k = k + (n // 5)    n = n // 5if n > 0:    print(k)else:    print(\"Не существует\")  ПаскальАлгоритмический языкvar n, k: integer;begin    read(n);    k := 0;    while n mod 5 = 0 do begin        k := k + n div 5;        n := n div 5;    end;    if n > 0 then        writeln(k)    else        writeln('Не существует')end. алгнач    цел n, k    ввод n    k := 0    нц пока mod(n, 5)=0        k := k + div(n, 5)        n := div(n,5)    кц    если n > 0        то вывод k        иначе вывод \"Не существует\"    всеконСи++#include <iostream>using namespace std;int main(){    int n, k;    cin >> n;    k = 0;    while (n%5 == 0) {        k = k + n / 5;        n = n / 5;    }    if (n > 0)        cout « k « endl;    else        cout << \"Не существует\";    return 0;}    Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 25. 2. Приведите пример числа, при вводе которого приведённая программа напечатает то, что требуется. 3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body934585\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i>, не превосходящее 1000. Необходимо определить, является ли это число степенью числа 5. То есть требуется определить, существует ли такое целое число <i>К</i>, что 5<sup><i>K</i></sup> = <i>N</i>, и вывести это число либо сообщение, что такого числа не существует. Для решения этой задачи ученик написал программу, но, к сожалению, его программа оказалась неверной. <p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p>  INPUT N<p> K = 0<p> WHILE N MOD 5 = 0<p>    K = K + (n \\ 5)<p>    N = n div 5<p> WEND<p> IF N &gt; 0 THEN<p>    PRINT K<p> ELSE<p>    PRINT \"Не существует\"<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 0<p>while n%5 == 0:<p>    k = k + (n // 5)<p>    n = n // 5<p>if n &gt; 0:<p>    print(k)<p>else:<p>    print(\"Не существует\")<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>    read(n);<p>    k := 0;<p>    while n mod 5 = 0 do begin<p>        k := k + n div 5;<p>        n := n div 5;<p>    end;<p>    if n &gt; 0 then<p>        writeln(k)<p>    else<p>        writeln('Не существует')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n, k<p>    ввод n<p>    k := 0<p>    нц пока mod(n, 5)=0<p>        k := k + div(n, 5)<p>        n := div(n,5)<p>    кц<p>    если n &gt; 0<p>        то вывод k<p>        иначе вывод \"Не существует\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 0;<p>    while (n%5 == 0) {<p>        k = k + n / 5;<p>        n = n / 5;<p>    }<p>    if (n &gt; 0)<p>        cout « k « endl;<p>    else<p>        cout &lt;&lt; \"Не существует\";<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> <p> </p><p class=\"left_margin\">Последовательно выполните следующее. <p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 25. <p class=\"left_margin\">2. Приведите пример числа, при вводе которого приведённая программа напечатает то, что требуется. <p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) Выведет 6.2) 53) Ошибочно k:= k + n div 5;исправлено k:= k + 1ошибочно if n > 0 then writeln(k)исправлено if n = 1 then writeln(k)",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11333\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) Выведет 6.<p class=\"left_margin\">2) 5<p class=\"left_margin\">3) Ошибочно <tt>k:= k + n div 5;</tt><p class=\"left_margin\">исправлено <tt>k:= k + 1</tt><p class=\"left_margin\">ошибочно <tt>if n &gt; 0 then writeln(k)</tt><p class=\"left_margin\">исправлено <tt>if n = 1 then writeln(k)</tt></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ 16.06.2016 по информатике. Основная волна. Вариант 66 (Часть С)",
            "task_id": "11333"
        },
        {
            "answer": "Решение.1. При вводе числа 9 программа выведет число 1.2. Примеры чисел, при вводе которых программа выводит корректный ответ: 2, 3. Других чисел нет.Комментарий для экспертов. После выполнения программы при любом введённом n значение k будет равно 1 (тело цикла выполнится ровно 1 раз).В результате программа напечатает либо 1 (если n ≥ 3), либо «Не существует» (в противном случае). Таким образом, программа выводит корректный ответ, только если введено 2 или 3. Экзаменуемому достаточно указать любое из этих чисел. Отметим, что при n=1 программа напечатает «Не существует», что неверно (должно быть напечатано «0»).3. Программа содержит две ошибки:1) неверное условие цикла;2) неверное условие при печати результата.Пример исправления для языка Паскаль:Первая ошибка:while k mod 3 = 0 do beginИсправленная строка:while n mod 3 = 0 do beginВторая ошибка:if n>0 thenИсправленная строка:if n=1 thenПояснение для экспертаПосле исправления первой ошибки в результате выполнения цикла значение переменной n будет равно n0/(3k), где n0 — введённое пользователем значение; k — максимальный показатель степени, при котором 3k является делителем числа n0. Число n0 является степенью числа 3, если n0 = 3k, т. е. n0/(3k) = 1.В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:42.488205",
            "question": "Дано целое положительное число N, не превосходящее 1000. Необходимо определить, является ли это число степенью числа 3. То есть требуется определить, существует ли такое целое число K, что 3K = N, и вывести это число либо сообщение, что такого числа не существует.Для решения этой задачи ученик написал программу, но, к сожалению, его программа оказалась неверной. Ниже эта написанная им программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER  INPUT N K = 0 WHILE K MOD 3 = 0    K = K + 1    N = N \\ 3 WEND IF N > 0 THEN    PRINT K ELSE    PRINT \"Не существует\" END IF END n = int(input())k = 0while k%3 == 0:    k = k + 1    n = n // 3if n > 0:    print(k)else:    print(\"Не существует\")  ПаскальАлгоритмический языкvar n, k: integer;begin    read(n);    k := 0;    while k mod 3 = 0 do begin        k := k + 1;        n := n div 3;    end;    if n > 0 then        writeln(k)    else        writeln('Не существует')end. алгнач    цел n, k    ввод n    k := 0    нц пока mod(k, 3)=0        k := k + 1        n := div(n,3)    кц    если n > 0        то вывод k        иначе вывод \"Не существует\"    всеконСи++#include <iostream>using namespace std;int main(){    int n, k;    cin >> n;    k = 0;    while (k%3 == 0) {        k = k + 1;        n = n / 3;    }    if (n > 0)        cout « k « endl;    else        cout << \"Не существует\";    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 9.2. Приведите пример числа, при вводе которого приведённая программа напечатает то, что требуется.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body934556\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i>, не превосходящее 1000. Необходимо определить, является ли это число степенью числа 3. То есть требуется определить, существует ли такое целое число <i>K</i>, что 3<sup><i>K</i></sup> = <i>N</i>, и вывести это число либо сообщение, что такого числа не существует.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа оказалась неверной. Ниже эта написанная им программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p>  INPUT N<p> K = 0<p> WHILE K MOD 3 = 0<p>    K = K + 1<p>    N = N \\ 3<p> WEND<p> IF N &gt; 0 THEN<p>    PRINT K<p> ELSE<p>    PRINT \"Не существует\"<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 0<p>while k%3 == 0:<p>    k = k + 1<p>    n = n // 3<p>if n &gt; 0:<p>    print(k)<p>else:<p>    print(\"Не существует\")<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>    read(n);<p>    k := 0;<p>    while k mod 3 = 0 do begin<p>        k := k + 1;<p>        n := n div 3;<p>    end;<p>    if n &gt; 0 then<p>        writeln(k)<p>    else<p>        writeln('Не существует')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n, k<p>    ввод n<p>    k := 0<p>    нц пока mod(k, 3)=0<p>        k := k + 1<p>        n := div(n,3)<p>    кц<p>    если n &gt; 0<p>        то вывод k<p>        иначе вывод \"Не существует\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 0;<p>    while (k%3 == 0) {<p>        k = k + 1;<p>        n = n / 3;<p>    }<p>    if (n &gt; 0)<p>        cout « k « endl;<p>    else<p>        cout &lt;&lt; \"Не существует\";<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 9.<p class=\"left_margin\">2. Приведите пример числа, при вводе которого приведённая программа напечатает то, что требуется.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 9 программа выведет число 1.2. Примеры чисел, при вводе которых программа выводит корректный ответ: 2, 3. Других чисел нет.Комментарий для экспертов. После выполнения программы при любом введённом n значение k будет равно 1 (тело цикла выполнится ровно 1 раз).В результате программа напечатает либо 1 (если n ≥ 3), либо «Не существует» (в противном случае). Таким образом, программа выводит корректный ответ, только если введено 2 или 3. Экзаменуемому достаточно указать любое из этих чисел. Отметим, что при n=1 программа напечатает «Не существует», что неверно (должно быть напечатано «0»).3. Программа содержит две ошибки:1) неверное условие цикла;2) неверное условие при печати результата.Пример исправления для языка Паскаль:Первая ошибка:while k mod 3 = 0 do beginИсправленная строка:while n mod 3 = 0 do beginВторая ошибка:if n>0 thenИсправленная строка:if n=1 thenПояснение для экспертаПосле исправления первой ошибки в результате выполнения цикла значение переменной n будет равно n0/(3k), где n0 — введённое пользователем значение; k — максимальный показатель степени, при котором 3k является делителем числа n0. Число n0 является степенью числа 3, если n0 = 3k, т. е. n0/(3k) = 1.В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol11360\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 9 программа выведет число 1.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит корректный ответ: 2, 3. Других чисел нет.<p class=\"left_margin\">Комментарий для экспертов. После выполнения программы при любом введённом <i>n</i> значение <i>k</i> будет равно 1 (тело цикла выполнится ровно 1 раз).<p class=\"left_margin\">В результате программа напечатает либо 1 (если <i>n</i> ≥ 3), либо «Не существует» (в противном случае). Таким образом, программа выводит корректный ответ, только если введено 2 или 3. Экзаменуемому достаточно указать любое из этих чисел. Отметим, что при n=1 программа напечатает «Не существует», что неверно (должно быть напечатано «0»).<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверное условие цикла;<p class=\"left_margin\">2) неверное условие при печати результата.<p class=\"left_margin\">Пример исправления для языка Паскаль:<p class=\"left_margin\">Первая ошибка:<p class=\"left_margin\"><tt>while k mod 3 = 0 do begin</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>while n mod 3 = 0 do begin</tt><p class=\"left_margin\">Вторая ошибка:<p class=\"left_margin\"><tt>if n&gt;0 then</tt><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><tt>if n=1 then</tt><p class=\"left_margin\">Пояснение для эксперта<p class=\"left_margin\">После исправления первой ошибки в результате выполнения цикла значение переменной <i>n</i> будет равно <i>n</i><sub>0</sub>/(3<sup><i>k</i></sup>), где <i>n</i><sub>0</sub> — введённое пользователем значение; <i>k</i> — максимальный показатель степени, при котором 3<sup><i>k</i></sup> является делителем числа <i>n</i><sub>0</sub>. Число <i>n</i><sub>0</sub> является степенью числа 3, если <i>n</i><sub>0</sub> = 3<sup><i>k</i></sup>, т. е. <i>n</i><sub>0</sub>/(3<sup><i>k</i></sup>) = 1.<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Де­мон­стра­ци­он­ная вер­сия ЕГЭ—2017 по информатике.",
            "task_id": "11360"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков.1. Программа выведет число 1.2. Программа выдаёт правильный ответ, например, для числа 160.Замечание для проверяющего. Программа работает неправильно из-за неверного задания начального значения счётчика и неверного увеличения счётчика. Соответственно, программа будет работать верно, если в числе есть ровно один значащий 0 и нет других цифр, кратных 5.3. В программе есть две ошибки. Первая ошибка. Неверное начальное значение счётчика.Строка с ошибкой: count := 1;Верное исправление:count := 0; Вторая ошибка. Неверное изменение счётчика.Строка с ошибкой:count := count + digit;Верное исправление:count := count + 1;",
            "parsed": "2019-04-29 21:10:05.067475",
            "question": "На обработку поступает натуральное число, не превышающее 109. Нужно написать программу, которая выводит на экран количество цифр этого числа, кратных 5. Если в числе нет цифр, кратных 5, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.Напоминание: 0 делится на любое натуральное число.  БейсикPython DIM N, DIGIT, COUNT AS LONG INPUT N COUNT = 1 WHILE N > 0    DIGIT = N MOD 10    IF DIGIT MOD 5 = 0 THEN        COUNT = COUNT + DIGIT    END IF    N = N \\ 10 WEND IF COUNT = 0 THEN    PRINT \"NO\" ELSE    PRINT COUNT END IF N = int(input()) count = 1 while N > 0:    digit = N % 10    if digit % 5 == 0:        count = count + digit    N = N // 10 if count == 0:    print(\"NO\") else:    print(count)  ПаскальАлгоритмический язык var N, digit, count: longint; begin    readln(N);    count := 1;    while N > 0 do     begin        digit := N mod 10;        if digit mod 5 = 0  then            count := count + digit;        N := N div 10;    end;    if count = 0 then        writeln('NO')    else        writeln(count) end.   алг  нач    цел N, digit, count    ввод N    count := 1    нц пока N > 0        digit := mod(N,10)        если mod(digit,5) = 0 то            count := count + digit        все        N := div(N,10)    кц    если count = 0 то        вывод \"NO\"    иначе        вывод count    все кон Си++#include <iostream>using namespace std; int main() {    int N, digit, count;    cin >> N;    count = 1;    while (N > 0)     {        digit = N % 10;        if (digit % 5 == 0)            count = count + digit;        N = N / 10;    }    if (count == 0)        cout << \"NO\";    else        cout << count << endl;    return 0; }   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 164.2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки. Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body941668\" width=\"100%\"><p class=\"left_margin\">На обработку поступает натуральное число, не превышающее 10<sup>9</sup>. Нужно написать программу, которая выводит на экран количество цифр этого числа, кратных 5. Если в числе нет цифр, кратных 5, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p><b>Напоминание:</b> 0 делится на любое натуральное число.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, COUNT AS LONG<br/><p> INPUT N<p> COUNT = 1<p> WHILE N &gt; 0<p>    DIGIT = N MOD 10<p>    IF DIGIT MOD 5 = 0 THEN<p>        COUNT = COUNT + DIGIT<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF COUNT = 0 THEN<p>    PRINT \"NO\"<p> ELSE<p>    PRINT COUNT<p> END IF<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p> count = 1<p> while N &gt; 0:<p>    digit = N % 10<p>    if digit % 5 == 0:<p>        count = count + digit<p>    N = N // 10<p> if count == 0:<p>    print(\"NO\")<p> else:<p>    print(count)<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var N, digit, count: longint;<p> begin<p>    readln(N);<p>    count := 1;<p>    while N &gt; 0 do <p>    begin<p>        digit := N mod 10;<p>        if digit mod 5 = 0  then<p>            count := count + digit;<p>        N := N div 10;<p>    end;<p>    if count = 0 then<p>        writeln('NO')<p>    else<p>        writeln(count)<p> end.<p> </p><p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг <p> нач<p>    цел N, digit, count<p>    ввод N<p>    count := 1<p>    нц пока N &gt; 0<p>        digit := mod(N,10)<p>        если mod(digit,5) = 0 то<p>            count := count + digit<p>        все<p>        N := div(N,10)<p>    кц<p>    если count = 0 то<p>        вывод \"NO\"<p>    иначе<p>        вывод count<p>    все<p> кон<p> </p><p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main()<p> {<p>    int N, digit, count;<p>    cin &gt;&gt; N;<p>    count = 1;<p>    while (N &gt; 0) <p>    {<p>        digit = N % 10;<p>        if (digit % 5 == 0)<p>            count = count + digit;<p>        N = N / 10;<p>    }<p>    if (count == 0)<p>        cout &lt;&lt; \"NO\";<p>    else<p>        cout &lt;&lt; count &lt;&lt; endl;<p>    return 0;<p> }<p> </p><p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 164.<p class=\"left_margin\">2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку <p>и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки. <p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, <p>а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков.1. Программа выведет число 1.2. Программа выдаёт правильный ответ, например, для числа 160.Замечание для проверяющего. Программа работает неправильно из-за неверного задания начального значения счётчика и неверного увеличения счётчика. Соответственно, программа будет работать верно, если в числе есть ровно один значащий 0 и нет других цифр, кратных 5.3. В программе есть две ошибки. Первая ошибка. Неверное начальное значение счётчика.Строка с ошибкой: count := 1;Верное исправление:count := 0; Вторая ошибка. Неверное изменение счётчика.Строка с ошибкой:count := count + digit;Верное исправление:count := count + 1;",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol12440\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков.<p class=\"left_margin\">1. Программа выведет число 1.<p class=\"left_margin\">2. Программа выдаёт правильный ответ, например, для числа 160.<p class=\"left_margin\">Замечание для проверяющего. Программа работает неправильно из-за неверного задания начального значения счётчика и неверного увеличения счётчика. Соответственно, программа будет работать верно, если в числе есть ровно один значащий 0 и нет других цифр, кратных 5.<p class=\"left_margin\">3. В программе есть две ошибки.<p> </p><p><b>Первая ошибка.</b> Неверное начальное значение счётчика.<p class=\"left_margin\">Строка с ошибкой: <p><i>count := 1</i>;<p class=\"left_margin\">Верное исправление:<p><i>count := 0</i>;<p> </p><p><b>Вторая ошибка.</b> Неверное изменение счётчика.<p class=\"left_margin\">Строка с ошибкой:<p><i>count := count + digit</i>;<p class=\"left_margin\">Верное исправление:<p><i>count := count + 1</i>;</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Задания для школы экспертов. Информатика. 2016 год.",
            "task_id": "12440"
        },
        {
            "answer": "Решение.1) При вводе числа 645 программа выдает 4. Поскольку:в первый раз сумм=645 mod 10 =5.Далее:сумм= 5(т.к. 5 mod 3 >0)сумм=4(т.к. 4 mod 3>0)Т.е. 6 mod 3 = 0 — ответ не изменится.2) При вводе числа 103. Cначала сумм станет равно 3, потом в цикле происходит переприсвоение этого значения на 1, а сумма цифр, которые не кратны трем в числе 103, как раз равна 1. 3.1) В начале не нужна строчка  sum := N mod 10; т.к. в 1 раз мы сделаем тоже самое в цикле, а sum изначально сделаем 0, как и должно быть.3.2) Нам нужно заменить sum := digit; на sum := sum + digit; т.к. иначе, мы не складываем наши цифры, а обновляем их.",
            "parsed": "2019-04-29 21:10:05.493379",
            "question": "На обработку поступает натуральное число, не превышающее 109. Нужно написать программу, которая выводит на экран сумму цифр числа, НЕ кратных 3. Если в числе нет цифр, не кратных 3, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.Напоминание: 0 делится на любое натуральное число. БейсикPython DIM N, DIGIT, SUM AS LONG INPUT N SUM = N MOD 10 WHILE N > 0     DIGIT = N MOD 10     IF DIGIT MOD 3 > 0 THEN         SUM = DIGIT     END IF     N = N \\ 10 WEND IF SUM > 0 THEN     PRINT SUM ELSE     PRINT \"NO\" END IF  N = int(input())sum = N % 10while N > 0:    digit = N % 10    if digit % 3 > 0:        sum = digit     N = N // 10if sum > 0:    print(sum)else:    print(\"NO\")  ПаскальАлгоритмический языкvar N, digit, sum: longint;begin    readln(N);    sum := N mod 10;    while N > 0 do    begin        digit := N mod 10;        if digit mod 3 > 0 then            sum := digit;        N := N div 10;    end;    if sum > 0 then        writeln(sum)    else        writeln('NO')end. алгнач    цел N, digit, sum    ввод N    sum := mod(N,10)    нц пока N > 0        digit := mod(N,10)        если mod(digit, 3) > 0 то            sum := digit        все        N := div(N,10)    кц    если sum > 0 то        вывод sum    иначе        вывод \"NO\"    всеконСи++#include <iostream>using namespace std;int main(){    int N, digit, sum;    cin >> N;    sum = N % 10;    while (N > 0)    {        digit = N % 10;        if (digit % 3 > 0)            sum = digit;        N = N / 10;    }    if (sum > 0)        cout << sum << endl;    else        cout << \"NO\"<< endl;    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 645.2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940742\" width=\"100%\"><p class=\"left_margin\">На обработку поступает натуральное число, не превышающее 10<sup>9</sup>. Нужно написать программу, которая выводит на экран сумму цифр числа, НЕ кратных 3. Если в числе нет цифр, не кратных 3, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p><b>Напоминание:</b> 0 делится на любое натуральное число.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, SUM AS LONG<p> INPUT N<p> SUM = N MOD 10<p> WHILE N &gt; 0<p>     DIGIT = N MOD 10<p>     IF DIGIT MOD 3 &gt; 0 THEN<p>         SUM = DIGIT<p>     END IF<p>     N = N \\ 10<p> WEND<p> IF SUM &gt; 0 THEN<p>     PRINT SUM<p> ELSE<p>     PRINT \"NO\"<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p>sum = N % 10<p>while N &gt; 0:<p>    digit = N % 10<p>    if digit % 3 &gt; 0:<p>        sum = digit<p>     N = N // 10<p>if sum &gt; 0:<p>    print(sum)<p>else:<p>    print(\"NO\")<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N, digit, sum: longint;<p>begin<p>    readln(N);<p>    sum := N mod 10;<p>    while N &gt; 0 do<p>    begin<p>        digit := N mod 10;<p>        if digit mod 3 &gt; 0 then<p>            sum := digit;<p>        N := N div 10;<p>    end;<p>    if sum &gt; 0 then<p>        writeln(sum)<p>    else<p>        writeln('NO')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, sum<p>    ввод N<p>    sum := mod(N,10)<p>    нц пока N &gt; 0<p>        digit := mod(N,10)<p>        если mod(digit, 3) &gt; 0 то<p>            sum := digit<p>        все<p>        N := div(N,10)<p>    кц<p>    если sum &gt; 0 то<p>        вывод sum<p>    иначе<p>        вывод \"NO\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>    int N, digit, sum;<p>    cin &gt;&gt; N;<p>    sum = N % 10;<p>    while (N &gt; 0)<p>    {<p>        digit = N % 10;<p>        if (digit % 3 &gt; 0)<p>            sum = digit;<p>        N = N / 10;<p>    }<p>    if (sum &gt; 0)<p>        cout &lt;&lt; sum &lt;&lt; endl;<p>    else<p>        cout &lt;&lt; \"NO\"&lt;&lt; endl;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 645.<p class=\"left_margin\">2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) При вводе числа 645 программа выдает 4. Поскольку:в первый раз сумм=645 mod 10 =5.Далее:сумм= 5(т.к. 5 mod 3 >0)сумм=4(т.к. 4 mod 3>0)Т.е. 6 mod 3 = 0 — ответ не изменится.2) При вводе числа 103. Cначала сумм станет равно 3, потом в цикле происходит переприсвоение этого значения на 1, а сумма цифр, которые не кратны трем в числе 103, как раз равна 1. 3.1) В начале не нужна строчка  sum := N mod 10; т.к. в 1 раз мы сделаем тоже самое в цикле, а sum изначально сделаем 0, как и должно быть.3.2) Нам нужно заменить sum := digit; на sum := sum + digit; т.к. иначе, мы не складываем наши цифры, а обновляем их.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13370\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) При вводе числа 645 программа выдает 4. Поскольку:<p class=\"left_margin\">в первый раз сумм=645 mod 10 =5.<p class=\"left_margin\">Далее:<p class=\"left_margin\">сумм= 5(т.к. 5 mod 3 &gt;0)<p class=\"left_margin\">сумм=4(т.к. 4 mod 3&gt;0)<p class=\"left_margin\">Т.е. 6 mod 3 = 0 — ответ не изменится.<p class=\"left_margin\">2) При вводе числа 103. Cначала сумм станет равно 3, потом в цикле происходит переприсвоение этого значения на 1, а сумма цифр, которые не кратны трем в числе 103, как раз равна 1. <p class=\"left_margin\">3.1) В начале не нужна строчка  sum := N mod 10; т.к. в 1 раз мы сделаем тоже самое в цикле, а sum изначально сделаем 0, как и должно быть.<p class=\"left_margin\">3.2) Нам нужно заменить sum := digit; на sum := sum + digit; т.к. иначе, мы не складываем наши цифры, а обновляем их.</p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ — 2017. До­сроч­ная волна по информатике",
            "task_id": "13370"
        },
        {
            "answer": "Решение.1. При вводе числа 17 программа выведет число 5.2. Программа выведет ответ 3 при вводе одного из следующих чисел: 2, 3, 4, 5, 6.3. В программе неверно выполнена инициализация переменной K. Поскольку K увеличивается в самом начале цикла, начальное значение должно быть равно нулю. В результате вычислений получается минимальное K, при котором сумма больше A. Для получения результата, который требуется по условию, нужно скорректировать значение K.  Пример исправления для языка Паскаль: Первая ошибка:   k := 1; Исправленная строка:   k := 0; Вторая ошибка:   writeln(k);Исправленная строка:   writeln(k-1);",
            "parsed": "2019-04-29 21:09:42.902110",
            "question": "Дано натуральное число A. Требуется вывести такое максимально возможное натуральное число K, при котором сумма  1 + (1 + 2) + (1 + 2 + 3) + … + (1 + 2 + … + K)  не превышает A. Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная.  Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A,S,P,K AS INTEGER  INPUT A S = 0  P = 0  K = 1  WHILE S <= A     K = K + 1     P = P + K     S = S + P WEND PRINT K END  a = int(input()) s = 0 p = 0 k = 1 while s <= a:     k = k + 1      p = p + k      s = s + p  print(k)  ПаскальАлгоритмический языкvar  a, s, p, k: integer;begin    readln(a);    s := 0;     p := 0;     k := 1;     while s <= a do begin      k := k+1;      p := k+p;      s := p+s;    end;    writeln(k);end. алгнач   цел a, s, p, k   ввод a   s := 0   p := 0   k := 1   нц пока s <= a     k := k+1     p := p+k     s := s+p   кц  вывод kконСи++#include <iostream>using namespace std; int main() {   int a, s, p, k;    cin >> a;    s = 0;    p = 0;    k = 1;   while (s <= a) {        k = k+1;       p = p+k;       s = s+p;    }   cout « k « endl;    return 0;}  Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 17. 2. Перечислите все значения A, при вводе которых программа выведет ответ 3. 3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940688\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число A. Требуется вывести такое максимально возможное натуральное число K, при котором сумма  1 + (1 + 2) + (1 + 2 + 3) + … + (1 + 2 + … + K)  не превышает A. Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная.  Ниже эта программа для Вашего удобства приведена на пяти языках программирования. <p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,S,P,K AS INTEGER <p> INPUT A<p> S = 0 <p> P = 0 <p> K = 1 <p> WHILE S &lt;= A<p>     K = K + 1<p>     P = P + K<p>     S = S + P<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> a = int(input())<p> s = 0<p> p = 0<p> k = 1<p> while s &lt;= a:<p>     k = k + 1 <p>     p = p + k <p>     s = s + p <p> print(k)<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var  a, s, p, k: integer;<p>begin<p>    readln(a);<p>    s := 0; <p>    p := 0; <p>    k := 1; <p>    while s &lt;= a do begin<p>      k := k+1;<p>      p := k+p;<p>      s := p+s;<p>    end;<p>    writeln(k);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>   цел a, s, p, k<p>   ввод a<p>   s := 0<p>   p := 0<p>   k := 1<p>   нц пока s &lt;= a<p>     k := k+1<p>     p := p+k<p>     s := s+p<p>   кц<p>  вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main()<p> {<p>   int a, s, p, k; <p>   cin &gt;&gt; a;<p>    s = 0;<p>    p = 0;<p>    k = 1;<p>   while (s &lt;= a) { <p>       k = k+1;<p>       p = p+k;<p>       s = s+p;<p>    }<p>   cout « k « endl; <p>   return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее. <p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 17. <p class=\"left_margin\">2. Перечислите все значения A, при вводе которых программа выведет ответ 3. <p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 17 программа выведет число 5.2. Программа выведет ответ 3 при вводе одного из следующих чисел: 2, 3, 4, 5, 6.3. В программе неверно выполнена инициализация переменной K. Поскольку K увеличивается в самом начале цикла, начальное значение должно быть равно нулю. В результате вычислений получается минимальное K, при котором сумма больше A. Для получения результата, который требуется по условию, нужно скорректировать значение K.  Пример исправления для языка Паскаль: Первая ошибка:   k := 1; Исправленная строка:   k := 0; Вторая ошибка:   writeln(k);Исправленная строка:   writeln(k-1);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13420\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 17 программа выведет число 5.<p class=\"left_margin\">2. Программа выведет ответ 3 при вводе одного из следующих чисел: 2, 3, 4, 5, 6.<p class=\"left_margin\">3. В программе неверно выполнена инициализация переменной K. Поскольку K увеличивается в самом начале цикла, начальное значение должно быть равно нулю. В результате вычислений получается минимальное K, при котором сумма больше A. Для получения результата, который требуется по условию, нужно скорректировать значение K. <p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль: <p class=\"left_margin\">Первая ошибка:   k := 1; <p class=\"left_margin\">Исправленная строка:   k := 0; <p class=\"left_margin\">Вторая ошибка:   writeln(k);<p class=\"left_margin\">Исправленная строка:   writeln(k-1);</p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 18 января 2017 года  Вариант ИН10303",
            "task_id": "13420"
        },
        {
            "answer": "Решение.1. При вводе числа 17 программа выведет число 52. Такого числа не существует.3. В программе допущена типичная для начинающих программистов ошибка «смещения кадра»: значение переменной K, необходимое при первом выполнении цикла, присваивается до начала цикла, а значение для следующего оборота цикла вычисляется в конце предыдущего оборота. В результате при завершении цикла K имеет значение на 1 больше, чем нужно. Вторая ошибка — неверное условие цикла. В задаче требуется получить сумму больше A, поэтому при сумме, равной A, вычисления должны быть продолжены.  Пример исправления для языка Паскаль: Первая ошибка:  while s < a do begin Исправленная строка:  while s <= a do begin Вторая ошибка:   writeln(k);Исправленная строка:   writeln(k-2);",
            "parsed": "2019-04-29 21:09:43.450900",
            "question": "Дано натуральное число A. Требуется вывести такое максимально возможное натуральное число K, при котором сумма  1 + (1 + 2) + (1 + 2 + 3) + … + (1 + 2 + … + K)  не превышает A. Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная.  Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A,S,P,K AS INTEGER  INPUT A S = 0  P = 0  K = 1  WHILE S < A     P = P + K     S = S + P     K = K + 1 WEND PRINT K END  a = int(input()) s = 0 p = 0 k = 1 while s < a     p = p + k      s = s + p      k = k + 1  print(k)  ПаскальАлгоритмический языкvar  a, s, p, k: integer;begin    readln(a);    s := 0;     p := 0;     k := 1;     while s < a do begin      p := k+p;      s := p+s;      k := k+1;    end;    writeln(k);end. алгнач   цел a, s, p, k   ввод a   s := 0   p := 0   k := 1   нц пока s < a     p := p+k     s := s+p     k := k+1   кц  вывод kконСи++#include <iostream>using namespace std; int main() {   int a, s, p, k;    cin >> a;    s = 0;    p = 0;    k = 1;   while (s < a) {        p = p+k;       s = s+p;       k = k+1;    }   cout « k « endl;    return 0;}  Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 17. 2. Приведите пример значения A, при вводе которого программа выведет верный ответ. Укажите этот ответ. 3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940637\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число A. Требуется вывести такое максимально возможное натуральное число K, при котором сумма  1 + (1 + 2) + (1 + 2 + 3) + … + (1 + 2 + … + K)  не превышает A. Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная.  Ниже эта программа для Вашего удобства приведена на пяти языках программирования. <p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,S,P,K AS INTEGER <p> INPUT A<p> S = 0 <p> P = 0 <p> K = 1 <p> WHILE S &lt; A<p>     P = P + K<p>     S = S + P<p>     K = K + 1<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> a = int(input())<p> s = 0<p> p = 0<p> k = 1<p> while s &lt; a<p>     p = p + k <p>     s = s + p <p>     k = k + 1 <p> print(k)<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var  a, s, p, k: integer;<p>begin<p>    readln(a);<p>    s := 0; <p>    p := 0; <p>    k := 1; <p>    while s &lt; a do begin<p>      p := k+p;<p>      s := p+s;<p>      k := k+1;<p>    end;<p>    writeln(k);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>   цел a, s, p, k<p>   ввод a<p>   s := 0<p>   p := 0<p>   k := 1<p>   нц пока s &lt; a<p>     p := p+k<p>     s := s+p<p>     k := k+1<p>   кц<p>  вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main()<p> {<p>   int a, s, p, k; <p>   cin &gt;&gt; a;<p>    s = 0;<p>    p = 0;<p>    k = 1;<p>   while (s &lt; a) { <p>       p = p+k;<p>       s = s+p;<p>       k = k+1;<p>    }<p>   cout « k « endl; <p>   return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее. <p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 17. <p class=\"left_margin\">2. Приведите пример значения A, при вводе которого программа выведет верный ответ. Укажите этот ответ. <p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 17 программа выведет число 52. Такого числа не существует.3. В программе допущена типичная для начинающих программистов ошибка «смещения кадра»: значение переменной K, необходимое при первом выполнении цикла, присваивается до начала цикла, а значение для следующего оборота цикла вычисляется в конце предыдущего оборота. В результате при завершении цикла K имеет значение на 1 больше, чем нужно. Вторая ошибка — неверное условие цикла. В задаче требуется получить сумму больше A, поэтому при сумме, равной A, вычисления должны быть продолжены.  Пример исправления для языка Паскаль: Первая ошибка:  while s < a do begin Исправленная строка:  while s <= a do begin Вторая ошибка:   writeln(k);Исправленная строка:   writeln(k-2);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13473\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 17 программа выведет число 5<p class=\"left_margin\">2. Такого числа не существует.<p class=\"left_margin\">3. В программе допущена типичная для начинающих программистов ошибка «смещения кадра»: значение переменной K, необходимое при первом выполнении цикла, присваивается до начала цикла, а значение для следующего оборота цикла вычисляется в конце предыдущего оборота. В результате при завершении цикла K имеет значение на 1 больше, чем нужно. Вторая ошибка — неверное условие цикла. В задаче требуется получить сумму больше A, поэтому при сумме, равной A, вычисления должны быть продолжены. <p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль: <p class=\"left_margin\">Первая ошибка:  while s &lt; a do begin <p class=\"left_margin\">Исправленная строка:  while s &lt;= a do begin <p class=\"left_margin\">Вторая ошибка:   writeln(k);<p class=\"left_margin\">Исправленная строка:   writeln(k-2);</p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 18 января 2017 года  Вариант ИН10304",
            "task_id": "13473"
        },
        {
            "answer": "Решение.1. При вводе чисел 10 и 13 программа выведет число 12.2. Примеры чисел, при вводе которых программа выводит верный ответ: 3 и 8 (ответ 5), 10 и 22 (ответ 12), 4 и 16 (ответ 7).3. Программа содержит две ошибки:1) неверная инициализация;2) неверное условие цикла.Пример исправления для языка Паскаль: Первая ошибка: s := 1; Исправленная строка: s := a; Вторая ошибка: while s<= b do begin Исправленная строка: while s< b do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления",
            "parsed": "2019-04-29 21:09:43.909243",
            "question": "Даны натуральные числа A и B. Требуется найти такое минимально возможное натуральное число K ≥ A, что сумма всех чисел от A до K больше или равна B.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A,B,S,K AS INTEGER INPUT A,B S = 1 K = A WHILE S <= B    K = K + 1     S = S + K WEND PRINT K END  a = int(input())b = int(input())s = 1k = awhile s <= b:     k = k + 1     s = s + kprint(k)   ПаскальАлгоритмический языкvar a, b, s, k: integer;begin     read(a,b);     s := 1;     k := a;     while s <= b do begin        k := k+1;         s := s+k;     end;     writeln(k)end.  алгнач     цел a, b, s, k     ввод a, b     s := 1     k := a     нц пока s <= b         k := k+1         s := s+k     кц     вывод kконСи++#include <iostream>using namespace std; int main(){     int a, b, s, k;     scanf(\"%d %d\", &a, &b);     s = 1;     k = a;     while (s <= b) {         k = k+1;         s = s+k;     }     printf(\"%d\", k);     return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 10 и 13.2. Приведите пример значений A и B, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940608\" width=\"100%\"><p class=\"left_margin\">Даны натуральные числа A и B. Требуется найти такое минимально возможное натуральное число K ≥ A, что сумма всех чисел от A до K больше или равна B.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования. <p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,B,S,K AS INTEGER<p> INPUT A,B<p> S = 1<p> K = A<p> WHILE S &lt;= B<p>    K = K + 1<p>     S = S + K<p> WEND<p> PRINT K<p> END <p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>b = int(input())<p>s = 1<p>k = a<p>while s &lt;= b:<p>     k = k + 1<p>     s = s + k<p>print(k) <p> </p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, b, s, k: integer;<p>begin<p>     read(a,b);<p>     s := 1;<p>     k := a;<p>     while s &lt;= b do begin<p>        k := k+1;<p>         s := s+k;<p>     end;<p>     writeln(k)<p>end. <p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>     цел a, b, s, k<p>     ввод a, b<p>     s := 1<p>     k := a<p>     нц пока s &lt;= b<p>         k := k+1<p>         s := s+k<p>     кц<p>     вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> </p><p>int main(){<p>     int a, b, s, k;<p>     scanf(\"%d %d\", &amp;a, &amp;b);<p>     s = 1;<p>     k = a;<p>     while (s &lt;= b) {<p>         k = k+1;<p>         s = s+k;<p>     }<p>     printf(\"%d\", k);<p>     return 0;<p>} <p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 10 и 13.<p class=\"left_margin\">2. Приведите пример значений A и B, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе чисел 10 и 13 программа выведет число 12.2. Примеры чисел, при вводе которых программа выводит верный ответ: 3 и 8 (ответ 5), 10 и 22 (ответ 12), 4 и 16 (ответ 7).3. Программа содержит две ошибки:1) неверная инициализация;2) неверное условие цикла.Пример исправления для языка Паскаль: Первая ошибка: s := 1; Исправленная строка: s := a; Вторая ошибка: while s<= b do begin Исправленная строка: while s< b do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13500\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе чисел 10 и 13 программа выведет число 12.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 3 и 8 (ответ 5), 10 и 22 (ответ 12), 4 и 16 (ответ 7).<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверная инициализация;<p class=\"left_margin\">2) неверное условие цикла.<p class=\"left_margin\">Пример исправления для языка Паскаль:<p> </p><p class=\"left_margin\">Первая ошибка:<p> s := 1;<p> </p><p class=\"left_margin\">Исправленная строка:<p> s := a;<p> </p><p class=\"left_margin\">Вторая ошибка:<p> while s&lt;= b do begin<p> </p><p class=\"left_margin\">Исправленная строка:<p> while s&lt; b do begin<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 29 ноября 2016 года  Вариант ИН10203",
            "task_id": "13500"
        },
        {
            "answer": "Решение.1. При вводе чисел 15 и 26 программа выведет число 17.2. Примеры чисел, при вводе которых программа выводит верный ответ: 3 и 8 (ответ 5), 10 и 22 (ответ 12), 4 и 16 (ответ 7).3. Программа содержит две ошибки:1) неверная инициализация;2) неверное условие цикла.Пример исправления для языка Паскаль:Первая ошибка: s := 0;Исправленная строка: s := a;Возможен и другой вариант исправления, приводящий к верному результату.Ошибочная строка: k := a;Исправленная строка: k := a-1;В данном случае начальные значения переменных s и k не согласованы между собой, исправить можно любое из них.Вторая ошибка: while s< b do beginИсправленная строка: while s<= b do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:44.357038",
            "question": "Даны натуральные числа A и B. Требуется найти такое минимально возможное натуральное число K ≥ A, что сумма всех чисел от A до K больше B.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM A,B,S,K AS INTEGER INPUT A,B S = 0 K = A WHILE S < B    K = K + 1    S = S + K WEND PRINT K END  a = int(input()) b = int(input()) s = 0 k = a while s < b:    k = k + 1    s = s + k print(k)  ПаскальАлгоритмический язык var a, b, s, k: integer; begin    read(a,b);    s := 0;    k := a;    while s < b do begin      k := k+1;      s := s+k;    end;    writeln(k) end.  алг нач    цел a, b, s, k    ввод a, b    s := 0    k := a    нц пока s < b      k := k+1      s := s+k    кц    вывод k конСи++#include <iostream>using namespace std; int main(){    int a, b, s, k;    cin >> a >> b;    s = 0;    k = a;    while (s < b) {      k = k+1;      s = s+k;    }    cout « k « endl;    return 0; }  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 15 и 26.2. Приведите пример значений A и B, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940587\" width=\"100%\"><p class=\"left_margin\">Даны натуральные числа A и B. Требуется найти такое минимально возможное натуральное число K ≥ A, что сумма всех чисел от A до K больше B.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,B,S,K AS INTEGER<p> INPUT A,B<p> S = 0<p> K = A<p> WHILE S &lt; B<p>    K = K + 1<p>    S = S + K<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> a = int(input())<p> b = int(input())<p> s = 0<p> k = a<p> while s &lt; b:<p>    k = k + 1<p>    s = s + k<p> print(k)<p> </p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var a, b, s, k: integer;<p> begin<p>    read(a,b);<p>    s := 0;<p>    k := a;<p>    while s &lt; b do begin<p>      k := k+1;<p>      s := s+k;<p>    end;<p>    writeln(k)<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг<p> нач<p>    цел a, b, s, k<p>    ввод a, b<p>    s := 0<p>    k := a<p>    нц пока s &lt; b<p>      k := k+1<p>      s := s+k<p>    кц<p>    вывод k<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main(){<p>    int a, b, s, k;<p>    cin &gt;&gt; a &gt;&gt; b;<p>    s = 0;<p>    k = a;<p>    while (s &lt; b) {<p>      k = k+1;<p>      s = s+k;<p>    }<p>    cout « k « endl;<p>    return 0;<p> }<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 15 и 26.<p class=\"left_margin\">2. Приведите пример значений A и B, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе чисел 15 и 26 программа выведет число 17.2. Примеры чисел, при вводе которых программа выводит верный ответ: 3 и 8 (ответ 5), 10 и 22 (ответ 12), 4 и 16 (ответ 7).3. Программа содержит две ошибки:1) неверная инициализация;2) неверное условие цикла.Пример исправления для языка Паскаль:Первая ошибка: s := 0;Исправленная строка: s := a;Возможен и другой вариант исправления, приводящий к верному результату.Ошибочная строка: k := a;Исправленная строка: k := a-1;В данном случае начальные значения переменных s и k не согласованы между собой, исправить можно любое из них.Вторая ошибка: while s< b do beginИсправленная строка: while s<= b do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13527\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе чисел 15 и 26 программа выведет число 17.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 3 и 8 (ответ 5), 10 и 22 (ответ 12), 4 и 16 (ответ 7).<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверная инициализация;<p class=\"left_margin\">2) неверное условие цикла.<p class=\"left_margin\">Пример исправления для языка Паскаль:<p class=\"left_margin\">Первая ошибка: s := 0;<p class=\"left_margin\">Исправленная строка: s := a;<p class=\"left_margin\">Возможен и другой вариант исправления, приводящий к верному результату.<p class=\"left_margin\">Ошибочная строка: k := a;<p class=\"left_margin\">Исправленная строка: k := a-1;<p class=\"left_margin\">В данном случае начальные значения переменных s и k не согласованы между собой, исправить можно любое из них.<p class=\"left_margin\">Вторая ошибка: while s&lt; b do begin<p class=\"left_margin\">Исправленная строка: while s&lt;= b do begin<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 29 ноября 2016 года  Вариант ИН10204",
            "task_id": "13527"
        },
        {
            "answer": "Решение.1. При вводе N=6789 программа выведет число 89.2. Примеры чисел, при вводе которых программа выводит верный ответ: 1815 (ответ 15), 412 756 (ответ 12).Комментарии для экспертов. Из-за ошибки в программе не все пары соседних цифр рассматриваются как возможные двузначные числа. Обрабатываются только те пары, правее которых расположено чётное число цифр, кроме пары в начале числа. Например, в числе 87 654 321 рассматриваются только пары 21, 43, 65. Сравнение в программе организовано верно, поэтому верный ответ выдаётся в том случае, когда пара цифр, образующая самое маленькое число, расположена на местах, попадающих в обработку.3. Программа содержит две ошибки:1) неверное условие цикла;2) неверное изменение величины N.Пример исправления для языка ПаскальПервая ошибка: while n > 100 do beginИсправленная строка: while n > 10 do beginВместо сравнения с 10 возможно сравнения с 0 или любым другим числом, меньшим 10. Вместо строгого сравнения возможно нестрогое. Возможно также сравнение с числом 11, но в этом случае обязательно нестрогое (n>=11).Вторая ошибка: n := n div 100;Исправленная строка: n := n div 10;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления",
            "parsed": "2019-04-29 21:10:05.963306",
            "question": "Дано натуральное число N > 10, в десятичной записи которого нет нулей. Необходимо определить минимальное двузначное число, которое можно увидеть в десятичной записи N. Например, для N=1984 нужно получить результат 19, а для N = 271 828 — результат 18.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER INPUT N K = 100 WHILE N > 100  IF N MOD 100 < K THEN    K = N MOD 100  END IF  N = N \\ 100 WEND PRINT K END  n = int(input()) k = 100 while n > 100:    if n%100 < k:        k = n%100    n = n // 100 print(k)  ПаскальАлгоритмический язык var n, k: integer; begin  read(n);  k := 100;  while n > 100 do begin    if n mod 100 < k      then k := n mod 100;    n := n div 100;  end;  writeln(k) end.  алг нач  цел n, k  ввод n  k := 100  нц пока n > 100    если mod(n,100) < k      то k:=mod(n,100)    все    n:=div(n,100)  кц  вывод k конСи++#include <iostream>using namespace std; int main(){    int n, k;    cin >> n;    k = 100;    while (n > 100) {      if (n%100 < k)        k = n%100;      n = n/100;    }    cout « k « endl;    return 0; }  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N=6789.2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940558\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число N &gt; 10, в десятичной записи которого нет нулей. Необходимо определить минимальное двузначное число, которое можно увидеть в десятичной записи N. Например, для N=1984 нужно получить результат 19, а для N = 271 828 — результат 18.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 100<p> WHILE N &gt; 100<p>  IF N MOD 100 &lt; K THEN<p>    K = N MOD 100<p>  END IF<p>  N = N \\ 100<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> n = int(input())<p> k = 100<p> while n &gt; 100:<p>    if n%100 &lt; k:<p>        k = n%100<p>    n = n // 100<p> print(k)<p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var n, k: integer;<p> begin<p>  read(n);<p>  k := 100;<p>  while n &gt; 100 do begin<p>    if n mod 100 &lt; k<p>      then k := n mod 100;<p>    n := n div 100;<p>  end;<p>  writeln(k)<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг<p> нач<p>  цел n, k<p>  ввод n<p>  k := 100<p>  нц пока n &gt; 100<p>    если mod(n,100) &lt; k<p>      то k:=mod(n,100)<p>    все<p>    n:=div(n,100)<p>  кц<p>  вывод k<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main(){<p>    int n, k;<p>    cin &gt;&gt; n;<p>    k = 100;<p>    while (n &gt; 100) {<p>      if (n%100 &lt; k)<p>        k = n%100;<p>      n = n/100;<p>    }<p>    cout « k « endl;<p>    return 0;<p> }<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе N=6789.<p class=\"left_margin\">2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N=6789 программа выведет число 89.2. Примеры чисел, при вводе которых программа выводит верный ответ: 1815 (ответ 15), 412 756 (ответ 12).Комментарии для экспертов. Из-за ошибки в программе не все пары соседних цифр рассматриваются как возможные двузначные числа. Обрабатываются только те пары, правее которых расположено чётное число цифр, кроме пары в начале числа. Например, в числе 87 654 321 рассматриваются только пары 21, 43, 65. Сравнение в программе организовано верно, поэтому верный ответ выдаётся в том случае, когда пара цифр, образующая самое маленькое число, расположена на местах, попадающих в обработку.3. Программа содержит две ошибки:1) неверное условие цикла;2) неверное изменение величины N.Пример исправления для языка ПаскальПервая ошибка: while n > 100 do beginИсправленная строка: while n > 10 do beginВместо сравнения с 10 возможно сравнения с 0 или любым другим числом, меньшим 10. Вместо строгого сравнения возможно нестрогое. Возможно также сравнение с числом 11, но в этом случае обязательно нестрогое (n>=11).Вторая ошибка: n := n div 100;Исправленная строка: n := n div 10;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13554\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе N=6789 программа выведет число 89.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 1815 (ответ 15), 412 756 (ответ 12).<p class=\"left_margin\"><b>Комментарии для экспертов.</b> Из-за ошибки в программе не все пары соседних цифр рассматриваются как возможные двузначные числа. Обрабатываются только те пары, правее которых расположено чётное число цифр, кроме пары в начале числа. Например, в числе 87 654 321 рассматриваются только пары 21, 43, 65. Сравнение в программе организовано верно, поэтому верный ответ выдаётся в том случае, когда пара цифр, образующая самое маленькое число, расположена на местах, попадающих в обработку.<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверное условие цикла;<p class=\"left_margin\">2) неверное изменение величины N.<p class=\"left_margin\">Пример исправления для языка Паскаль<p class=\"left_margin\">Первая ошибка: while n &gt; 100 do begin<p class=\"left_margin\">Исправленная строка: while n &gt; 10 do begin<p class=\"left_margin\">Вместо сравнения с 10 возможно сравнения с 0 или любым другим числом, меньшим 10. Вместо строгого сравнения возможно нестрогое. Возможно также сравнение с числом 11, но в этом случае обязательно нестрогое (n&gt;=11).<p class=\"left_margin\">Вторая ошибка: n := n div 100;<p class=\"left_margin\">Исправленная строка: n := n div 10;<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 30 сентября 2016 года  Вариант ИН10103",
            "task_id": "13554"
        },
        {
            "answer": "Решение.1. При вводе N = 9876 программа выведет число 76.2. Примеры чисел, при вводе которых программа выводит верный ответ: 2398 (ответ 98), 417 256 (ответ 72).Комментарии для экспертов. Из-за ошибки в программе не все пары соседних цифр рассматриваются как возможные двузначные числа. Обрабатываются только те пары, правее которых расположено чётное число цифр, кроме пары в начале числа. Например, в числе 87 654 321 рассматриваются только пары 21, 43, 65. Сравнение в программе организовано верно, поэтому верный ответ выдаётся в том случае, когда пара цифр, образующая самое большое число, расположена на местах, попадающих в обработку.3. Программа содержит две ошибки:1) неверное условие цикла;2) неверное изменение величины N.Пример исправления для языка ПаскальПервая ошибка: while n > 100 do beginИсправленная строка: while n > 10 do beginВместо сравнения с 10 возможно сравнения с 0 или любым другим числом, меньшим 10. Вместо строгого сравнения возможно нестрогое. Возможно также сравнение с числом 11, но в этом случае обязательно нестрогое (n >= 11).Вторая ошибка: n := n div 100;Исправленная строка: n := n div 10;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления",
            "parsed": "2019-04-29 21:10:06.450942",
            "question": "Дано натуральное число N > 10, в десятичной записи которого нет нулей.Необходимо определить максимальное двузначное число, которое можно увидеть в десятичной записи N. Например, для N = 1984 нужно получить результат 98, а для N = 271 828 — результат 82. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER INPUT N K = 0 WHILE N > 100  IF N MOD 100 > K THEN    K = N MOD 100  END IF  N = N \\ 100 WEND PRINT K END  n = int(input()) k = 0 while n > 100:  if n%100 > k:    k = n%100  n = n // 100 print(k)  ПаскальАлгоритмический язык var n, k: integer; begin  read(n);  k := 0;  while n > 100 do begin    if n mod 100 > k      then k := n mod 100;    n := n div 100;  end;  writeln(k) end.  алг нач  цел n, k  ввод n  k := 0  нц пока n > 100    если mod(n,100) > k      то k:=mod(n,100)    все    n:=div(n,100)  кц  вывод k конСи++#include <iostream>using namespace std; int main(){  int n, k;  cin >> n;k = 0;  while (n > 100) {    if (n%100 > k)      k = n%100;    n = n/100;  }  cout « k « endl;  return 0; }  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 9876.2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body941041\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число N &gt; 10, в десятичной записи которого нет нулей.<p class=\"left_margin\">Необходимо определить максимальное двузначное число, которое можно увидеть в десятичной записи N. Например, для N = 1984 нужно получить результат 98, а для N = 271 828 — результат 82. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 0<p> WHILE N &gt; 100<p>  IF N MOD 100 &gt; K THEN<p>    K = N MOD 100<p>  END IF<p>  N = N \\ 100<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> n = int(input())<p> k = 0<p> while n &gt; 100:<p>  if n%100 &gt; k:<p>    k = n%100<p>  n = n // 100<p> print(k)<p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var n, k: integer;<p> begin<p>  read(n);<p>  k := 0;<p>  while n &gt; 100 do begin<p>    if n mod 100 &gt; k<p>      then k := n mod 100;<p>    n := n div 100;<p>  end;<p>  writeln(k)<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг<p> нач<p>  цел n, k<p>  ввод n<p>  k := 0<p>  нц пока n &gt; 100<p>    если mod(n,100) &gt; k<p>      то k:=mod(n,100)<p>    все<p>    n:=div(n,100)<p>  кц<p>  вывод k<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main(){<p>  int n, k;<p>  cin &gt;&gt; n;<p>k = 0;<p>  while (n &gt; 100) {<p>    if (n%100 &gt; k)<p>      k = n%100;<p>    n = n/100;<p>  }<p>  cout « k « endl;<p>  return 0;<p> }<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе N = 9876.<p class=\"left_margin\">2. Приведите два возможных значения N, при вводе которых программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 9876 программа выведет число 76.2. Примеры чисел, при вводе которых программа выводит верный ответ: 2398 (ответ 98), 417 256 (ответ 72).Комментарии для экспертов. Из-за ошибки в программе не все пары соседних цифр рассматриваются как возможные двузначные числа. Обрабатываются только те пары, правее которых расположено чётное число цифр, кроме пары в начале числа. Например, в числе 87 654 321 рассматриваются только пары 21, 43, 65. Сравнение в программе организовано верно, поэтому верный ответ выдаётся в том случае, когда пара цифр, образующая самое большое число, расположена на местах, попадающих в обработку.3. Программа содержит две ошибки:1) неверное условие цикла;2) неверное изменение величины N.Пример исправления для языка ПаскальПервая ошибка: while n > 100 do beginИсправленная строка: while n > 10 do beginВместо сравнения с 10 возможно сравнения с 0 или любым другим числом, меньшим 10. Вместо строгого сравнения возможно нестрогое. Возможно также сравнение с числом 11, но в этом случае обязательно нестрогое (n >= 11).Вторая ошибка: n := n div 100;Исправленная строка: n := n div 10;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13581\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе N = 9876 программа выведет число 76.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 2398 (ответ 98), 417 256 (ответ 72).<p class=\"left_margin\"><b>Комментарии для экспертов.</b> Из-за ошибки в программе не все пары соседних цифр рассматриваются как возможные двузначные числа. Обрабатываются только те пары, правее которых расположено чётное число цифр, кроме пары в начале числа. Например, в числе 87 654 321 рассматриваются только пары 21, 43, 65. Сравнение в программе организовано верно, поэтому верный ответ выдаётся в том случае, когда пара цифр, образующая самое большое число, расположена на местах, попадающих в обработку.<p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверное условие цикла;<p class=\"left_margin\">2) неверное изменение величины N.<p class=\"left_margin\">Пример исправления для языка Паскаль<p class=\"left_margin\">Первая ошибка: while n &gt; 100 do begin<p class=\"left_margin\">Исправленная строка: while n &gt; 10 do begin<p class=\"left_margin\">Вместо сравнения с 10 возможно сравнения с 0 или любым другим числом, меньшим 10. Вместо строгого сравнения возможно нестрогое. Возможно также сравнение с числом 11, но в этом случае обязательно нестрогое (n &gt;= 11).<p class=\"left_margin\">Вторая ошибка: n := n div 100;<p class=\"left_margin\">Исправленная строка: n := n div 10;<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 30 сентября 2016 года  Вариант ИН10104",
            "task_id": "13581"
        },
        {
            "answer": "Решение.1. При вводе числа 15 программа выведет число 4.2. Наименьшие значения A, при которых программа выведет верный ответ, равны 2 и 3.3. В программе допущена типичная для начинающих программистов ошибка «смещения кадра»: значение переменной K, необходимое при первом выполнении цикла, присваивается до начала цикла, а значение для следующего оборота цикла вычисляется в конце предыдущего оборота. В результате, при завершении цикла K имеет значение больше, чем нужно. Вторая ошибка – неверный шаг изменения K. «Идеальная» программа решения этой задачи должна выглядеть так (приведён пример на языке Бейсик):DIM A,S,K AS INTEGERINPUT AS = 0K = −1WHILE S <= AK = K + 2S = S + K*(K+1)WENDPRINT KENDНо по условиям задания менять местами строки нельзя, их можно только исправлять. Поэтому, кроме исправления шага, приходится корректировать значение K при выводе. Пример исправления для языка Паскаль:Первая ошибка:k := k+1;Исправленная строка:k := k+2Вторая ошибка:writeln(k)Исправленная строка:writeln(k-2)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:44.801586",
            "question": "Дано натуральное число A > 0. Требуется вывести такое минимально возможное нечётное натуральное число K, при котором сумма 1*2 + 3*4 + … + K*(K+1) окажется больше A.Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A,S,K AS INTEGER INPUT A S = 0 K = 1 WHILE S <= A    S = S + K*(K+1)    K = K + 1 WEND PRINT K END  a = int(input())s = 0k = 1while s <= a:    s = s + k*(k+1)    k = k + 1print(k)   ПаскальАлгоритмический языкvar a, s, k: integer;begin    read(a);    s := 0;    k := 1;    while s <= a do begin        s := s+k*(k+1);        k := k+1;    end;    writeln(k)end.  алгнач    цел a, s, k    ввод a    s := 0    k := 1    нц пока s <= a        s := s+k*(k+1)        k := k+1    кц    вывод kконСи++#include <iostream>using namespace std;int main() {    int a, s, k;    cin >> a;    s = 0;    k = 1;    while (s <= a) {        s = s+k*(k+1);        k = k+1;    }    cout « k « endl;    return 0;}     Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 15.2. Укажите два наименьших значения A, при которых программа выведет верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки. За исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body941012\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число A &gt; 0. Требуется вывести такое минимально возможное нечётное натуральное число K, при котором сумма 1*2 + 3*4 + … + K*(K+1) окажется больше A.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,S,K AS INTEGER<p> INPUT A<p> S = 0<p> K = 1<p> WHILE S &lt;= A<p>    S = S + K*(K+1)<p>    K = K + 1<p> WEND<p> PRINT K<p> END <p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>s = 0<p>k = 1<p>while s &lt;= a:<p>    s = s + k*(k+1)<p>    k = k + 1<p>print(k) <p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, s, k: integer;<p>begin<p>    read(a);<p>    s := 0;<p>    k := 1;<p>    while s &lt;= a do begin<p>        s := s+k*(k+1);<p>        k := k+1;<p>    end;<p>    writeln(k)<p>end. <p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, s, k<p>    ввод a<p>    s := 0<p>    k := 1<p>    нц пока s &lt;= a<p>        s := s+k*(k+1)<p>        k := k+1<p>    кц<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main() {<p>    int a, s, k;<p>    cin &gt;&gt; a;<p>    s = 0;<p>    k = 1;<p>    while (s &lt;= a) {<p>        s = s+k*(k+1);<p>        k = k+1;<p>    }<p>    cout « k « endl;<p>    return 0;<p>} <p> </p><p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 15.<p class=\"left_margin\">2. Укажите два наименьших значения A, при которых программа выведет верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки. За исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 15 программа выведет число 4.2. Наименьшие значения A, при которых программа выведет верный ответ, равны 2 и 3.3. В программе допущена типичная для начинающих программистов ошибка «смещения кадра»: значение переменной K, необходимое при первом выполнении цикла, присваивается до начала цикла, а значение для следующего оборота цикла вычисляется в конце предыдущего оборота. В результате, при завершении цикла K имеет значение больше, чем нужно. Вторая ошибка – неверный шаг изменения K. «Идеальная» программа решения этой задачи должна выглядеть так (приведён пример на языке Бейсик):DIM A,S,K AS INTEGERINPUT AS = 0K = −1WHILE S <= AK = K + 2S = S + K*(K+1)WENDPRINT KENDНо по условиям задания менять местами строки нельзя, их можно только исправлять. Поэтому, кроме исправления шага, приходится корректировать значение K при выводе. Пример исправления для языка Паскаль:Первая ошибка:k := k+1;Исправленная строка:k := k+2Вторая ошибка:writeln(k)Исправленная строка:writeln(k-2)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13608\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 15 программа выведет число 4.<p class=\"left_margin\">2. Наименьшие значения A, при которых программа выведет верный ответ, равны 2 и 3.<p class=\"left_margin\">3. В программе допущена типичная для начинающих программистов ошибка «смещения кадра»: значение переменной K, необходимое при первом выполнении цикла, присваивается до начала цикла, а значение для следующего оборота цикла вычисляется в конце предыдущего оборота. В результате, при завершении цикла K имеет значение больше, чем нужно. Вторая ошибка – неверный шаг изменения K. «Идеальная» программа решения этой задачи должна выглядеть так (приведён пример на языке Бейсик):<p class=\"left_margin\">DIM A,S,K AS INTEGER<p class=\"left_margin\">INPUT A<p class=\"left_margin\">S = 0<p class=\"left_margin\">K = −1<p class=\"left_margin\">WHILE S &lt;= A<p class=\"left_margin\">K = K + 2<p class=\"left_margin\">S = S + K*(K+1)<p class=\"left_margin\">WEND<p class=\"left_margin\">PRINT K<p class=\"left_margin\">END<p class=\"left_margin\">Но по условиям задания менять местами строки нельзя, их можно только исправлять. Поэтому, кроме исправления шага, приходится корректировать значение K при выводе. Пример исправления для языка Паскаль:<p class=\"left_margin\">Первая ошибка:<p>k := k+1;<p class=\"left_margin\">Исправленная строка:<p>k := k+2<p class=\"left_margin\">Вторая ошибка:<p>writeln(k)<p class=\"left_margin\">Исправленная строка:<p>writeln(k-2)<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 12 мая 2017 года  Вариант ИН10503",
            "task_id": "13608"
        },
        {
            "answer": "Решение.1. При вводе числа 15 программа выведет число 3.2. Наименьшие значения A, при которых программа выведет верный ответ, равны 6 и 7.3. Программа содержит две ошибки: неверная инициализация и неверный шаг изменения K. При инициализации значения переменных S и K не соответствуют друг другу. Чтобы устранить это несоответствие, можно исправить любое из двух начальных присваиваний. Таким образом, первую ошибку можно исправить двумя способами.Пример исправления для языка Паскаль:Первая ошибка, способ 1:s := 0;Исправленная строка:s := 2;Первая ошибка, способ 2:k := 1;Исправленная строка:k := -1;Вторая ошибка:k := k+1;Исправленная строка:k := k+2;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.В задаче требуется выполнить три действия.1. Указать ответ программы при данном вводе.Это действие считается выполненным, если указан верный результат работы программы при заданном входном значении. Экзаменуемый не обязан объяснять, как получен этот результат, достаточно указать верное число.2. Указать два наименьших значения исходного числа, при котором программа выдаёт верный ответ.Это действие считается выполненным, если указаны два верных значения. Экзаменуемый не обязан пояснять этот результат или описывать механизм работы программы. 3. Найти и исправить ошибки в программе.Это действие считается выполненным, если верно указаны обе ошибки и предложены верные варианты исправления, при этом никакие верные строки программы не указаны в качестве неверных. В исправленной строке допускаются незначительные синтаксические ошибки (лишние или пропущенные знаки препинания, неточные написания служебных слов языка). Ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа",
            "parsed": "2019-04-29 21:09:45.120900",
            "question": "Дано натуральное число A>0. Требуется вывести такое минимально возможное нечётное натуральное число K, при котором сумма 1*2 + 3*4 + … + K*(K+1) окажется больше A. Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A,S,K AS INTEGER INPUT A S = 0 K = 1 WHILE S <= A    K = K + 1    S = S + K*(K+1) WEND PRINT K END  a = int(input())s = 0k = 1while s <= a:    k = k + 1    s = s + k*(k+1)print(k)   ПаскальАлгоритмический языкvar a, s, k: integer;begin    read(a);    s := 0;    k := 1;    while s <= a do begin        k := k+1;        s := s+k*(k+1);    end;    writeln(k)end.  алгнач    цел a, s, k    ввод a    s := 0    k := 1    нц пока s <= a        k := k+1        s := s+k*(k+1)    кц    вывод kконСи++#include <iostream>using namespace std;int main() {    int a, s, k;    cin >> a;    s = 0;    k = 1;    while (s <= a) {        k = k+1;        s = s+k*(k+1);    }    cout « k « endl;    return 0;}     Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 15.2. Укажите два наименьших значения A, при которых программа выведет верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940991\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число A&gt;0. Требуется вывести такое минимально возможное нечётное натуральное число K, при котором сумма 1*2 + 3*4 + … + K*(K+1) окажется больше A. Для решения этой задачи ученик написал программу, но, к сожалению, его программа – неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,S,K AS INTEGER<p> INPUT A<p> S = 0<p> K = 1<p> WHILE S &lt;= A<p>    K = K + 1<p>    S = S + K*(K+1)<p> WEND<p> PRINT K<p> END <p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>s = 0<p>k = 1<p>while s &lt;= a:<p>    k = k + 1<p>    s = s + k*(k+1)<p>print(k) <p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, s, k: integer;<p>begin<p>    read(a);<p>    s := 0;<p>    k := 1;<p>    while s &lt;= a do begin<p>        k := k+1;<p>        s := s+k*(k+1);<p>    end;<p>    writeln(k)<p>end. <p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, s, k<p>    ввод a<p>    s := 0<p>    k := 1<p>    нц пока s &lt;= a<p>        k := k+1<p>        s := s+k*(k+1)<p>    кц<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main() {<p>    int a, s, k;<p>    cin &gt;&gt; a;<p>    s = 0;<p>    k = 1;<p>    while (s &lt;= a) {<p>        k = k+1;<p>        s = s+k*(k+1);<p>    }<p>    cout « k « endl;<p>    return 0;<p>} <p> </p><p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 15.<p class=\"left_margin\">2. Укажите два наименьших значения A, при которых программа выведет верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 15 программа выведет число 3.2. Наименьшие значения A, при которых программа выведет верный ответ, равны 6 и 7.3. Программа содержит две ошибки: неверная инициализация и неверный шаг изменения K. При инициализации значения переменных S и K не соответствуют друг другу. Чтобы устранить это несоответствие, можно исправить любое из двух начальных присваиваний. Таким образом, первую ошибку можно исправить двумя способами.Пример исправления для языка Паскаль:Первая ошибка, способ 1:s := 0;Исправленная строка:s := 2;Первая ошибка, способ 2:k := 1;Исправленная строка:k := -1;Вторая ошибка:k := k+1;Исправленная строка:k := k+2;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.В задаче требуется выполнить три действия.1. Указать ответ программы при данном вводе.Это действие считается выполненным, если указан верный результат работы программы при заданном входном значении. Экзаменуемый не обязан объяснять, как получен этот результат, достаточно указать верное число.2. Указать два наименьших значения исходного числа, при котором программа выдаёт верный ответ.Это действие считается выполненным, если указаны два верных значения. Экзаменуемый не обязан пояснять этот результат или описывать механизм работы программы. 3. Найти и исправить ошибки в программе.Это действие считается выполненным, если верно указаны обе ошибки и предложены верные варианты исправления, при этом никакие верные строки программы не указаны в качестве неверных. В исправленной строке допускаются незначительные синтаксические ошибки (лишние или пропущенные знаки препинания, неточные написания служебных слов языка). Ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13635\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 15 программа выведет число 3.<p class=\"left_margin\">2. Наименьшие значения A, при которых программа выведет верный ответ, равны 6 и 7.<p class=\"left_margin\">3. Программа содержит две ошибки: неверная инициализация и неверный шаг изменения K. При инициализации значения переменных S и K не соответствуют друг другу. Чтобы устранить это несоответствие, можно исправить любое из двух начальных присваиваний. Таким образом, первую ошибку можно исправить двумя способами.<p class=\"left_margin\">Пример исправления для языка Паскаль:<p class=\"left_margin\">Первая ошибка, способ 1:<p class=\"left_margin\">s := 0;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">s := 2;<p class=\"left_margin\">Первая ошибка, способ 2:<p class=\"left_margin\">k := 1;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">k := -1;<p class=\"left_margin\">Вторая ошибка:<p class=\"left_margin\">k := k+1;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">k := k+2;<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков и служебных слов после содержательной части исправления.<p class=\"left_margin\">В задаче требуется выполнить три действия.<p class=\"left_margin\">1. Указать ответ программы при данном вводе.<p class=\"left_margin\">Это действие считается выполненным, если указан верный результат работы программы при заданном входном значении. Экзаменуемый не обязан объяснять, как получен этот результат, достаточно указать верное число.<p class=\"left_margin\">2. Указать два наименьших значения исходного числа, при котором программа выдаёт верный ответ.<p class=\"left_margin\">Это действие считается выполненным, если указаны два верных значения. Экзаменуемый не обязан пояснять этот результат или описывать механизм работы программы. <p class=\"left_margin\">3. Найти и исправить ошибки в программе.<p class=\"left_margin\">Это действие считается выполненным, если верно указаны обе ошибки и предложены верные варианты исправления, при этом никакие верные строки программы не указаны в качестве неверных. В исправленной строке допускаются незначительные синтаксические ошибки (лишние или пропущенные знаки препинания, неточные написания служебных слов языка). Ошибка считается исправленной, если выполнены оба следующих условия:<p class=\"left_margin\">а) правильно указана строка с ошибкой;<p class=\"left_margin\">б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Тренировочная работа по ИНФОРМАТИКЕ 11 класс 12 мая 2017 года  Вариант ИН10504",
            "task_id": "13635"
        },
        {
            "answer": "Решение.1. Программа выведет число 2.2. Программа выдаёт правильный ответ, например, для числа 135.Замечание для проверяющего. Программа работает неправильно из-за неверной начальной инициализации и неверной проверки отсутствия цифр, кратных 5. Соответственно, программа будет выдавать верный ответ, если вводимое число содержит хотя бы одну цифру, кратную 5, и наибольшая цифра числа, кратная 5, не равна 0 и не меньше младшей (крайней правой) цифры числа (или просто стоит последней).3. В программе есть две ошибки. Первая ошибка. Неверная инициализация ответа (переменная maxDigit).Строка с ошибкой:maxDigit := N mod 10;Верное исправление:maxDigit := -1;Вместо -1 может быть использовано любое число, меньшее 0.Вторая ошибка. Неверная проверка отсутствия цифр, кратных 5.Строка с ошибкой:ifmaxDigit = 0 thenВерное исправление:ifmaxDigit = -1 thenВместо -1 может быть другое число, меньшее 0, которое было положено в maxDigit при исправлении первой ошибки, или проверка, что maxDigit< 0Обратите внимание! В задаче требовалось выполнить четыре действия:1) указать, что выведет программа при конкретном входном числе;2) указать пример входного числа, при котором программа выдаёт верный ответ;3) исправить первую ошибку;4) исправить вторую ошибку.Для проверки правильности выполнения п. 2) нужно формально выполнить исходную (ошибочную) программу с входными данными, которые указал экзаменуемый, и убедиться в том, что результат, выданный программой, будет таким же, как и для правильной программы.Для действий 3) и 4) ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа.",
            "parsed": "2019-04-29 21:10:06.846682",
            "question": "На обработку поступает натуральное число, не превышающее 109. Нужно написать программу, которая выводит на экран максимальную цифру числа, кратную 5. Если в числе нет цифр, кратных 5, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. Напоминание: 0 делится на любое натуральное число. БейсикPython DIM N, DIGIT, MAXDIGIT AS LONG INPUT N MAXDIGIT = N MOD 10 WHILE N > 0    DIGIT = N MOD 10    IF DIGIT MOD 5 = 0 THEN        IF DIGIT > MAXDIGIT THEN            MAXDIGIT = DIGIT        END IF    END IF    N = N \\ 10 WEND IF MAXDIGIT = 0 THEN    PRINT \"NO\" ELSE    PRINT MAXDIGIT END IF  N = int(input())maxDigit = N % 10while N > 0:    digit = N % 10    if digit % 5 == 0:        if digit > maxDigit:            maxDigit = digit    N = N // 10 if maxDigit == 0:    print(\"NO\") else:    print(maxDigit)  ПаскальАлгоритмический языкvar N,digit,maxDigit: longint;begin    readln(N);    maxDigit := N mod 10;    while N > 0 do    begin        digit := N mod 10;        if digit mod 5 = 0 then            if digit > maxDigit then                maxDigit := digit;        N := N div 10;    end;    if maxDigit = 0 then        writeln('NO')    else        writeln(maxDigit)end. алгнач    цел N, digit, maxDigit    ввод N    maxDigit := mod(N,10)    нц пока N > 0        digit := mod(N,10)        если mod(digit, 5) = 0 то            если digit > maxDigit то                maxDigit := digit            все        все        N := div(N,10)    кц    если maxDigit = 0 то        вывод \"NO\"    иначе        вывод maxDigit    всеконСи++#include <iostream>using namespace std; int main() {        long N, digit, maxDigit;        cin >> N;        maxDigit = N % 10;        while (N > 0) {            digit = N % 10;            if (digit % 5 == 0)                if (digit > maxDigit)                    maxDigit = digit;            N = N / 10;        }        if (maxDigit == 0)            cout << \"NO\" << endl;        else            cout << maxDigit << endl;        return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 132.2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки: 1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940875\" width=\"100%\"><p class=\"left_margin\">На обработку поступает натуральное число, не превышающее 10<sup>9</sup>. Нужно написать программу, которая выводит на экран максимальную цифру числа, кратную 5. Если в числе нет цифр, кратных 5, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. Напоминание: 0 делится на любое натуральное число.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, MAXDIGIT AS LONG<p> INPUT N<p> MAXDIGIT = N MOD 10<p> WHILE N &gt; 0<p>    DIGIT = N MOD 10<p>    IF DIGIT MOD 5 = 0 THEN<p>        IF DIGIT &gt; MAXDIGIT THEN<p>            MAXDIGIT = DIGIT<p>        END IF<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF MAXDIGIT = 0 THEN<p>    PRINT \"NO\"<p> ELSE<p>    PRINT MAXDIGIT<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p>maxDigit = N % 10<p>while N &gt; 0:<p>    digit = N % 10<p>    if digit % 5 == 0:<p>        if digit &gt; maxDigit:<p>            maxDigit = digit<p>    N = N // 10<p> if maxDigit == 0:<p>    print(\"NO\")<p> else:<p>    print(maxDigit)<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N,digit,maxDigit: longint;<p>begin<p>    readln(N);<p>    maxDigit := N mod 10;<p>    while N &gt; 0 do<p>    begin<p>        digit := N mod 10;<p>        if digit mod 5 = 0 then<p>            if digit &gt; maxDigit then<p>                maxDigit := digit;<p>        N := N div 10;<p>    end;<p>    if maxDigit = 0 then<p>        writeln('NO')<p>    else<p>        writeln(maxDigit)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, maxDigit<p>    ввод N<p>    maxDigit := mod(N,10)<p>    нц пока N &gt; 0<p>        digit := mod(N,10)<p>        если mod(digit, 5) = 0 то<p>            если digit &gt; maxDigit то<p>                maxDigit := digit<p>            все<p>        все<p>        N := div(N,10)<p>    кц<p>    если maxDigit = 0 то<p>        вывод \"NO\"<p>    иначе<p>        вывод maxDigit<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> </p><p>int main() {<p>        long N, digit, maxDigit;<p>        cin &gt;&gt; N;<p>        maxDigit = N % 10;<p>        while (N &gt; 0) {<p>            digit = N % 10;<p>            if (digit % 5 == 0)<p>                if (digit &gt; maxDigit)<p>                    maxDigit = digit;<p>            N = N / 10;<p>        }<p>        if (maxDigit == 0)<p>            cout &lt;&lt; \"NO\" &lt;&lt; endl;<p>        else<p>            cout &lt;&lt; maxDigit &lt;&lt; endl;<p>        return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 132.<p class=\"left_margin\">2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки: <p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. Программа выведет число 2.2. Программа выдаёт правильный ответ, например, для числа 135.Замечание для проверяющего. Программа работает неправильно из-за неверной начальной инициализации и неверной проверки отсутствия цифр, кратных 5. Соответственно, программа будет выдавать верный ответ, если вводимое число содержит хотя бы одну цифру, кратную 5, и наибольшая цифра числа, кратная 5, не равна 0 и не меньше младшей (крайней правой) цифры числа (или просто стоит последней).3. В программе есть две ошибки. Первая ошибка. Неверная инициализация ответа (переменная maxDigit).Строка с ошибкой:maxDigit := N mod 10;Верное исправление:maxDigit := -1;Вместо -1 может быть использовано любое число, меньшее 0.Вторая ошибка. Неверная проверка отсутствия цифр, кратных 5.Строка с ошибкой:ifmaxDigit = 0 thenВерное исправление:ifmaxDigit = -1 thenВместо -1 может быть другое число, меньшее 0, которое было положено в maxDigit при исправлении первой ошибки, или проверка, что maxDigit< 0Обратите внимание! В задаче требовалось выполнить четыре действия:1) указать, что выведет программа при конкретном входном числе;2) указать пример входного числа, при котором программа выдаёт верный ответ;3) исправить первую ошибку;4) исправить вторую ошибку.Для проверки правильности выполнения п. 2) нужно формально выполнить исходную (ошибочную) программу с входными данными, которые указал экзаменуемый, и убедиться в том, что результат, выданный программой, будет таким же, как и для правильной программы.Для действий 3) и 4) ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol13751\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. Программа выведет число 2.<p class=\"left_margin\">2. Программа выдаёт правильный ответ, например, для числа 135.<p class=\"left_margin\">Замечание для проверяющего. Программа работает неправильно из-за неверной начальной инициализации и неверной проверки отсутствия цифр, кратных 5. Соответственно, программа будет выдавать верный ответ, если вводимое число содержит хотя бы одну цифру, кратную 5, и наибольшая цифра числа, кратная 5, не равна 0 и не меньше младшей (крайней правой) цифры числа (или просто стоит последней).<p class=\"left_margin\">3. В программе есть две ошибки. Первая ошибка. Неверная инициализация ответа (переменная maxDigit).<p class=\"left_margin\">Строка с ошибкой:<p>maxDigit := N mod 10;<p class=\"left_margin\">Верное исправление:<p>maxDigit := -1;<p class=\"left_margin\">Вместо -1 может быть использовано любое число, меньшее 0.<p class=\"left_margin\">Вторая ошибка. Неверная проверка отсутствия цифр, кратных 5.<p class=\"left_margin\">Строка с ошибкой:<p>ifmaxDigit = 0 then<p class=\"left_margin\">Верное исправление:<p>ifmaxDigit = -1 then<p class=\"left_margin\">Вместо -1 может быть другое число, меньшее 0, которое было положено в maxDigit при исправлении первой ошибки, или проверка, что <p>maxDigit&lt; 0<p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить четыре действия:<p class=\"left_margin\">1) указать, что выведет программа при конкретном входном числе;<p class=\"left_margin\">2) указать пример входного числа, при котором программа выдаёт верный ответ;<p class=\"left_margin\">3) исправить первую ошибку;<p class=\"left_margin\">4) исправить вторую ошибку.<p class=\"left_margin\">Для проверки правильности выполнения п. 2) нужно формально выполнить исходную (ошибочную) программу с входными данными, которые указал экзаменуемый, и убедиться в том, что результат, выданный программой, будет таким же, как и для правильной программы.<p class=\"left_margin\">Для действий 3) и 4) ошибка считается исправленной, если выполнены оба следующих условия:<p class=\"left_margin\">а) правильно указана строка с ошибкой;<p class=\"left_margin\">б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Де­мон­стра­ци­он­ная вер­сия ЕГЭ—2018 по информатике.",
            "task_id": "13751"
        },
        {
            "answer": "Решение.1. При вводе указанных чисел программа выведет число 4.2. Примеры значений A и B, при вводе которых программа выведет правильный числовой ответ: 6 и 4, 10 и 5, 15 и 6. Комментарий для экспертов.",
            "parsed": "2019-04-29 21:09:45.508846",
            "question": "Даны целые числа A и B, 0 ≤ B ≤ A. Последовательно вычисляются значения A – 1, A – 1 – 2, A – 1 – 2 – 3 и т. д. Необходимо вывести наибольшее из этих значений, которое меньше B. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM A,B,S,K AS INTEGER INPUT A, B IF NOT (0<=B AND B<=A) THEN     PRINT \"Неверные данные\" ELSE     S = A     K = 0     WHILE S > B         S = S - K         K = K + 1     WEND     PRINT K END IF END a = int(input())b = int(input())if not 0<=b<=a:    print(\"Неверные данные\")else:    s = a    k = 0    while s > b:        s = s-k        k = k+1    print(k)  ПаскальАлгоритмический языкvar a, b, s, k: integer;begin    read(a,b);    if not ((0<=b) and (b<=a)) then        writeln('Неверные данные')    else begin        s := a;        k := 0;        while s > b do begin            s := s-k;            k := k+1;        end;        writeln(k)    endend. алгнач    цел a, b, s, k    ввод a, b    если не 0<=b<=a        то        вывод \"Неверные данные\"        иначе        s := a        k := 0        нц пока s > b            s := s-k            k := k+1        кц        вывод k    всеконСи++#include using namespace std;int main(){    int a, b, s, k;    cin >> a >> b;    if (!(0<=b && b<=a))        cout << \"Неверные данные\";    else {        s = a;        k = 0;        while (s > b) {            s = s-k;            k = k+1;        }        cout << k;    }    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 6 и 2.2. Приведите пример таких значений A и B, при вводе которых программа выведет правильный числовой ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940387\" width=\"100%\"><p class=\"left_margin\">Даны целые числа A и B, 0 ≤ B ≤ A. Последовательно вычисляются значения A – 1, A – 1 – 2, A – 1 – 2 – 3 и т. д. Необходимо вывести наибольшее из этих значений, которое меньше B. <p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,B,S,K AS INTEGER<p> INPUT A, B<p> IF NOT (0&lt;=B AND B&lt;=A) THEN<p>     PRINT \"Неверные данные\"<p> ELSE<p>     S = A<p>     K = 0<p>     WHILE S &gt; B<p>         S = S - K<p>         K = K + 1<p>     WEND<p>     PRINT K<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>b = int(input())<p>if not 0&lt;=b&lt;=a:<p>    print(\"Неверные данные\")<p>else:<p>    s = a<p>    k = 0<p>    while s &gt; b:<p>        s = s-k<p>        k = k+1<p>    print(k)<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, b, s, k: integer;<p>begin<p>    read(a,b);<p>    if not ((0&lt;=b) and (b&lt;=a)) then<p>        writeln('Неверные данные')<p>    else begin<p>        s := a;<p>        k := 0;<p>        while s &gt; b do begin<p>            s := s-k;<p>            k := k+1;<p>        end;<p>        writeln(k)<p>    end<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, b, s, k<p>    ввод a, b<p>    если не 0&lt;=b&lt;=a<p>        то<p>        вывод \"Неверные данные\"<p>        иначе<p>        s := a<p>        k := 0<p>        нц пока s &gt; b<p>            s := s-k<p>            k := k+1<p>        кц<p>        вывод k<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include <iostream><p>using namespace std;<p>int main(){<p>    int a, b, s, k;<p>    cin &gt;&gt; a &gt;&gt; b;<p>    if (!(0&lt;=b &amp;&amp; b&lt;=a))<p>        cout &lt;&lt; \"Неверные данные\";<p>    else {<p>        s = a;<p>        k = 0;<p>        while (s &gt; b) {<p>            s = s-k;<p>            k = k+1;<p>        }<p>        cout &lt;&lt; k;<p>    }<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></iostream></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 6 и 2.<p class=\"left_margin\">2. Приведите пример таких значений A и B, при вводе которых программа выведет правильный числовой ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p> </p><p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе указанных чисел программа выведет число 4.2. Примеры значений A и B, при вводе которых программа выведет правильный числовой ответ: 6 и 4, 10 и 5, 15 и 6. Комментарий для экспертов.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol14239\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе указанных чисел программа выведет число 4.<p class=\"left_margin\">2. Примеры значений A и B, при вводе которых программа выведет правильный числовой ответ: 6 и 4, 10 и 5, 15 и 6.<p> </p><p><b><i>Комментарий для экспертов.</i></b></p></p></p></div>",
            "source": "",
            "task_id": "14239"
        },
        {
            "answer": "Решение.1. При вводе указанных чисел программа выведет число 0. Комментарий для экспертов.",
            "parsed": "2019-04-29 21:09:45.937836",
            "question": "Даны целые числа A и B, 0 ≤ B ≤ A. Последовательно вычисляются значения A – 1, A – 1 – 2, A – 1 – 2 – 3 и т.д. Необходимо вывести наибольшее из этих значений, которое меньше B.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A,B,S,K AS INTEGER INPUT A, B IF NOT (0<=B AND B<=A) THEN     PRINT \"Неверные данные\" ELSE     S = 0     K = 0     WHILE S > B         K = K + 1         S = S - K     WEND     PRINT S END IF END a = int(input())b = int(input())if not 0<=b<=a:    print(\"Неверные данные\")else:    s = 0    k = 0    while s > b:        k = k+1        s = s-k    print(s)  ПаскальАлгоритмический языкvar a, b, s, k: integer;begin    read(a,b);    if not ((0<=b) and (b<=a)) then        writeln('Неверные данные')    else begin        s := 0;        k := 0;        while s > b do begin            k := k+1;            s := s-k;        end;        writeln(s)    endend. алгнач    цел a, b, s, k    ввод a, b    если не 0<=b<=a        то        вывод \"Неверные данные\"        иначе        s := 0        k := 0        нц пока s > b            k := k+1            s := s-k        кц        вывод s    всеконСи++#include <iostream>using namespace std;int main(){    int a, b, s, k;    cin >> a >> b;    if (!(0<=b && b<=a))        cout << \"Неверные данные\";    else {        s = 0;        k = 0;        while (s > b) {            k = k+1;            s = s-k;        }        cout << s;    }    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 12345 и 1234.2. Приведите пример таких значений A и B, при вводе которых программа выведет правильный числовой ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body940343\" width=\"100%\"><p class=\"left_margin\">Даны целые числа A и B, 0 ≤ B ≤ A. Последовательно вычисляются значения A – 1, A – 1 – 2, A – 1 – 2 – 3 и т.д. Необходимо вывести наибольшее из этих значений, которое меньше B.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A,B,S,K AS INTEGER<p> INPUT A, B<p> IF NOT (0&lt;=B AND B&lt;=A) THEN<p>     PRINT \"Неверные данные\"<p> ELSE<p>     S = 0<p>     K = 0<p>     WHILE S &gt; B<p>         K = K + 1<p>         S = S - K<p>     WEND<p>     PRINT S<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>b = int(input())<p>if not 0&lt;=b&lt;=a:<p>    print(\"Неверные данные\")<p>else:<p>    s = 0<p>    k = 0<p>    while s &gt; b:<p>        k = k+1<p>        s = s-k<p>    print(s)<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, b, s, k: integer;<p>begin<p>    read(a,b);<p>    if not ((0&lt;=b) and (b&lt;=a)) then<p>        writeln('Неверные данные')<p>    else begin<p>        s := 0;<p>        k := 0;<p>        while s &gt; b do begin<p>            k := k+1;<p>            s := s-k;<p>        end;<p>        writeln(s)<p>    end<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, b, s, k<p>    ввод a, b<p>    если не 0&lt;=b&lt;=a<p>        то<p>        вывод \"Неверные данные\"<p>        иначе<p>        s := 0<p>        k := 0<p>        нц пока s &gt; b<p>            k := k+1<p>            s := s-k<p>        кц<p>        вывод s<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int a, b, s, k;<p>    cin &gt;&gt; a &gt;&gt; b;<p>    if (!(0&lt;=b &amp;&amp; b&lt;=a))<p>        cout &lt;&lt; \"Неверные данные\";<p>    else {<p>        s = 0;<p>        k = 0;<p>        while (s &gt; b) {<p>            k = k+1;<p>            s = s-k;<p>        }<p>        cout &lt;&lt; s;<p>    }<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 12345 и 1234.<p class=\"left_margin\">2. Приведите пример таких значений A и B, при вводе которых программа выведет правильный числовой ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). <p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p> </p><p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе указанных чисел программа выведет число 0. Комментарий для экспертов.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol14283\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе указанных чисел программа выведет число 0.<p> </p><p><b><i>Комментарий для экспертов.</i></b></p></p></div>",
            "source": "",
            "task_id": "14283"
        },
        {
            "answer": "Решение.1. При вводе A = 6 программа выведет число 4.2. Минимальное A>10, при котором программа выдаёт неверный ответ, равно 24. Программа выдаёт неверные ответы, если введённое число оказывается точным факториалом. Минимальный точный факториал, больший 10, равен 24.3. Программа содержит две ошибки.1) Неверная инициализация. Начальное значение переменной K должно быть равно 1. Это значение не влияет на работу программы при A>1, но при A = 1 оно оказывается существенным. Если исправить вторую ошибку, сохранив нулевое начальное значение K, то программа выдаст ответ 0 вместо правильного 1.2) Неверное условие цикла. Пример исправления для языка Паскаль: Первая ошибка: k := 0; Исправленная строка: k := 1; Вторая ошибка:while f <= a do begin Исправленная строка: while f < a do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления",
            "parsed": "2019-04-29 21:09:46.325446",
            "question": "Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.Дано целое положительное число A. Необходимо найти минимальное натуральное K, для которого K! ≥ A.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, K, F AS INTEGER INPUT A K = 0 F = 1 WHILE F <= A    K = K + 1    F = F * K WEND PRINT K END a = int(input())k = 0f = 1while f <= a:    k += 1    f *= kprint(k) ПаскальАлгоритмический языкvar a, k, f: integer;begin    read(a);    k := 0;    f := 1;    while f <= a do begin        k := k + 1;        f := f * k    end;    writeln(k)end. алгнач    цел a, k, f    ввод a    k := 0    f := 1    нц пока f <= a        k := k + 1        f := f * k    кц    вывод kконСи++#include using namespace std;int main(){    int a, k, f;    cin >> a;    k = 0;    f = 1;    while (f <= a) {        ++k;        f *= k;    }    cout << k;    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе A = 6.2. Назовите минимальное A, большее 10, при котором программа выведет неверный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body939914\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.<p class=\"left_margin\">Дано целое положительное число A. Необходимо найти минимальное натуральное K, для которого K! ≥ A.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, K, F AS INTEGER<p> INPUT A<p> K = 0<p> F = 1<p> WHILE F &lt;= A<p>    K = K + 1<p>    F = F * K<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>k = 0<p>f = 1<p>while f &lt;= a:<p>    k += 1<p>    f *= k<p>print(k)<p></p></p></p></p></p></p></p></p></div> </td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, k, f: integer;<p>begin<p>    read(a);<p>    k := 0;<p>    f := 1;<p>    while f &lt;= a do begin<p>        k := k + 1;<p>        f := f * k<p>    end;<p>    writeln(k)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, k, f<p>    ввод a<p>    k := 0<p>    f := 1<p>    нц пока f &lt;= a<p>        k := k + 1<p>        f := f * k<p>    кц<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include <iostream><p>using namespace std;<p>int main(){<p>    int a, k, f;<p>    cin &gt;&gt; a;<p>    k = 0;<p>    f = 1;<p>    while (f &lt;= a) {<p>        ++k;<p>        f *= k;<p>    }<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></iostream></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>A</i> = 6.<p class=\"left_margin\">2. Назовите<b> <i>минимальное A, большее 10,</i></b> при котором программа выведет <b><i>неверный</i></b> ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе A = 6 программа выведет число 4.2. Минимальное A>10, при котором программа выдаёт неверный ответ, равно 24. Программа выдаёт неверные ответы, если введённое число оказывается точным факториалом. Минимальный точный факториал, больший 10, равен 24.3. Программа содержит две ошибки.1) Неверная инициализация. Начальное значение переменной K должно быть равно 1. Это значение не влияет на работу программы при A>1, но при A = 1 оно оказывается существенным. Если исправить вторую ошибку, сохранив нулевое начальное значение K, то программа выдаст ответ 0 вместо правильного 1.2) Неверное условие цикла. Пример исправления для языка Паскаль: Первая ошибка: k := 0; Исправленная строка: k := 1; Вторая ошибка:while f <= a do begin Исправленная строка: while f < a do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol14710\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе A = 6 программа выведет число 4.<p class=\"left_margin\">2. Минимальное A&gt;10, при котором программа выдаёт неверный ответ, равно 24. Программа выдаёт <b><i>неверные </i></b>ответы, если введённое число оказывается точным факториалом. Минимальный точный факториал, больший 10, равен 24.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Начальное значение переменной K должно быть равно 1. Это значение не влияет на работу программы при A&gt;1, но при A = 1 оно оказывается существенным. Если исправить вторую ошибку, сохранив нулевое начальное значение K, то программа выдаст ответ 0 вместо правильного 1.<p class=\"left_margin\">2) Неверное условие цикла.<p> </p><p><b>Пример исправления для языка Паскаль:</b><p> </p><p><i><b>Первая ошибка:</b></i><p> k := 0;<p> Исправленная строка:<p> k := 1;<p> </p><p><i><b>Вторая ошибка:</b></i><p>while f &lt;= a do begin<p> Исправленная строка: <p>while f &lt; a do begin<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: СтатГрад: Тре­ни­ро­воч­ная ра­бо­та 28.11.2017 ИН10203",
            "task_id": "14710"
        },
        {
            "answer": "Решение.1. При вводе A = 5 программа выведет число 4.2. Минимальное A>10, при котором программа выдает неверный ответ, равно 13. Программа выдаёт ответ 5, правильный ответ равен 4. При вводе меньших чисел, 11 и 12, программа выдаёт верный ответ 4.3. Программа содержит две ошибки.1) Неверная инициализация. Значения переменных F и K не согласованы: эти переменные могут быть равны 1 или 2, но они должны быть одинаковы.2) Неверное условие цикла.2) Неверное условие цикла. Пример исправления для языка Паскаль: Первая ошибка, способ 1: k := 2; Исправленная строка: k := 1; Первая ошибка, способ 2: f:= 1; Исправленная строка: f := 2; Вторая ошибка:while f < a do begin Исправленная строка: while f <= a do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления",
            "parsed": "2019-04-29 21:09:46.755954",
            "question": "Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.Дано целое положительное число A. Необходимо найти минимальное натуральное K, для которого K! > A.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM A, K, F AS INTEGER INPUT A K = 2 F = 1 WHILE F < A    K = K + 1    F = F * K WEND PRINT K END a = int(input())k = 2f = 1while f < a:    k += 1    f *= kprint(k) ПаскальАлгоритмический языкvar a, k, f: integer;begin    read(a);    k := 2;    f := 1;    while f < a do begin        k := k + 1;        f := f * k    end;    writeln(k)end. алгнач    цел a, k, f    ввод a    k := 2    f := 1    нц пока f < a        k := k + 1        f := f * k    кц    вывод kконСи++#include using namespace std;int main(){    int a, k, f;    cin >> a;    k = 2;    f = 1;    while (f < a) {        ++k;        f *= k;    }    cout << k;    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе A = 5.2. Назовите минимальное A, большее 10, при котором программа выведет неверный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body939837\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.<p class=\"left_margin\">Дано целое положительное число A. Необходимо найти <b>минимальное </b>натуральное K, для которого K! &gt; A.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, K, F AS INTEGER<p> INPUT A<p> K = 2<p> F = 1<p> WHILE F &lt; A<p>    K = K + 1<p>    F = F * K<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>k = 2<p>f = 1<p>while f &lt; a:<p>    k += 1<p>    f *= k<p>print(k)<p></p></p></p></p></p></p></p></p></div> </td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, k, f: integer;<p>begin<p>    read(a);<p>    k := 2;<p>    f := 1;<p>    while f &lt; a do begin<p>        k := k + 1;<p>        f := f * k<p>    end;<p>    writeln(k)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, k, f<p>    ввод a<p>    k := 2<p>    f := 1<p>    нц пока f &lt; a<p>        k := k + 1<p>        f := f * k<p>    кц<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include <iostream><p>using namespace std;<p>int main(){<p>    int a, k, f;<p>    cin &gt;&gt; a;<p>    k = 2;<p>    f = 1;<p>    while (f &lt; a) {<p>        ++k;<p>        f *= k;<p>    }<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></iostream></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе A = 5.<p class=\"left_margin\">2. Назовите минимальное A, большее 10, при котором программа выведет неверный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе A = 5 программа выведет число 4.2. Минимальное A>10, при котором программа выдает неверный ответ, равно 13. Программа выдаёт ответ 5, правильный ответ равен 4. При вводе меньших чисел, 11 и 12, программа выдаёт верный ответ 4.3. Программа содержит две ошибки.1) Неверная инициализация. Значения переменных F и K не согласованы: эти переменные могут быть равны 1 или 2, но они должны быть одинаковы.2) Неверное условие цикла.2) Неверное условие цикла. Пример исправления для языка Паскаль: Первая ошибка, способ 1: k := 2; Исправленная строка: k := 1; Первая ошибка, способ 2: f:= 1; Исправленная строка: f := 2; Вторая ошибка:while f < a do begin Исправленная строка: while f <= a do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol14785\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе A = 5 программа выведет число 4.<p class=\"left_margin\">2. Минимальное A&gt;10, при котором программа выдает неверный ответ, равно 13. Программа выдаёт ответ 5, правильный ответ равен 4. При вводе меньших чисел, 11 и 12, программа выдаёт верный ответ 4.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Значения переменных F и K не согласованы: эти переменные могут быть равны 1 или 2, но они должны быть одинаковы.<p class=\"left_margin\">2) Неверное условие цикла.<p class=\"left_margin\">2) Неверное условие цикла.<p> </p><p><b>Пример исправления для языка Паскаль:</b><p> </p><p><i><b>Первая ошибка, способ 1:</b></i><p> k := 2;<p> Исправленная строка:<p> k := 1;<p> </p><p><i><b>Первая ошибка, способ 2:</b></i><p> f:= 1;<p> Исправленная строка:<p> f := 2;<p> </p><p><i><b>Вторая ошибка:</b></i><p>while f &lt; a do begin<p> Исправленная строка: <p>while f &lt;= a do begin<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "14785"
        },
        {
            "answer": "Решение.1. При вводе  программа выведет число 4.2. Минимальное  при котором программа выдаёт неверный ответ, равно 24. Программа выдаёт неверный ответ 5. При вводе чисел от 11 до 23 программа выдаёт верный ответ 4.3. Программа содержит две ошибки.1) Неверная инициализация. Значения переменных S и K не согласованы: эти переменные могут быть равны 1 или 0, но они должны быть одинаковы. В результате этой ошибки текущее значение суммы всегда оказывается на 1 меньше правильного.2) Неверное условие цикла. Вместо суммы факториалов с заданным числом сравнивается последний вычисленный факториал. Пример исправления для языка Паскаль: Первая ошибка, способ 1:k := 1;Исправленная строка:k := 0; Первая ошибка, способ 2:s := 0;Исправленная строка:s := 1; Вторая ошибка:while f <= a do beginИсправленная строка:while s <= a do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:47.149683",
            "question": "Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.Дано целое положительное число A. Необходимо вывести минимальное натуральное число K, для которого 1! + 2! + … + K! > A.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, K, F, S AS INTEGER INPUT A K = 1 F = 1 S = 0 WHILE F <= A     K = K + 1     F = F * K    S = S + F WEND PRINT K END a = int(input())    k = 1    f = 1    s = 0while f <= a:    k += 1    f *= k    s += fprint(k)  ПаскальАлгоритмический языкvar a, k, f, s: integer;begin    read(a);    k := 1;    f := 1;    s := 0;    while f <= a do begin       &nbspk := k + 1;       &nbspf := f * k;       &nbsps := s + f    end;    writeln(k)end. алгнач    цел a, k, f, s     ввод a    &nbspk := 1   &nbspf := 1   &nbsps := 0     нц пока f <= a       &nbspk := k + 1       &nbspf := f * k       &nbsps := s + f     кц     вывод kконС++#include <iostream>using namespace std;int main(){   &nbspint a, k, f, s;    cin >> a;    k = 1;    f = 1;    s = 0;    while (f <= a) {        ++k;        f *= k;        s += f;    }    cout << k;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе A = 8.2. Назовите минимальное A, большее 10, при котором программа выведет неверный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body939507\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.<p class=\"left_margin\">Дано целое положительное число A. <p class=\"left_margin\">Необходимо вывести минимальное натуральное число K, для которого 1! + 2! + … + K! &gt; A.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, K, F, S AS INTEGER<p> INPUT A<p> K = 1<p> F = 1<p> S = 0<p> WHILE F &lt;= A <p>    K = K + 1 <p>    F = F * K<p>    S = S + F<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>    k = 1<p>    f = 1<p>    s = 0<p>while f &lt;= a:<p>    k += 1<p>    f *= k<p>    s += f<p>print(k)<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, k, f, s: integer;<p>begin<p>    read(a);<p>    k := 1;<p>    f := 1;<p>    s := 0;<p>    while f &lt;= a do begin<p>       &amp;nbspk := k + 1;<p>       &amp;nbspf := f * k;<p>       &amp;nbsps := s + f<p>    end;<p>    writeln(k)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, k, f, s <p>    ввод a <p>   &amp;nbspk := 1<p>   &amp;nbspf := 1<p>   &amp;nbsps := 0 <p>    нц пока f &lt;= a<p>       &amp;nbspk := k + 1<p>       &amp;nbspf := f * k<p>       &amp;nbsps := s + f <p>    кц <p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>   &amp;nbspint a, k, f, s;<p>    cin &gt;&gt; a;<p>    k = 1;<p>    f = 1;<p>    s = 0;<p>    while (f &lt;= a) {<p>        ++k;<p>        f *= k;<p>        s += f;<p>    }<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе A = 8.<p class=\"left_margin\">2. Назовите <b>минимальное A, большее 10,</b> при котором программа выведет <b>неверный</b> ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе  программа выведет число 4.2. Минимальное  при котором программа выдаёт неверный ответ, равно 24. Программа выдаёт неверный ответ 5. При вводе чисел от 11 до 23 программа выдаёт верный ответ 4.3. Программа содержит две ошибки.1) Неверная инициализация. Значения переменных S и K не согласованы: эти переменные могут быть равны 1 или 0, но они должны быть одинаковы. В результате этой ошибки текущее значение суммы всегда оказывается на 1 меньше правильного.2) Неверное условие цикла. Вместо суммы факториалов с заданным числом сравнивается последний вычисленный факториал. Пример исправления для языка Паскаль: Первая ошибка, способ 1:k := 1;Исправленная строка:k := 0; Первая ошибка, способ 2:s := 0;Исправленная строка:s := 1; Вторая ошибка:while f <= a do beginИсправленная строка:while s <= a do begin В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15119\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/4e/4efbb7fb686ad13930de90271cf75c09.svg\" style=\"vertical-align:-2pt\"/> программа выведет число 4.<p class=\"left_margin\">2. Минимальное <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/32/3271d8c6ed02edac0c20843a0ba3653e.svg\" style=\"vertical-align:-3pt\"/> при котором программа выдаёт <i><b>неверный</b></i> ответ, равно 24. Программа выдаёт неверный ответ 5. При вводе чисел от 11 до 23 программа выдаёт верный ответ 4.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Значения переменных <i>S</i> и <i>K</i> не согласованы: эти переменные могут быть равны 1 или 0, но они должны быть одинаковы. В результате этой ошибки текущее значение суммы всегда оказывается на 1 меньше правильного.<p class=\"left_margin\">2) Неверное условие цикла. Вместо суммы факториалов с заданным числом сравнивается последний вычисленный факториал.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><i>Первая ошибка, способ 1:</i><p class=\"left_margin\">k := 1;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">k := 0;<p> </p><p class=\"left_margin\"><i>Первая ошибка, способ 2:</i><p class=\"left_margin\">s := 0;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">s := 1;<p> </p><p class=\"left_margin\"><i>Вторая ошибка:</i><p class=\"left_margin\">while f &lt;= a do begin<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">while s &lt;= a do begin<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "15119"
        },
        {
            "answer": "Решение.1. При вводе  программа выведет число 4.2. Минимальное  при котором программа выдаёт верный ответ, равно 33. Программа выдаёт верный ответ 5. При вводе чисел от 11 до 32 программа выдаёт ответ 5 вместо верного ответа 4.3. Программа содержит две ошибки.1) Неверная инициализация. Значения переменных K и S не согласованы: эти переменные могут быть равны 1 и 0 или 2 и 1, но не 1 и 1. В результате этой ошибки текущее значение суммы всегда оказывается на 1 больше правильного.2) Неверный порядок действий в цикле. В результате факториал и сумма факториалов вычисляются для предыдущего значения K. Поскольку менять строки местами не разрешается, для исправления ошибки нужно внести коррективы при выводе ответа. Пример исправления для языка Паскаль: Первая ошибка, способ 1:k := 1;Исправленная строка:k := 2; Первая ошибка, способ 2:s := 1;Исправленная строка:s := 0; Вторая ошибка:writeln(k)Исправленная строка:writeln(k-1) В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:47.566440",
            "question": "Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.Дано целое положительное число A. Необходимо вывести минимальное натуральное число K, для которого 1! + 2! + … + K! > A.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, K, F, S AS INTEGER INPUT A K = 1 F = 1 S = 1 WHILE S <= A     F = F * K    K = K + 1    S = S + F WEND PRINT K END a = int(input())    k = 1    f = 1    s = 1while s <= a:    f *= k    k += 1    s += fprint(k)  ПаскальАлгоритмический языкvar a, k, f, s: integer;begin    read(a);    k := 1;    f := 1;    s := 1;    while s <= a do begin       &nbspf := f * k;       &nbspk := k + 1;       &nbsps := s + f    end;    writeln(k)end. алгнач    цел a, k, f, s     ввод a      k := 1     f := 1     s := 1      нц пока s <= a         f := f * k;         k := k + 1;         s := s + f      кц      вывод kконС++#include <iostream>using namespace std;int main(){     int a, k, f, s;     cin >> a;     k = 1;     f = 1;     s = 1;     while (s <= a) {        f *= k;        ++k;        s += f;    }    cout << k;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе A = 6.2. Назовите минимальное A, большее 10, при котором программа выведет верный ответ.3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body939478\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.<p class=\"left_margin\">Дано целое положительное число A. <p class=\"left_margin\">Необходимо вывести минимальное натуральное число K, для которого 1! + 2! + … + K! &gt; A.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, K, F, S AS INTEGER<p> INPUT A<p> K = 1<p> F = 1<p> S = 1<p> WHILE S &lt;= A <p>    F = F * K<p>    K = K + 1<p>    S = S + F<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>    k = 1<p>    f = 1<p>    s = 1<p>while s &lt;= a:<p>    f *= k<p>    k += 1<p>    s += f<p>print(k)<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, k, f, s: integer;<p>begin<p>    read(a);<p>    k := 1;<p>    f := 1;<p>    s := 1;<p>    while s &lt;= a do begin<p>       &amp;nbspf := f * k;<p>       &amp;nbspk := k + 1;<p>       &amp;nbsps := s + f<p>    end;<p>    writeln(k)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, k, f, s <p>    ввод a <p>     k := 1<p>     f := 1<p>     s := 1 <p>     нц пока s &lt;= a<p>         f := f * k;<p>         k := k + 1;<p>         s := s + f <p>     кц <p>     вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>     int a, k, f, s;<p>     cin &gt;&gt; a;<p>     k = 1;<p>     f = 1;<p>     s = 1;<p>     while (s &lt;= a) {<p>        f *= k;<p>        ++k;<p>        s += f;<p>    }<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе A = 6.<p class=\"left_margin\">2. Назовите <b>минимальное A, большее 10,</b> при котором программа выведет <b>верный</b> ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе  программа выведет число 4.2. Минимальное  при котором программа выдаёт верный ответ, равно 33. Программа выдаёт верный ответ 5. При вводе чисел от 11 до 32 программа выдаёт ответ 5 вместо верного ответа 4.3. Программа содержит две ошибки.1) Неверная инициализация. Значения переменных K и S не согласованы: эти переменные могут быть равны 1 и 0 или 2 и 1, но не 1 и 1. В результате этой ошибки текущее значение суммы всегда оказывается на 1 больше правильного.2) Неверный порядок действий в цикле. В результате факториал и сумма факториалов вычисляются для предыдущего значения K. Поскольку менять строки местами не разрешается, для исправления ошибки нужно внести коррективы при выводе ответа. Пример исправления для языка Паскаль: Первая ошибка, способ 1:k := 1;Исправленная строка:k := 2; Первая ошибка, способ 2:s := 1;Исправленная строка:s := 0; Вторая ошибка:writeln(k)Исправленная строка:writeln(k-1) В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15146\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/60/6074e373333fbb82dcac9fd0a04e111b.svg\" style=\"vertical-align:-2pt\"/> программа выведет число 4.<p class=\"left_margin\">2. Минимальное <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/32/3271d8c6ed02edac0c20843a0ba3653e.svg\" style=\"vertical-align:-3pt\"/> при котором программа выдаёт <b>верный</b> ответ, равно 33. Программа выдаёт верный ответ 5. При вводе чисел от 11 до 32 программа выдаёт ответ 5 вместо верного ответа 4.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Значения переменных <i>K</i> и <i>S</i> не согласованы: эти переменные могут быть равны 1 и 0 или 2 и 1, но не 1 и 1. В результате этой ошибки текущее значение суммы всегда оказывается на 1 больше правильного.<p class=\"left_margin\">2) Неверный порядок действий в цикле. В результате факториал и сумма факториалов вычисляются для предыдущего значения <i>K</i>. Поскольку менять строки местами не разрешается, для исправления ошибки нужно внести коррективы при выводе ответа.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><i>Первая ошибка, способ 1:</i><p class=\"left_margin\">k := 1;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">k := 2;<p> </p><p class=\"left_margin\"><i>Первая ошибка, способ 2:</i><p class=\"left_margin\">s := 1;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">s := 0;<p> </p><p class=\"left_margin\"><i>Вторая ошибка:</i><p class=\"left_margin\">writeln(k)<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">writeln(k-1)<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "15146"
        },
        {
            "answer": "Решение.1. При вводе числа 7 15 8 21 программа сначала выведет 2, затем 1000.2. Примеры чисел, при вводе которых программа выводит корректный ответ: 2 3 4 1000.Комментарий для экспертов. Программа выводит сначала количество чисел, некратных 3, затем выводит 1000. Либо корректно работает при отсутствии в ряду таких чисел. Пример исправления для языка Паскаль:Первая ошибка:maximum := 1000; Исправленная строка:maximum := 0; Вторая ошибка:maximum := i; Исправленная строка:maximum := x; Пояснение для эксперта.В неправильной версии алгоритм никогда не зайдет в условие изменения максимума, т. к. в переменной maximum уже записано максимальное значение. Если же исправить инициализацию переменной maximum (ошибка 1), то в данной переменной будет хранится индекс считанного числа, что неверно. Поэтому необходимо в качестве нового значения переменной maximum указать считанное значение x (ошибка 2).В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления В задаче требуется выполнить три действия.1. Указать результат программы при данном вводе.Это действие считается выполненным, если указан верный результат работы программы при заданных входных данных. Экзаменуемый не обязан объяснять, как получен этот результат, достаточно указать верное число.2. Указать пример ввода, при котором программа выводит верный ответ.Это действие считается выполненным, если указан пример числа, при вводе которого выводится верное сообщение (верные значения), причем результатом работы программы не может быть строка «NO». Ученик не обязан указывать, что будет выведено, и объяснять, как работает программа.3. Найти и исправить ошибки в программе.Это действие считается выполненным, если верно указаны обе ошибки и предложены верные варианты исправления, при этом никакие верные строки программы не указаны в качестве неверных. В исправленной строке допускаются незначительные синтаксические ошибки (лишние или пропущенные знаки препинания, неточные написания служебных слов языка). Ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа",
            "parsed": "2019-04-29 21:09:47.990657",
            "question": "На вход программы поступают 4 неотрицательных целых числа, не превышающие 1000, среди которых могут быть одинаковые. Нужно написать программу, которая выводит количество чисел, не кратных 3, и максимальное из этих чисел. Если среди входных данных нет чисел, не кратных трёх, программа должна вывести слово «NO». Программист написал программу неправильно. БейсикPython COUNT = 0 MAXIMUM = 1000 FOR I = 1 TO 4    INPUT X    IF X MOD 3 <> 0 THEN        COUNT = COUNT + 1        IF X > MAXIMUM THEN            MAXIMUM = I        END IF    END IF NEXT I IF COUNT > THEN    PRINT COUNT    PRINT MAXIMUM ELSE    PRINT “NO” END IF count = 0maximum = 1000for i in range(4):    x = int(input())    if x % 3 != 0:        count = count + 1        if x > maximum:            maximum = iif count > 0:    print(count)    print(maximum)else:     print(\"NO\")  ПаскальАлгоритмический языкvar i, x: integer;var maximum, count: integer;begin     count := 0;    maximum := 1000;    for i:=1 to 4 do begin         read( x );         if x mod 3 <> 0 then begin             count := count + 1;             if x > maximum then                 maximum := i;             end;         end;     if count > 0 then begin         writeln(count);         writeln(maximum);     end     else        writeln('NO'); end. алгначцел i, xцел maximum, countcount := 0maximum := 1000нц для i от 1 до 4ввод xесли mod(x, 3) <> 0 тоcount := count + 1если x > maximum тоmaximum := iвсевсекцесли count > 0 товывод count, нсвывод maximumиначевывод \"NO\"всеконСи++#include <iostream>using namespace std; int main(){    int i, x, maximum;    int count = 0;     maximum = 1000;    for (i=1; i<= 4; i++) {         cin >> x;         if ( x % 3 != 0 ) {             count = count + 1;             if ( x > maximum ) maximum = i;             }         }     if ( count > 0 ) {         cout << count << endl;        cout << maximum;    }    else         cout << \"NO\";     return 0; }  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 7 15 8 21. 2. Приведите пример такой последовательности, содержащей число, кратное 3, при вводе которой программа выведет правильный ответ. 3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938980\" width=\"100%\"><p class=\"left_margin\">На вход программы поступают 4 неотрицательных целых числа, не превышающие 1000, среди которых могут быть одинаковые. Нужно написать программу, которая выводит количество чисел, не кратных 3, и максимальное из этих чисел. Если среди входных данных нет чисел, не кратных трёх, программа должна вывести слово «NO». Программист написал программу неправильно.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> COUNT = 0<p> MAXIMUM = 1000<p> FOR I = 1 TO 4<p>    INPUT X<p>    IF X MOD 3 &lt;&gt; 0 THEN<p>        COUNT = COUNT + 1<p>        IF X &gt; MAXIMUM THEN<p>            MAXIMUM = I<p>        END IF<p>    END IF<p> NEXT I<p> IF COUNT &gt; THEN<p>    PRINT COUNT<p>    PRINT MAXIMUM<p> ELSE<p>    PRINT “NO”<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>count = 0<p>maximum = 1000<p>for i in range(4):<p>    x = int(input())<p>    if x % 3 != 0:<p>        count = count + 1<p>        if x &gt; maximum:<p>            maximum = i<p>if count &gt; 0:<p>    print(count)<p>    print(maximum)<p>else: <p>    print(\"NO\")<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var i, x: integer;<p>var maximum, count: integer;<p>begin<p>     count := 0;<p>    maximum := 1000;<p>    for i:=1 to 4 do begin<p>         read( x );<p>         if x mod 3 &lt;&gt; 0 then begin<p>             count := count + 1;<p>             if x &gt; maximum then<p>                 maximum := i; <p>            end;<p>         end;<p>     if count &gt; 0 then begin <p>        writeln(count); <p>        writeln(maximum);<p>     end <p>    else<p>        writeln('NO');<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел i, x<p>цел maximum, count<p>count := 0<p>maximum := 1000<p>нц для i от 1 до 4<p>ввод x<p>если mod(x, 3) &lt;&gt; 0 то<p>count := count + 1<p>если x &gt; maximum то<p>maximum := i<p>все<p>все<p>кц<p>если count &gt; 0 то<p>вывод count, нс<p>вывод maximum<p>иначе<p>вывод \"NO\"<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> </p><p>int main(){<p>    int i, x, maximum;<p>    int count = 0; <p>    maximum = 1000;<p>    for (i=1; i&lt;= 4; i++) {<p>         cin &gt;&gt; x;<p>         if ( x % 3 != 0 ) {<p>             count = count + 1;<p>             if ( x &gt; maximum ) maximum = i; <p>            } <p>        }<p>     if ( count &gt; 0 ) { <p>        cout &lt;&lt; count &lt;&lt; endl;<p>        cout &lt;&lt; maximum;<p>    }<p>    else <p>        cout &lt;&lt; \"NO\";<p>     return 0; <p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 7 15 8 21. <p class=\"left_margin\">2. Приведите пример такой последовательности, содержащей число, кратное 3, при вводе которой программа выведет правильный ответ. <p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 7 15 8 21 программа сначала выведет 2, затем 1000.2. Примеры чисел, при вводе которых программа выводит корректный ответ: 2 3 4 1000.Комментарий для экспертов. Программа выводит сначала количество чисел, некратных 3, затем выводит 1000. Либо корректно работает при отсутствии в ряду таких чисел. Пример исправления для языка Паскаль:Первая ошибка:maximum := 1000; Исправленная строка:maximum := 0; Вторая ошибка:maximum := i; Исправленная строка:maximum := x; Пояснение для эксперта.В неправильной версии алгоритм никогда не зайдет в условие изменения максимума, т. к. в переменной maximum уже записано максимальное значение. Если же исправить инициализацию переменной maximum (ошибка 1), то в данной переменной будет хранится индекс считанного числа, что неверно. Поэтому необходимо в качестве нового значения переменной maximum указать считанное значение x (ошибка 2).В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления В задаче требуется выполнить три действия.1. Указать результат программы при данном вводе.Это действие считается выполненным, если указан верный результат работы программы при заданных входных данных. Экзаменуемый не обязан объяснять, как получен этот результат, достаточно указать верное число.2. Указать пример ввода, при котором программа выводит верный ответ.Это действие считается выполненным, если указан пример числа, при вводе которого выводится верное сообщение (верные значения), причем результатом работы программы не может быть строка «NO». Ученик не обязан указывать, что будет выведено, и объяснять, как работает программа.3. Найти и исправить ошибки в программе.Это действие считается выполненным, если верно указаны обе ошибки и предложены верные варианты исправления, при этом никакие верные строки программы не указаны в качестве неверных. В исправленной строке допускаются незначительные синтаксические ошибки (лишние или пропущенные знаки препинания, неточные написания служебных слов языка). Ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15640\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 7 15 8 21 программа сначала выведет 2, затем 1000.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит корректный ответ: 2 3 4 1000.<p><i><b>Комментарий для экспертов.</b></i> Программа выводит сначала количество чисел, некратных 3, затем выводит 1000. Либо корректно работает при отсутствии в ряду таких чисел.<p> </p><p><b>Пример исправления для языка Паскаль:</b><p><i>Первая ошибка:</i><p class=\"left_margin\">maximum := 1000;<p> </p><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">maximum := 0;<p> </p><p><i>Вторая ошибка:</i><p class=\"left_margin\">maximum := i;<p> </p><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">maximum := x;<p> </p><p class=\"left_margin\">Пояснение для эксперта.<p class=\"left_margin\">В неправильной версии алгоритм никогда не зайдет в условие изменения максимума, т. к. в переменной <i>maximum </i>уже записано максимальное значение. Если же исправить инициализацию переменной <i>maximum </i>(ошибка 1), то в данной переменной будет хранится индекс считанного числа, что неверно. Поэтому необходимо в качестве нового значения переменной <i>maximum </i>указать считанное значение x (ошибка 2).<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления<p> </p><p class=\"left_margin\">В задаче требуется выполнить три действия.<p class=\"left_margin\">1. Указать результат программы при данном вводе.<p class=\"left_margin\">Это действие считается выполненным, если указан верный результат работы программы при заданных входных данных. Экзаменуемый не обязан объяснять, как получен этот результат, достаточно указать верное число.<p class=\"left_margin\">2. Указать пример ввода, при котором программа выводит верный ответ.<p class=\"left_margin\">Это действие считается выполненным, если указан пример числа, при вводе которого выводится верное сообщение (верные значения), причем результатом работы программы не может быть строка «NO». Ученик не обязан указывать, что будет выведено, и объяснять, как работает программа.<p class=\"left_margin\">3. Найти и исправить ошибки в программе.<p class=\"left_margin\">Это действие считается выполненным, если верно указаны обе ошибки и предложены верные варианты исправления, при этом никакие верные строки программы не указаны в качестве неверных. В исправленной строке допускаются незначительные синтаксические ошибки (лишние или пропущенные знаки препинания, неточные написания служебных слов языка). Ошибка считается исправленной, если выполнены оба следующих условия:<p class=\"left_margin\">а) правильно указана строка с ошибкой;<p class=\"left_margin\">б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ — 2018. До­сроч­ная волна. Вариант 1., ЕГЭ — 2018. До­сроч­ная волна. Вариант 2.",
            "task_id": "15640"
        },
        {
            "answer": "Решение.1. При вводе N = 1961 программа выведет число 1.2. Минимальное N > 100, при котором программа выдаёт верный ответ, равно 110. Программа выдаёт верный ответ 1. При вводе чисел от 101 до 109 программа вместо верного ответа 2 выдаёт ответ 1 для чётных чисел и ответ 0 для нечётных.Программа содержит две ошибки.1) Неверное условие цикла. Если старшая цифра числа равна 1, то эта цифра не будет проверяться и подсчитываться.2) Неверная проверка. С чётностью последней цифры числа сравнивается не чётность очередной цифры, а сама эта цифра. Пример исправления для языка Паскаль: Первая ошибка, способ 1:while N > 1 do beginИсправленная строка:while N > 0 do begin Первая ошибка, способ 2:while N > 1 do beginИсправленная строка:while N >= 1 do begin Вторая ошибка:if N mod 10 = dИсправленная строка:if N mod 2 = d В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:10:07.304288",
            "question": "В натуральном числе N (0 < N < 109) необходимо подсчитать количество цифр десятичной записи, чётность которых совпадает с чётностью последней цифры числа N. Например, для N = 123 должен получиться ответ 2 (последняя цифра числа нечётная, а всего в записи числа две нечётные цифры: 1 и 3).Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, K, D AS INTEGER INPUT N K = 0 D = N MOD 2 WHILE N > 1     IF N MOD 10 = D THEN        K = K + 1    END IF    N = N \\ 10 WEND PRINT K END  N = int(input()) k = 0 d = N % 2while N > 1:    if N % 10 == d:        k += 1    N = N // 10print(k)  ПаскальАлгоритмический языкvar N, k, d: integer;begin    read(N);    k := 0;    d := N mod 2;    while N > 1 do begin        if N mod 10 = d            then k := k + 1;        N := N div 10    end;    writeln(k)end. алгнач    цел N, k, d     ввод N      k := 0     d := mod(N,2)     нц пока N > 1        если mod(N,10) = d            то k := k + 1        все        N := div(N,10)     кц      вывод kконС++#include <iostream>using namespace std;int main(){     nt N, k, d;    cin >> N;    k = 0;    d = N % 2;    while (N > 1) {        if (N % 10 == d)        ++k;    N = N / 10;    }    cout << k;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 1961.2. Назовите минимальное N, большее 100, при котором программа выведет верный ответ.3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938813\" width=\"100%\"><p class=\"left_margin\">В натуральном числе <i>N</i> (0 &lt; <i>N</i> &lt; 10<sup>9</sup>) необходимо подсчитать количество цифр десятичной записи, чётность которых совпадает с чётностью последней цифры числа <i>N</i>. Например, для <i>N</i> = 123 должен получиться ответ 2 (последняя цифра числа нечётная, а всего в записи числа две нечётные цифры: 1 и 3).<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K, D AS INTEGER<p> INPUT N<p> K = 0<p> D = N MOD 2<p> WHILE N &gt; 1 <p>    IF N MOD 10 = D THEN<p>        K = K + 1<p>    END IF<p>    N = N \\ 10<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p> k = 0<p> d = N % 2<p>while N &gt; 1:<p>    if N % 10 == d:<p>        k += 1<p>    N = N // 10<p>print(k)<p> </p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N, k, d: integer;<p>begin<p>    read(N);<p>    k := 0;<p>    d := N mod 2;<p>    while N &gt; 1 do begin<p>        if N mod 10 = d<p>            then k := k + 1;<p>        N := N div 10<p>    end;<p>    writeln(k)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, k, d <p>    ввод N <p>     k := 0<p>     d := mod(N,2)<p>     нц пока N &gt; 1<p>        если mod(N,10) = d<p>            то k := k + 1<p>        все<p>        N := div(N,10)<p>     кц <p>     вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>     nt N, k, d;<p>    cin &gt;&gt; N;<p>    k = 0;<p>    d = N % 2;<p>    while (N &gt; 1) {<p>        if (N % 10 == d)<p>        ++k;<p>    N = N / 10;<p>    }<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 1961.<p class=\"left_margin\">2. Назовите <b>минимальное N, большее 100</b>, при котором программа выведет <b>верный</b> ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 1961 программа выведет число 1.2. Минимальное N > 100, при котором программа выдаёт верный ответ, равно 110. Программа выдаёт верный ответ 1. При вводе чисел от 101 до 109 программа вместо верного ответа 2 выдаёт ответ 1 для чётных чисел и ответ 0 для нечётных.Программа содержит две ошибки.1) Неверное условие цикла. Если старшая цифра числа равна 1, то эта цифра не будет проверяться и подсчитываться.2) Неверная проверка. С чётностью последней цифры числа сравнивается не чётность очередной цифры, а сама эта цифра. Пример исправления для языка Паскаль: Первая ошибка, способ 1:while N > 1 do beginИсправленная строка:while N > 0 do begin Первая ошибка, способ 2:while N > 1 do beginИсправленная строка:while N >= 1 do begin Вторая ошибка:if N mod 10 = dИсправленная строка:if N mod 2 = d В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15809\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 1961 программа выведет число 1.<p class=\"left_margin\">2. Минимальное <i>N</i> &gt; 100, при котором программа выдаёт <b>верный</b> ответ, равно 110. Программа выдаёт верный ответ 1. При вводе чисел от 101 до 109 программа вместо верного ответа 2 выдаёт ответ 1 для чётных чисел и ответ 0 для нечётных.<p class=\"left_margin\">Программа содержит две ошибки.<p class=\"left_margin\">1) Неверное условие цикла. Если старшая цифра числа равна 1, то эта цифра не будет проверяться и подсчитываться.<p class=\"left_margin\">2) Неверная проверка. С чётностью последней цифры числа сравнивается не чётность очередной цифры, а сама эта цифра.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка, способ 1:</i></b><p class=\"left_margin\">while N &gt; 1 do begin<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">while N &gt; 0 do begin<p> </p><p class=\"left_margin\"><b><i>Первая ошибка, способ 2:</i></b><p class=\"left_margin\">while N &gt; 1 do begin<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">while N &gt;= 1 do begin<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">if N mod 10 = d<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if N mod 2 = d<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "15809"
        },
        {
            "answer": "Решение.1. При вводе N = 1980 программа выведет число 0.2. Минимальное трёхзначное N, при котором программа выдаёт верный ответ, равно 101. Программа выдаёт верный ответ 2. При вводе числа 100 программа вместо верного ответа 2 выдаёт ответ 0.Программа содержит две ошибки.1) Неверное сравнение. Чётность каждой цифры числа сравнивается не с чётностью последней цифры, а с самой последней цифрой.2) Неверный подсчёт. Вместо количества цифр считается их сумма. Пример исправления для языка Паскаль: Первая ошибка, способ 1:d := N mod 10;Исправленная строка:d := N mod 2; Первая ошибка, способ 2:if N mod 2 = dИсправленная строка:if N mod 2 = d mod 2 Вторая ошибка:then k := k + d;Исправленная строка:then k := k + 1; В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:10:07.732789",
            "question": "В натуральном числе N (0 < N < 109) необходимо подсчитать количество цифр десятичной записи, чётность которых совпадает с чётностью последней цифры числа N. Например, для N = 123 должен получиться ответ 2 (последняя цифра числа нечётная, а всего в записи числа две нечётные цифры: 1 и 3).Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, K, D AS INTEGER INPUT N K = 0 D = N MOD 10 WHILE N > 0     IF N MOD 2 = D THEN        K = K + D    END IF    N = N \\ 10 WEND PRINT K END  N = int(input()) k = 0 d = N % 10while N > 0:    if N % 2 == d:        k += d    N = N // 10print(k)  ПаскальАлгоритмический языкvar N, k, d: integer;begin    read(N);    k := 0;    d := N mod 10;    while N > 0 do begin        if N mod 2 = d            then k := k + d;        N := N div 10    end;    writeln(k)end. алгнач    цел N, k, d     ввод N      k := 0     d := mod(N,10)     нц пока N > 0        если mod(N,10) = d            то k := k + d        все        N := div(N,10)     кц      вывод kконС++#include <iostream>using namespace std;int main(){     nt N, k, d;    cin >> N;    k = 0;    d = N % 10;    while (N > 0) {        if (N % 2 == d)        k = k + d;    N = N / 10;    }    cout << k;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 1980.2. Назовите минимальное трёхзначное N, при котором программа выведет верный ответ.3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938784\" width=\"100%\"><p class=\"left_margin\">В натуральном числе <i>N</i> (0 &lt; <i>N</i> &lt; 10<sup>9</sup>) необходимо подсчитать количество цифр десятичной записи, чётность которых совпадает с чётностью последней цифры числа <i>N</i>. Например, для <i>N</i> = 123 должен получиться ответ 2 (последняя цифра числа нечётная, а всего в записи числа две нечётные цифры: 1 и 3).<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K, D AS INTEGER<p> INPUT N<p> K = 0<p> D = N MOD 10<p> WHILE N &gt; 0 <p>    IF N MOD 2 = D THEN<p>        K = K + D<p>    END IF<p>    N = N \\ 10<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p> k = 0<p> d = N % 10<p>while N &gt; 0:<p>    if N % 2 == d:<p>        k += d<p>    N = N // 10<p>print(k)<p> </p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N, k, d: integer;<p>begin<p>    read(N);<p>    k := 0;<p>    d := N mod 10;<p>    while N &gt; 0 do begin<p>        if N mod 2 = d<p>            then k := k + d;<p>        N := N div 10<p>    end;<p>    writeln(k)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, k, d <p>    ввод N <p>     k := 0<p>     d := mod(N,10)<p>     нц пока N &gt; 0<p>        если mod(N,10) = d<p>            то k := k + d<p>        все<p>        N := div(N,10)<p>     кц <p>     вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>     nt N, k, d;<p>    cin &gt;&gt; N;<p>    k = 0;<p>    d = N % 10;<p>    while (N &gt; 0) {<p>        if (N % 2 == d)<p>        k = k + d;<p>    N = N / 10;<p>    }<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 1980.<p class=\"left_margin\">2. Назовите <b>минимальное трёхзначное N</b>, при котором программа выведет <b>верный</b> ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 1980 программа выведет число 0.2. Минимальное трёхзначное N, при котором программа выдаёт верный ответ, равно 101. Программа выдаёт верный ответ 2. При вводе числа 100 программа вместо верного ответа 2 выдаёт ответ 0.Программа содержит две ошибки.1) Неверное сравнение. Чётность каждой цифры числа сравнивается не с чётностью последней цифры, а с самой последней цифрой.2) Неверный подсчёт. Вместо количества цифр считается их сумма. Пример исправления для языка Паскаль: Первая ошибка, способ 1:d := N mod 10;Исправленная строка:d := N mod 2; Первая ошибка, способ 2:if N mod 2 = dИсправленная строка:if N mod 2 = d mod 2 Вторая ошибка:then k := k + d;Исправленная строка:then k := k + 1; В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15836\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 1980 программа выведет число 0.<p class=\"left_margin\">2. Минимальное трёхзначное <i>N</i>, при котором программа выдаёт <b>верный</b> ответ, равно 101. Программа выдаёт верный ответ 2. При вводе числа 100 программа вместо верного ответа 2 выдаёт ответ 0.<p class=\"left_margin\">Программа содержит две ошибки.<p class=\"left_margin\">1) Неверное сравнение. Чётность каждой цифры числа сравнивается не с чётностью последней цифры, а с самой последней цифрой.<p class=\"left_margin\">2) Неверный подсчёт. Вместо количества цифр считается их сумма.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка, способ 1:</i></b><p class=\"left_margin\">d := N mod 10;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">d := N mod 2;<p> </p><p class=\"left_margin\"><b><i>Первая ошибка, способ 2:</i></b><p class=\"left_margin\">if N mod 2 = d<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if N mod 2 = d mod 2<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">then k := k + d;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">then k := k + 1;<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "15836"
        },
        {
            "answer": "Решение.1. При вводе последовательности 2 8 4 3 программа сначала выведет 2, затем 4.2. Пример последовательности, при вводе которых программа выводит корректный ответ: 2 4 7 3. Пример исправления для языка Паскаль:Первая ошибка:maximum := 1000; Исправленная строка:maximum := −1; Вторая ошибка:if ( x < maximum ) then Исправленная строка:if ( x > maximum ) then В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:29.440346",
            "question": "На обработку поступает последовательность из четырёх неотрицательных целых чисел (некоторые числа могут быть одинаковыми). Нужно написать программу, которая выводит на экран количество делящихся нацело на 4 чисел в исходной последовательности и максимальное делящееся нацело на 4 число. Если делящихся нацело на 4 чисел нет, требуется на экран вывести «NO». Известно, что вводимые числа не превышают 1000. Программист написал программу неправильно. Ниже эта написанная им программа для Вашего удобства приведена на пяти языках программирования. БейсикPython CONST n = 4 count = 0 maximum = 1000 FOR I = 1 TO n    INPUT x    IF X MOD 4 = 0 THEN        count = count + 1        IF x < maximum THEN            maximum = x        END IF    END IF NEXT I IF count > 0 THEN    PRINT count    PRINT maximum ELSE    PRINT “NO” END IF n = 4count = 0maximum = 1000for i in range(1, n + 1):    x = int(input())    if x % 4 == 0:        count += 1        if x < maximum:            maximum = xif count > 0:    print(count)    print(maximum)else:     print(\"NO\")  ПаскальАлгоритмический языкconst n = 4;var i, x: integer;var maximum, count: integer;begin     count := 0;    maximum := 1000;    for i:=1 to n do begin         read(x);         if x mod 4 = 0 then begin             count := count + 1;             if x < maximum then                 maximum := x;             end;         end;     if count > 0 then begin         writeln(count);         writeln(maximum);    end     else        writeln('NO'); end. алгнач    цел n = 4    цел i, x    цел maximum, count    count := 0    maximum := 1000    нц для i от 1 до n        ввод x        если mod(x, 4) == 0 то            count := count + 1            если x < maximum то                maximum := x            все        все    кц    если count > 0 то        вывод count, нс        вывод maximum    иначе        вывод \"NO\"    всеконСи++#include <iostream>using namespace std; int main(){    const int n = 4;    int x, maximum, count;    count = 0;     maximum = 1000;    for (int i = 1; i <= n; i++) {         cin >> x;         if ( x % 4 == 0 ) {            count++;            if ( x < maximum )                maximum = x;         }     }    if ( count > 0 ) {         cout << count << endl;        cout << maximum;    else         cout << \"NO\";    return 0; }  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе последовательности: 2 8 4 3.2. Приведите пример такой последовательности, содержащей хотя бы одно делящееся нацело на 4 число, что при её вводе приведённая программа, несмотря на ошибки, выведет правильный ответ.3. Найдите допущенные программистом ошибки и исправьте их. Исправление ошибки должно затрагивать только строку, в которой находится ошибка. Для каждой ошибки: 1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки.Известно, что в тексте программы можно исправить ровно две строки так, чтобы она стала работать правильно.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание на то, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.Примечание. 0 делится на любое натуральное число.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938756\" width=\"100%\"><p class=\"left_margin\">На обработку поступает последовательность из четырёх неотрицательных целых чисел (некоторые числа могут быть одинаковыми). Нужно написать программу, которая выводит на экран количество делящихся нацело на 4 чисел в исходной последовательности и максимальное делящееся нацело на 4 число. Если делящихся нацело на 4 чисел нет, требуется на экран вывести «NO». Известно, что вводимые числа не превышают 1000. Программист написал программу неправильно. Ниже эта написанная им программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> CONST n = 4<p> count = 0<p> maximum = 1000<p> FOR I = 1 TO n<p>    INPUT x<p>    IF X MOD 4 = 0 THEN<p>        count = count + 1<p>        IF x &lt; maximum THEN<p>            maximum = x<p>        END IF<p>    END IF<p> NEXT I<p> IF count &gt; 0 THEN<p>    PRINT count<p>    PRINT maximum<p> ELSE<p>    PRINT “NO”<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = 4<p>count = 0<p>maximum = 1000<p>for i in range(1, n + 1):<p>    x = int(input())<p>    if x % 4 == 0:<p>        count += 1<p>        if x &lt; maximum:<p>            maximum = x<p>if count &gt; 0:<p>    print(count)<p>    print(maximum)<p>else: <p>    print(\"NO\")<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>const n = 4;<p>var i, x: integer;<p>var maximum, count: integer;<p>begin<p>     count := 0;<p>    maximum := 1000;<p>    for i:=1 to n do begin<p>         read(x);<p>         if x mod 4 = 0 then begin<p>             count := count + 1;<p>             if x &lt; maximum then<p>                 maximum := x; <p>            end;<p>         end;<p>     if count &gt; 0 then begin <p>        writeln(count); <p>        writeln(maximum);<p>    end <p>    else<p>        writeln('NO');<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n = 4<p>    цел i, x<p>    цел maximum, count<p>    count := 0<p>    maximum := 1000<p>    нц для i от 1 до n<p>        ввод x<p>        если mod(x, 4) == 0 то<p>            count := count + 1<p>            если x &lt; maximum то<p>                maximum := x<p>            все<p>        все<p>    кц<p>    если count &gt; 0 то<p>        вывод count, нс<p>        вывод maximum<p>    иначе<p>        вывод \"NO\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> </p><p>int main(){<p>    const int n = 4;<p>    int x, maximum, count;<p>    count = 0; <p>    maximum = 1000;<p>    for (int i = 1; i &lt;= n; i++) {<p>         cin &gt;&gt; x;<p>         if ( x % 4 == 0 ) {<p>            count++;<p>            if ( x &lt; maximum )<p>                maximum = x; <p>        } <p>    }<p>    if ( count &gt; 0 ) { <p>        cout &lt;&lt; count &lt;&lt; endl;<p>        cout &lt;&lt; maximum;<p>    else <p>        cout &lt;&lt; \"NO\";<p>    return 0; <p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе последовательности: 2 8 4 3.<p class=\"left_margin\">2. Приведите пример такой последовательности, содержащей хотя бы одно делящееся нацело на 4 число, что при её вводе приведённая программа, несмотря на ошибки, выведет правильный ответ.<p class=\"left_margin\">3. Найдите допущенные программистом ошибки и исправьте их. Исправление ошибки должно затрагивать только строку, в которой находится ошибка. Для каждой ошибки: <p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т. е. приведите правильный вариант строки.<p class=\"left_margin\">Известно, что в тексте программы можно исправить ровно две строки так, чтобы она стала работать правильно.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание на то, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.<p class=\"left_margin\">Примечание. 0 делится на любое натуральное число.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе последовательности 2 8 4 3 программа сначала выведет 2, затем 4.2. Пример последовательности, при вводе которых программа выводит корректный ответ: 2 4 7 3. Пример исправления для языка Паскаль:Первая ошибка:maximum := 1000; Исправленная строка:maximum := −1; Вторая ошибка:if ( x < maximum ) then Исправленная строка:if ( x > maximum ) then В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15864\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе последовательности 2 8 4 3 программа сначала выведет 2, затем 4.<p class=\"left_margin\">2. Пример последовательности, при вводе которых программа выводит корректный ответ: 2 4 7 3.<p> </p><p><b>Пример исправления для языка Паскаль:</b><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">maximum := 1000;<p> </p><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">maximum := −1;<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">if ( x &lt; maximum ) then<p> </p><p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if ( x &gt; maximum ) then<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ — 2018. До­сроч­ная волна. Вариант 2., ЕГЭ — 2018. До­сроч­ная волна. Вариант 1.",
            "task_id": "15864"
        },
        {
            "answer": "Решение.1. При вводе N = 864 программа выведет число 10.2. Наибольший возможный результат работы программы равен 14. Такой результат будет выведен, например, при N = 86 и N = 842.Программа содержит две ошибки.1) Неверное начальное значение максимума. В результате не различаются ситуации, когда в числе вообще нет чётных цифр и когда все чётные цифры — нули.2)Вместо замены максимального значения происходит вычисление суммы. Пример исправления для языка Паскаль: Первая ошибкаt := 0;Исправленная строка:t := −1Вместо −1 возможно использование любого другого отрицательного числа. Вторая ошибка:m := m + d;Исправленная строка:m := d; В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.Условие цикла в строке while N > 1 do begin похоже на ошибку, но ошибкой не является, так как не приводит к неверным результатам. Это условие приводит к тому, что если первая цифра числа равна 1, эта цифра не будет рассматриваться, но так как 1 — нечётная цифра, на результат это не влияет.",
            "parsed": "2019-04-29 21:10:08.136808",
            "question": "Дано натуральное число N (N ≤ 109). Необходимо найти и вывести наибольшую чётную цифру в десятичной записи N или вывести сообщение «NO», если таких цифр нет.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, D, M, T AS INTEGER INPUT N T = 0 M = T WHILE N > 1     D = N MOD 10    IF D MOD 2 = 0 AND D > M THEN        M = M + D    END IF    N = N \\ 10 WEND IF M = T THEN    PRINT \"NO\" ELSE    PRINT M END IF END  N = int(input()) t = 0 m = twhile N > 1:    d = N % 10     if d%2 == 0 and d > m:        m = m + d    N = N // 10if m == t:    print(\"NO\")else:    print(m)  ПаскальАлгоритмический языкvar N, d, m, t: integer;begin    read(N);    t := 0;    m := t;    while N > 1 do begin        d := N mod 10;        if (d mod 2 = 0) and (d>m) then            m := m + d;        N := N div 10    end;    if m = t        then writeln('NO')        else writeln(m)end. алгнач    цел N, d, m, t     ввод N      t := 0     m := t     нц пока N > 1        d := mod(N,10)        если mod(d,2)=0 и d>m то            m := m + d        все        N := div(N,10)     кц     если m = t        то вывод \"NO\"        иначе вывод m    всеконС++#include <iostream>using namespace std;int main(){    int N, d, m, t;    cin >> N;    t = 0;    m = t;    while (N > 1) {        d = N % 10;        if (d % 2 == 0 && d > m)            m = m + d;        N = N / 10;    }    if (m == t)        cout >> \"NO\";    else        cout << m;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 864.2. Какое наибольшее число может стать результатом работы этой программы? Приведите пример числа N, при вводе которого программа выведет такой ответ.3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938178\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число <i>N</i> (<i>N</i> ≤ 10<sup>9</sup>). Необходимо найти и вывести наибольшую чётную цифру в десятичной записи <i>N</i> или вывести сообщение «NO», если таких цифр нет.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"70%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, D, M, T AS INTEGER<p> INPUT N<p> T = 0<p> M = T<p> WHILE N &gt; 1 <p>    D = N MOD 10<p>    IF D MOD 2 = 0 AND D &gt; M THEN<p>        M = M + D<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF M = T THEN<p>    PRINT \"NO\"<p> ELSE<p>    PRINT M<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p> t = 0<p> m = t<p>while N &gt; 1:<p>    d = N % 10 <p>    if d%2 == 0 and d &gt; m:<p>        m = m + d<p>    N = N // 10<p>if m == t:<p>    print(\"NO\")<p>else:<p>    print(m)<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N, d, m, t: integer;<p>begin<p>    read(N);<p>    t := 0;<p>    m := t;<p>    while N &gt; 1 do begin<p>        d := N mod 10;<p>        if (d mod 2 = 0) and (d&gt;m) then<p>            m := m + d;<p>        N := N div 10<p>    end;<p>    if m = t<p>        then writeln('NO')<p>        else writeln(m)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, d, m, t <p>    ввод N <p>     t := 0<p>     m := t<p>     нц пока N &gt; 1<p>        d := mod(N,10)<p>        если mod(d,2)=0 и d&gt;m то<p>            m := m + d<p>        все<p>        N := div(N,10)<p>     кц<p>     если m = t<p>        то вывод \"NO\"<p>        иначе вывод m<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int N, d, m, t;<p>    cin &gt;&gt; N;<p>    t = 0;<p>    m = t;<p>    while (N &gt; 1) {<p>        d = N % 10;<p>        if (d % 2 == 0 &amp;&amp; d &gt; m)<p>            m = m + d;<p>        N = N / 10;<p>    }<p>    if (m == t)<p>        cout &gt;&gt; \"NO\";<p>    else<p>        cout &lt;&lt; m;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 864.<p class=\"left_margin\">2. Какое наибольшее число может стать результатом работы этой программы? Приведите пример числа <i>N</i>, при вводе которого программа выведет такой ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 864 программа выведет число 10.2. Наибольший возможный результат работы программы равен 14. Такой результат будет выведен, например, при N = 86 и N = 842.Программа содержит две ошибки.1) Неверное начальное значение максимума. В результате не различаются ситуации, когда в числе вообще нет чётных цифр и когда все чётные цифры — нули.2)Вместо замены максимального значения происходит вычисление суммы. Пример исправления для языка Паскаль: Первая ошибкаt := 0;Исправленная строка:t := −1Вместо −1 возможно использование любого другого отрицательного числа. Вторая ошибка:m := m + d;Исправленная строка:m := d; В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.Условие цикла в строке while N > 1 do begin похоже на ошибку, но ошибкой не является, так как не приводит к неверным результатам. Это условие приводит к тому, что если первая цифра числа равна 1, эта цифра не будет рассматриваться, но так как 1 — нечётная цифра, на результат это не влияет.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15934\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 864 программа выведет число 10.<p class=\"left_margin\">2. Наибольший возможный результат работы программы равен 14. Такой результат будет выведен, например, при <i>N</i> = 86 и <i>N</i> = 842.<p class=\"left_margin\">Программа содержит две ошибки.<p class=\"left_margin\">1) Неверное начальное значение максимума. В результате не различаются ситуации, когда в числе вообще нет чётных цифр и когда все чётные цифры — нули.<p class=\"left_margin\">2)Вместо замены максимального значения происходит вычисление суммы.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка</i></b><p class=\"left_margin\">t := 0;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">t := −1<p class=\"left_margin\">Вместо −1 возможно использование любого другого отрицательного числа.<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">m := m + d;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">m := d;<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.<p class=\"left_margin\">Условие цикла в строке while N &gt; 1 do begin похоже на ошибку, но ошибкой не является, так как не приводит к неверным результатам. Это условие приводит к тому, что если первая цифра числа равна 1, эта цифра не будет рассматриваться, но так как 1 — нечётная цифра, на результат это не влияет.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "15934"
        },
        {
            "answer": "Решение.1. При вводе N = 143 программа выведет число 4.2. Наименьший возможный результат работы программы равен 1. Такой результат будет выведен, например, при N = 11, N = 101 и N = 1010.Программа содержит две ошибки.1) Неверное условие цикла. В результате, если первая цифра числа равна 1, она не обрабатывается, хотя может оказаться верным ответом.2)Неверное условие проверки цифры, вместо логического И использовано ИЛИ. В результате при последовательной проверке цифр как текущий максимум фиксируется любая (не обязательно наибольшая) нечётная цифра либо чётная, которая больше текущего максимума. Пример исправления для языка Паскаль: Первая ошибка:while N > 1 do beginИсправленная строка, способ 1:while N > 0 do beginИсправленная строка, способ 2:while N >= 1 do begin Вторая ошибка:if (d mod 2 = 1) or (d>m) thenИсправленная строка:if (d mod 2 = 1) and (d>m) then В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:10:08.604675",
            "question": "Дано натуральное число N (N ≤ 109). Необходимо найти и вывести наибольшую нечётную цифру в десятичной записи N или вывести сообщение «NO», если таких цифр нет.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, D, M, T AS INTEGER INPUT N T = 0 M = T WHILE N > 1     D = N MOD 10    IF D MOD 2 = 1 OR D > M THEN        M = D    END IF    N = N \\ 10 WEND IF M = T THEN    PRINT \"NO\" ELSE    PRINT M END IF END  N = int(input()) t = 0 m = twhile N > 1:    d = N % 10     if d%2 == 1 or d > m:        m = d    N = N // 10if m == t:    print(\"NO\")else:    print(m)  ПаскальАлгоритмический языкvar N, d, m, t: integer;begin    read(N);    t := 0;    m := t;    while N > 1 do begin        d := N mod 10;        if (d mod 2 = 1) or (d>m)            m := d;        N := N div 10    end;    if m = t        then writeln('NO')        else writeln(m)end. алгнач    цел N, d, m, t     ввод N      t := 0     m := t     нц пока N > 1        d := mod(N,10)        если mod(d,2)=1 или d>m то            m := d        все        N := div(N,10)     кц     если m = t        то вывод \"NO\"        иначе вывод m    всеконС++#include <iostream>using namespace std;int main(){    int N, d, m, t;    cin >> N;    t = 0;    m = t;    while (N > 1) {        d = N % 10;        if (d % 2 == 1 || d > m)            m = d;        N = N / 10;    }    if (m == t)        cout << \"NO\";    else        cout << m;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 143.2. Какое наменьшее число может стать результатом работы этой программы? Приведите пример числа N, при вводе которого программа выведет такой ответ.3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938149\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число <i>N</i> (<i>N</i> ≤ 10<sup>9</sup>). Необходимо найти и вывести наибольшую нечётную цифру в десятичной записи <i>N</i> или вывести сообщение «NO», если таких цифр нет.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, D, M, T AS INTEGER<p> INPUT N<p> T = 0<p> M = T<p> WHILE N &gt; 1 <p>    D = N MOD 10<p>    IF D MOD 2 = 1 OR D &gt; M THEN<p>        M = D<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF M = T THEN<p>    PRINT \"NO\"<p> ELSE<p>    PRINT M<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p> t = 0<p> m = t<p>while N &gt; 1:<p>    d = N % 10 <p>    if d%2 == 1 or d &gt; m:<p>        m = d<p>    N = N // 10<p>if m == t:<p>    print(\"NO\")<p>else:<p>    print(m)<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N, d, m, t: integer;<p>begin<p>    read(N);<p>    t := 0;<p>    m := t;<p>    while N &gt; 1 do begin<p>        d := N mod 10;<p>        if (d mod 2 = 1) or (d&gt;m)<p>            m := d;<p>        N := N div 10<p>    end;<p>    if m = t<p>        then writeln('NO')<p>        else writeln(m)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, d, m, t <p>    ввод N <p>     t := 0<p>     m := t<p>     нц пока N &gt; 1<p>        d := mod(N,10)<p>        если mod(d,2)=1 или d&gt;m то<p>            m := d<p>        все<p>        N := div(N,10)<p>     кц<p>     если m = t<p>        то вывод \"NO\"<p>        иначе вывод m<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int N, d, m, t;<p>    cin &gt;&gt; N;<p>    t = 0;<p>    m = t;<p>    while (N &gt; 1) {<p>        d = N % 10;<p>        if (d % 2 == 1 || d &gt; m)<p>            m = d;<p>        N = N / 10;<p>    }<p>    if (m == t)<p>        cout &lt;&lt; \"NO\";<p>    else<p>        cout &lt;&lt; m;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 143.<p class=\"left_margin\">2. Какое наменьшее число может стать результатом работы этой программы? Приведите пример числа <i>N</i>, при вводе которого программа выведет такой ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 143 программа выведет число 4.2. Наименьший возможный результат работы программы равен 1. Такой результат будет выведен, например, при N = 11, N = 101 и N = 1010.Программа содержит две ошибки.1) Неверное условие цикла. В результате, если первая цифра числа равна 1, она не обрабатывается, хотя может оказаться верным ответом.2)Неверное условие проверки цифры, вместо логического И использовано ИЛИ. В результате при последовательной проверке цифр как текущий максимум фиксируется любая (не обязательно наибольшая) нечётная цифра либо чётная, которая больше текущего максимума. Пример исправления для языка Паскаль: Первая ошибка:while N > 1 do beginИсправленная строка, способ 1:while N > 0 do beginИсправленная строка, способ 2:while N >= 1 do begin Вторая ошибка:if (d mod 2 = 1) or (d>m) thenИсправленная строка:if (d mod 2 = 1) and (d>m) then В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15961\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 143 программа выведет число 4.<p class=\"left_margin\">2. Наименьший возможный результат работы программы равен 1. Такой результат будет выведен, например, при <i>N</i> = 11, <i>N</i> = 101 и <i>N</i> = 1010.<p class=\"left_margin\">Программа содержит две ошибки.<p class=\"left_margin\">1) Неверное условие цикла. В результате, если первая цифра числа равна 1, она не обрабатывается, хотя может оказаться верным ответом.<p class=\"left_margin\">2)Неверное условие проверки цифры, вместо логического И использовано ИЛИ. В результате при последовательной проверке цифр как текущий максимум фиксируется любая (не обязательно наибольшая) нечётная цифра либо чётная, которая больше текущего максимума.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">while N &gt; 1 do begin<p class=\"left_margin\">Исправленная строка, способ 1:<p class=\"left_margin\">while N &gt; 0 do begin<p class=\"left_margin\">Исправленная строка, способ 2:<p class=\"left_margin\">while N &gt;= 1 do begin<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">if (d mod 2 = 1) or (d&gt;m) then<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if (d mod 2 = 1) and (d&gt;m) then<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "15961"
        },
        {
            "answer": "Решение.1. При вводе N = 134 программа выведет число 4.2. Пример числа N, при котором программа выведет верный ответ — 45.Программа содержит две ошибки.1) Неверное объявление начального значения переменной mindigit.2) Неверное присваивание минимального значения. Вместо минимального значения программа всегда будет выводить младший разряд числа. Пример исправления для языка Паскаль: Первая ошибка:mindigit := n mod 10;Исправленная строка:mindigit := 10; Вторая ошибка:digit := mindigit;Исправленная строка:mindigit := digit; В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:10:08.995668",
            "question": "Дано натуральное число N (1 ≤ N ≤ 109). Необходимо найти и вывести наименьшую нечётную цифру в десятичной записи N или вывести сообщение «NO», если таких цифр нет.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, DIGIT, MINDIGIT AS INTEGER INPUT N MINDIGIT = N MOD 10 WHILE N > 0     DIGIT = N MOD 10    IF DIGIT MOD 2 <> 0 THEN        IF DIGIT < MINDIGIT THEN            DIGIT = MINDIGIT        END IF    END IF    N = N \\ 10 WEND IF MINDIGIT <= 9 THEN    PRINT MINDIGIT ELSE    PRINT \"NO\" END IF END  n = int(input()) mindigit = n%10while n > 0:    digit = n % 10     if digit%2 != 0:        if digit < mindigit:            digit = mindigit    n = n // 10if mindigit <= 9:    print(mindigit)else:    print(\"NO\")  ПаскальАлгоритмический языкvar n, digit, mindigit: integer;begin    read(n);    mindigit := n mod 10;    while N > 0 do begin        digit := n mod 10;        if (digit mod 2 <> 0) then            if digit < mindigit then                digit := mindigit;        n := n div 10;    end;    if mindigit <= 9 then        then writeln(mindigit)        else writeln('No')end. алгнач    цел n, digit, mindigit    ввод n     mindigit := mod(n,10)     нц пока n > 0        digit := mod(n,10)        если mod(digit,2)<>0 то            если digit < mindigit то                digit = mindigit            все        все        n := div(n,10)     кц     если mindigit <= 9        то вывод mindigit        иначе вывод \"NO\"    всеконС++#include <iostream>using namespace std;int main(){    int n, digit, mindigit;    cin >> n;    mindigit = n%10;    while (n > 0) {        digit = n%10;        if (digit%2 != 0)            if (digit < mindigit)                digit = mindigit;        n = n / 10;    }    if (mindigit <= 9)        cout << mindigit;    else        cout << \"NO\";    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 134.2. Приведите пример числа N, при вводе которого программа выведет правильный ответ.3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938116\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число <i>N</i> (1 ≤ <i>N</i> ≤ 10<sup>9</sup>). Необходимо найти и вывести наименьшую нечётную цифру в десятичной записи <i>N</i> или вывести сообщение «NO», если таких цифр нет.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, MINDIGIT AS INTEGER<p> INPUT N<p> MINDIGIT = N MOD 10<p> WHILE N &gt; 0 <p>    DIGIT = N MOD 10<p>    IF DIGIT MOD 2 &lt;&gt; 0 THEN<p>        IF DIGIT &lt; MINDIGIT THEN<p>            DIGIT = MINDIGIT<p>        END IF<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF MINDIGIT &lt;= 9 THEN<p>    PRINT MINDIGIT<p> ELSE<p>    PRINT \"NO\"<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> n = int(input())<p> mindigit = n%10<p>while n &gt; 0:<p>    digit = n % 10 <p>    if digit%2 != 0:<p>        if digit &lt; mindigit:<p>            digit = mindigit<p>    n = n // 10<p>if mindigit &lt;= 9:<p>    print(mindigit)<p>else:<p>    print(\"NO\")<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, digit, mindigit: integer;<p>begin<p>    read(n);<p>    mindigit := n mod 10;<p>    while N &gt; 0 do begin<p>        digit := n mod 10;<p>        if (digit mod 2 &lt;&gt; 0) then<p>            if digit &lt; mindigit then<p>                digit := mindigit;<p>        n := n div 10;<p>    end;<p>    if mindigit &lt;= 9 then<p>        then writeln(mindigit)<p>        else writeln('No')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n, digit, mindigit<p>    ввод n <p>    mindigit := mod(n,10)<p>     нц пока n &gt; 0<p>        digit := mod(n,10)<p>        если mod(digit,2)&lt;&gt;0 то<p>            если digit &lt; mindigit то<p>                digit = mindigit<p>            все<p>        все<p>        n := div(n,10)<p>     кц<p>     если mindigit &lt;= 9<p>        то вывод mindigit<p>        иначе вывод \"NO\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n, digit, mindigit;<p>    cin &gt;&gt; n;<p>    mindigit = n%10;<p>    while (n &gt; 0) {<p>        digit = n%10;<p>        if (digit%2 != 0)<p>            if (digit &lt; mindigit)<p>                digit = mindigit;<p>        n = n / 10;<p>    }<p>    if (mindigit &lt;= 9)<p>        cout &lt;&lt; mindigit;<p>    else<p>        cout &lt;&lt; \"NO\";<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 134.<p class=\"left_margin\">2. Приведите пример числа <i>N</i>, при вводе которого программа выведет правильный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не более двух). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 134 программа выведет число 4.2. Пример числа N, при котором программа выведет верный ответ — 45.Программа содержит две ошибки.1) Неверное объявление начального значения переменной mindigit.2) Неверное присваивание минимального значения. Вместо минимального значения программа всегда будет выводить младший разряд числа. Пример исправления для языка Паскаль: Первая ошибка:mindigit := n mod 10;Исправленная строка:mindigit := 10; Вторая ошибка:digit := mindigit;Исправленная строка:mindigit := digit; В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol15992\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 134 программа выведет число 4.<p class=\"left_margin\">2. Пример числа <i>N</i>, при котором программа выведет верный ответ — 45.<p class=\"left_margin\">Программа содержит две ошибки.<p class=\"left_margin\">1) Неверное объявление начального значения переменной mindigit.<p class=\"left_margin\">2) Неверное присваивание минимального значения. Вместо минимального значения программа всегда будет выводить младший разряд числа.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">mindigit := n mod 10;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">mindigit := 10;<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">digit := mindigit;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">mindigit := digit;<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 28.05.2018. Основная волна, вариант А. Имаева — «Котолис».",
            "task_id": "15992"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков программирования.1. Программа выведет число 1.2. Программа выдаёт правильный ответ, например, для числа 132.Замечание для проверяющего. Программа работает неправильно из-за неверной начальной инициализации и неверной проверки отсутствия чётных цифр. Соответственно, программа будет выдавать верный ответ, если вводимое число не содержит 0, содержит хотя бы одну чётную цифру и наименьшая чётная цифра числа не больше младшей (крайней правой) цифры числа (или просто стоит последней).3. В программе есть две ошибки. Первая ошибка. Неверная инициализация ответа (переменная minDigit).Строка с ошибкой:minDigit := N mod 10;Верное исправление:minDigit := 10;Вместо 10 может быть использовано любое целое число, большее 8.Вторая ошибка. Неверная проверка отсутствия чётных цифр.Строка с ошибкой:if minDigit = 0 thenВерное исправление:if minDigit = 10 thenВместо 10 может быть другое число, большее 8, которое было положено в minDigit при исправлении первой ошибки, или проверка, что minDigit > 8Обратите внимание! В задаче требовалось выполнить четыре действия:1) указать, что выведет программа при конкретном входном числе;2) указать пример входного числа, при котором программа выдаёт верный ответ;3) исправить первую ошибку;4) исправить вторую ошибку.Для проверки правильности выполнения п. 2) нужно формально выполнить исходную (ошибочную) программу с входными данными, которые указал экзаменуемый, и убедиться в том, что результат, выданный программой, будет таким же, как и для правильной программы.Для действий 3) и 4) ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа.",
            "parsed": "2019-04-29 21:10:09.405042",
            "question": "На обработку поступает натуральное число, не превышающее 109. Нужно написать программу, которая выводит на экран минимальную чётную цифру этого числа. Если в числе нет чётных цифр, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, DIGIT, MINDIGIT AS LONG INPUT N MINDIGIT = N MOD 10 WHILE N > 0    DIGIT = N MOD 10    IF DIGIT MOD 2 = 0 THEN        IF DIGIT < MINDIGIT THEN            MINDIGIT = DIGIT        END IF    END IF    N = N \\ 10 WEND IF MINDIGIT = 0 THEN    PRINT \"NO\" ELSE    PRINT MINDIGIT END IF  N = int(input())minDigit = N % 10while N > 0:    digit = N % 10    if digit % 2 == 0:        if digit < minDigit:            minDigit = digit    N = N // 10 if minDigit == 0:    print(\"NO\") else:    print(minDigit)  ПаскальАлгоритмический языкvar N,digit,minDigit: longint;begin    readln(N);    minDigit := N mod 10;    while N > 0 do    begin        digit := N mod 10;        if digit mod 2 = 0 then            if digit < minDigit then                minDigit := digit;        N := N div 10;    end;    if minDigit = 0 then        writeln('NO')    else        writeln(minDigit)end. алгнач    цел N, digit, minDigit    ввод N    minDigit := mod(N,10)    нц пока N > 0        digit := mod(N,10)        если mod(digit, 2) = 0 то            если digit < minDigit то                minDigit := digit            все        все        N := div(N,10)    кц    если minDigit = 0 то        вывод \"NO\"    иначе        вывод minDigit    всеконСи++#include <iostream>using namespace std; int main() {        long N, digit, minDigit;        cin >> N;        minDigit = N % 10;        while (N > 0) {            digit = N % 10;            if (digit % 2 == 0)                if (digit < minDigit)                    minDigit = digit;            N = N / 10;        }        if (minDigit == 0)            cout << \"NO\" << endl;        else            cout << minDigit << endl;        return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 231.2. Приведите пример такого трёхзначного числа, при вводе которого приведённая программа, несмотря на ошибки, выдаёт верный ответ.3. Найдите допущенные программистом ошибки и исправьте их. Исправление ошибки должно затрагивать только строку, в которой находится ошибка. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Известно, что в тексте программы можно исправить ровно две строки так, чтобы она стала работать правильно.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание на то, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body938063\" width=\"100%\"><p class=\"left_margin\">На обработку поступает натуральное число, не превышающее 10<sup>9</sup>. Нужно написать программу, которая выводит на экран минимальную чётную цифру этого числа. Если в числе нет чётных цифр, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, MINDIGIT AS LONG<p> INPUT N<p> MINDIGIT = N MOD 10<p> WHILE N &gt; 0<p>    DIGIT = N MOD 10<p>    IF DIGIT MOD 2 = 0 THEN<p>        IF DIGIT &lt; MINDIGIT THEN<p>            MINDIGIT = DIGIT<p>        END IF<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF MINDIGIT = 0 THEN<p>    PRINT \"NO\"<p> ELSE<p>    PRINT MINDIGIT<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p>minDigit = N % 10<p>while N &gt; 0:<p>    digit = N % 10<p>    if digit % 2 == 0:<p>        if digit &lt; minDigit:<p>            minDigit = digit<p>    N = N // 10<p> if minDigit == 0:<p>    print(\"NO\")<p> else:<p>    print(minDigit)<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N,digit,minDigit: longint;<p>begin<p>    readln(N);<p>    minDigit := N mod 10;<p>    while N &gt; 0 do<p>    begin<p>        digit := N mod 10;<p>        if digit mod 2 = 0 then<p>            if digit &lt; minDigit then<p>                minDigit := digit;<p>        N := N div 10;<p>    end;<p>    if minDigit = 0 then<p>        writeln('NO')<p>    else<p>        writeln(minDigit)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, minDigit<p>    ввод N<p>    minDigit := mod(N,10)<p>    нц пока N &gt; 0<p>        digit := mod(N,10)<p>        если mod(digit, 2) = 0 то<p>            если digit &lt; minDigit то<p>                minDigit := digit<p>            все<p>        все<p>        N := div(N,10)<p>    кц<p>    если minDigit = 0 то<p>        вывод \"NO\"<p>    иначе<p>        вывод minDigit<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> </p><p>int main() {<p>        long N, digit, minDigit;<p>        cin &gt;&gt; N;<p>        minDigit = N % 10;<p>        while (N &gt; 0) {<p>            digit = N % 10;<p>            if (digit % 2 == 0)<p>                if (digit &lt; minDigit)<p>                    minDigit = digit;<p>            N = N / 10;<p>        }<p>        if (minDigit == 0)<p>            cout &lt;&lt; \"NO\" &lt;&lt; endl;<p>        else<p>            cout &lt;&lt; minDigit &lt;&lt; endl;<p>        return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 231.<p class=\"left_margin\">2. Приведите пример такого трёхзначного числа, при вводе которого приведённая программа, несмотря на ошибки, выдаёт верный ответ.<p class=\"left_margin\">3. Найдите допущенные программистом ошибки и исправьте их. Исправление ошибки должно затрагивать только строку, в которой находится ошибка. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Известно, что в тексте программы можно исправить ровно две строки так, чтобы она стала работать правильно.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание на то, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков программирования.1. Программа выведет число 1.2. Программа выдаёт правильный ответ, например, для числа 132.Замечание для проверяющего. Программа работает неправильно из-за неверной начальной инициализации и неверной проверки отсутствия чётных цифр. Соответственно, программа будет выдавать верный ответ, если вводимое число не содержит 0, содержит хотя бы одну чётную цифру и наименьшая чётная цифра числа не больше младшей (крайней правой) цифры числа (или просто стоит последней).3. В программе есть две ошибки. Первая ошибка. Неверная инициализация ответа (переменная minDigit).Строка с ошибкой:minDigit := N mod 10;Верное исправление:minDigit := 10;Вместо 10 может быть использовано любое целое число, большее 8.Вторая ошибка. Неверная проверка отсутствия чётных цифр.Строка с ошибкой:if minDigit = 0 thenВерное исправление:if minDigit = 10 thenВместо 10 может быть другое число, большее 8, которое было положено в minDigit при исправлении первой ошибки, или проверка, что minDigit > 8Обратите внимание! В задаче требовалось выполнить четыре действия:1) указать, что выведет программа при конкретном входном числе;2) указать пример входного числа, при котором программа выдаёт верный ответ;3) исправить первую ошибку;4) исправить вторую ошибку.Для проверки правильности выполнения п. 2) нужно формально выполнить исходную (ошибочную) программу с входными данными, которые указал экзаменуемый, и убедиться в том, что результат, выданный программой, будет таким же, как и для правильной программы.Для действий 3) и 4) ошибка считается исправленной, если выполнены оба следующих условия:а) правильно указана строка с ошибкой;б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol16051\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков программирования.<p class=\"left_margin\">1. Программа выведет число 1.<p class=\"left_margin\">2. Программа выдаёт правильный ответ, например, для числа 132.<p><i>Замечание для проверяющего. Программа работает неправильно из-за неверной начальной инициализации и неверной проверки отсутствия чётных цифр. Соответственно, программа будет выдавать верный ответ, если вводимое число не содержит 0, содержит хотя бы одну чётную цифру и наименьшая чётная цифра числа не больше младшей (крайней правой) цифры числа (или просто стоит последней).</i><p class=\"left_margin\">3. В программе есть две ошибки. Первая ошибка. Неверная инициализация ответа (переменная minDigit).<p class=\"left_margin\">Строка с ошибкой:<p>minDigit := N mod 10;<p class=\"left_margin\">Верное исправление:<p>minDigit := 10;<p class=\"left_margin\">Вместо 10 может быть использовано любое целое число, большее 8.<p class=\"left_margin\">Вторая ошибка. Неверная проверка отсутствия чётных цифр.<p class=\"left_margin\">Строка с ошибкой:<p>if minDigit = 0 then<p class=\"left_margin\">Верное исправление:<p>if minDigit = 10 then<p class=\"left_margin\">Вместо 10 может быть другое число, большее 8, которое было положено в minDigit при исправлении первой ошибки, или проверка, что <p>minDigit &gt; 8<p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить четыре действия:<p class=\"left_margin\">1) указать, что выведет программа при конкретном входном числе;<p class=\"left_margin\">2) указать пример входного числа, при котором программа выдаёт верный ответ;<p class=\"left_margin\">3) исправить первую ошибку;<p class=\"left_margin\">4) исправить вторую ошибку.<p class=\"left_margin\">Для проверки правильности выполнения п. 2) нужно формально выполнить исходную (ошибочную) программу с входными данными, которые указал экзаменуемый, и убедиться в том, что результат, выданный программой, будет таким же, как и для правильной программы.<p class=\"left_margin\">Для действий 3) и 4) ошибка считается исправленной, если выполнены оба следующих условия:<p class=\"left_margin\">а) правильно указана строка с ошибкой;<p class=\"left_margin\">б) указан такой новый вариант строки, что при исправлении другой ошибки получается правильная программа.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Де­мон­стра­ци­он­ная вер­сия ЕГЭ—2019 по информатике.",
            "task_id": "16051"
        },
        {
            "answer": "Решение.1. При вводе A = 5 программа выведет число 3.2. Программа выводит верный ответ при вводе A = 1 (ответ 1) или A = 2 (ответ 2).3. Программа содержит две ошибки.1) Ошибочная проверка. После завершения цикла гарантированно выполняется неравенство F ≥ A > F/A, поэтому в сравнении после цикла левая часть всегда неотрицательна, а правая — отрицательна. Сравнение оказывается всегда верным, в результате выбирается не ближайший к A точный факториал, а ближайший, не превосходящий A.2) Ошибочный вывод. Вместо значения факториала F выводится «основание» факториала K. Пример исправления для языка Паскаль: Первая ошибка:if f − a >= f div k − aИсправленная строка:if f − a >= a − f div kВозможно также использование функции abs (модуль числа):if f − a >= abs(f div k − a) Функцию abs можно использовать и в левой части сравнения. Это ничего не меняет по сути, так как левая часть заведомо неотрицательна, но такое использование нельзя считать ошибкой: if abs(f − a) >= abs(f div k − a) При использовании модуля для исправлении фрагмента на алгоритмическом языке следует использовать функцию iabs (модуль для целых чисел): если f − a >= iabs(div(f,k) − a) Использование в алгоритмическом языке функции abs вместо iabs отмечается как ошибка, но не влияет на оценку работы. Вторая ошибка:writeln(k)Исправленная строка:writeln(f)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:48.421903",
            "question": "Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.Дано целое положительное число A. Необходимо найти ближайшее к A число, которое является точным факториалом какого-либо натурального числа. Если два точных факториала одинаково близки к A, нужно выбрать меньший из них. Например, для A = 15 нужно получить ответ 6, а для A = 20 – ответ 24.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, K, F AS INTEGER INPUT A K = 1 F = 1 WHILE F < A    K = K + 1    F = F * K WEND IF F − A >= F \\ K − A THEN    F = F \\ K END IF PRINT K END  a = int(input()) k = 1 f = 1 while f < a:    k += 1    f *= k if f − a >= f // k − a:    f //= k print(k)  ПаскальАлгоритмический язык var a, k, f: integer; begin    read(a);    k := 1;    f := 1;    while f < a do begin        k := k + 1;        f := f * k    end;    end;    if f−a >= f div k − a        then f := f div k;    writeln(k) end. алгнач    цел a, k, f    ввод a    k := 1    f := 1    нц пока f < a        k := k + 1        f := f * k    кц    если f − a >= div(f,k) − a        то f := div(f,k)    все    вывод kконС++#include <iostream>using namespace std;int main(){    int a, k, f;    cin >> a;    k = 1;    f = 1;    while (f < a) {        ++k;        f *= k;    }    if (f − a >= f/k − a)        f = f/k;    cout << k;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе A = 5.2. Приведите пример числа A, при котором программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body929523\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа n (обозначается <i>n</i>!) называется произведение всех натуральных чисел от 1 до <i>n</i>. Например, 4! = 1 · 2 · 3 · 4 = 24.<p class=\"left_margin\">Дано целое положительное число <i>A</i>. Необходимо найти ближайшее к <i>A</i> число, которое является точным факториалом какого-либо натурального числа. Если два точных факториала одинаково близки к <i>A</i>, нужно выбрать меньший из них. Например, для <i>A</i> = 15 нужно получить ответ 6, а для <i>A</i> = 20 – ответ 24.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, K, F AS INTEGER<p> INPUT A<p> K = 1<p> F = 1<p> WHILE F &lt; A<p>    K = K + 1<p>    F = F * K<p> WEND<p> IF F − A &gt;= F \\ K − A THEN<p>    F = F \\ K<p> END IF<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> a = int(input())<p> k = 1<p> f = 1<p> while f &lt; a:<p>    k += 1<p>    f *= k<p> if f − a &gt;= f // k − a:<p>    f //= k<p> print(k)<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var a, k, f: integer;<p> begin<p>    read(a);<p>    k := 1;<p>    f := 1;<p>    while f &lt; a do begin<p>        k := k + 1;<p>        f := f * k<p>    end;<p>    end;<p>    if f−a &gt;= f div k − a<p>        then f := f div k;<p>    writeln(k)<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, k, f<p>    ввод a<p>    k := 1<p>    f := 1<p>    нц пока f &lt; a<p>        k := k + 1<p>        f := f * k<p>    кц<p>    если f − a &gt;= div(f,k) − a<p>        то f := div(f,k)<p>    все<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int a, k, f;<p>    cin &gt;&gt; a;<p>    k = 1;<p>    f = 1;<p>    while (f &lt; a) {<p>        ++k;<p>        f *= k;<p>    }<p>    if (f − a &gt;= f/k − a)<p>        f = f/k;<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>A</i> = 5.<p class=\"left_margin\">2. Приведите пример числа A, при котором программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе A = 5 программа выведет число 3.2. Программа выводит верный ответ при вводе A = 1 (ответ 1) или A = 2 (ответ 2).3. Программа содержит две ошибки.1) Ошибочная проверка. После завершения цикла гарантированно выполняется неравенство F ≥ A > F/A, поэтому в сравнении после цикла левая часть всегда неотрицательна, а правая — отрицательна. Сравнение оказывается всегда верным, в результате выбирается не ближайший к A точный факториал, а ближайший, не превосходящий A.2) Ошибочный вывод. Вместо значения факториала F выводится «основание» факториала K. Пример исправления для языка Паскаль: Первая ошибка:if f − a >= f div k − aИсправленная строка:if f − a >= a − f div kВозможно также использование функции abs (модуль числа):if f − a >= abs(f div k − a) Функцию abs можно использовать и в левой части сравнения. Это ничего не меняет по сути, так как левая часть заведомо неотрицательна, но такое использование нельзя считать ошибкой: if abs(f − a) >= abs(f div k − a) При использовании модуля для исправлении фрагмента на алгоритмическом языке следует использовать функцию iabs (модуль для целых чисел): если f − a >= iabs(div(f,k) − a) Использование в алгоритмическом языке функции abs вместо iabs отмечается как ошибка, но не влияет на оценку работы. Вторая ошибка:writeln(k)Исправленная строка:writeln(f)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol16399\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>A</i> = 5 программа выведет число 3.<p class=\"left_margin\">2. Программа выводит верный ответ при вводе <i>A</i> = 1 (ответ 1) или <i>A</i> = 2 (ответ 2).<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Ошибочная проверка. После завершения цикла гарантированно выполняется неравенство <i>F</i> ≥ <i>A</i> &gt; <i>F</i>/<i>A</i>, поэтому в сравнении после цикла левая часть всегда неотрицательна, а правая — отрицательна. Сравнение оказывается всегда верным, в результате выбирается не ближайший к <i>A</i> точный факториал, а ближайший, не превосходящий <i>A</i>.<p class=\"left_margin\">2) Ошибочный вывод. Вместо значения факториала <i>F</i> выводится «основание» факториала <i>K</i>.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">if f − a &gt;= f div k − a<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if f − a &gt;= a − f div k<p class=\"left_margin\">Возможно также использование функции abs (модуль числа):<p class=\"left_margin\">if f − a &gt;= abs(f div k − a)<p> </p><p class=\"left_margin\">Функцию abs можно использовать и в левой части сравнения. Это ничего не меняет по сути, так как левая часть заведомо неотрицательна, но такое использование нельзя считать ошибкой:<p> </p><p class=\"left_margin\">if abs(f − a) &gt;= abs(f div k − a)<p> </p><p class=\"left_margin\">При использовании модуля для исправлении фрагмента на алгоритмическом языке следует использовать функцию iabs (модуль для целых чисел):<p> </p><p class=\"left_margin\">если f − a &gt;= iabs(div(f,k) − a)<p> </p><p class=\"left_margin\">Использование в алгоритмическом языке функции abs вместо iabs отмечается как ошибка, но не влияет на оценку работы.<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">writeln(k)<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">writeln(f)<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "16399"
        },
        {
            "answer": "Решение.1. При вводе A = 7 программа выведет число 3.2. Программа выводит верный ответ при вводе A = 1 (ответ 1), AA = 2 (ответ 2) и A = 3 (ответ 2).3. Программа содержит две ошибки.1) Первая ошибка. Ошибочная проверка. По условию при равном удалении A от двух точных факториалов нужно выбрать меньший из них. Для этого нужно строгое сравнение заменить на нестрогое.2) Ошибочный вывод. Вместо значения факториала F выводится «основание» факториала K. Пример исправления для языка Паскаль: Первая ошибка:if f − a > a − f div k Исправленная строка:if f − a >= a − f div k  Допускается использование функции abs (модуль числа). Это ничего не меняет по сути, так как обе части сравнения часть заведомо неотрицательны, но такое использование нельзя считать ошибкой: if abs(f−a) >= abs(a − f div k) При использовании функции модуля на алгоритмическом языке следует использовать функцию iabs (модуль для целых чисел): если iabs(f − a) >= iabs(div(f,k) − a) Использование в алгоритмическом языке функции abs вместо iabs отмечается как ошибка, но не влияет на оценку работы. Вторая ошибка:writeln(k)Исправленная строка:writeln(f)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:48.864707",
            "question": "Факториалом натурального числа n (обозначается n!) называется произведение всех натуральных чисел от 1 до n. Например, 4! = 1 · 2 · 3 · 4 = 24.Дано целое положительное число A. Необходимо найти ближайшее к A число, которое является точным факториалом какого-либо натурального числа. Если два точных факториала одинаково близки к A, нужно выбрать меньший из них. Например, для A = 15 нужно получить ответ 6, а для A = 20 – ответ 24.Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, K, F AS INTEGER INPUT A K = 0 F = 1 WHILE F <= A    K = K + 1    F = F * K WEND IF F − A > A − F \\ K THEN    F = F \\ K    K = K − 1 END IF PRINT K END  a = int(input()) k = 0 f = 1 while f <= a:    k += 1    f *= k if f − a > a − f // k:    f //= k    k −= 1 print(k)  ПаскальАлгоритмический язык var a, k, f: integer; begin    read(a);    k := 0;    f := 1;    while f <= a do begin        k := k + 1;        f := f * k    end;    end;    if f−a > a − f div k        then f := f div k;        k := k − 1;    writeln(k) end. алгнач    цел a, k, f    ввод a    k := 0    f := 1    нц пока f <= a        k := k + 1        f := f * k    кц    если f − a > a − div(f,k)        то f := div(f,k)            k := k − 1    все    вывод kконС++#include <iostream>using namespace std;int main(){    int a, k, f;    cin >> a;    k = 0;    f = 1;    while (f <= a) {        ++k;        f *= k;    }    if (f − a > a − f/k)        f = f/k;        −−k;    cout << k;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе A = 7.2. Приведите пример числа A, при котором программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body929465\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа n (обозначается <i>n</i>!) называется произведение всех натуральных чисел от 1 до <i>n</i>. Например, 4! = 1 · 2 · 3 · 4 = 24.<p class=\"left_margin\">Дано целое положительное число <i>A</i>. Необходимо найти ближайшее к <i>A</i> число, которое является точным факториалом какого-либо натурального числа. Если два точных факториала одинаково близки к <i>A</i>, нужно выбрать меньший из них. Например, для <i>A</i> = 15 нужно получить ответ 6, а для <i>A</i> = 20 – ответ 24.<p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, K, F AS INTEGER<p> INPUT A<p> K = 0<p> F = 1<p> WHILE F &lt;= A<p>    K = K + 1<p>    F = F * K<p> WEND<p> IF F − A &gt; A − F \\ K THEN<p>    F = F \\ K<p>    K = K − 1<p> END IF<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> a = int(input())<p> k = 0<p> f = 1<p> while f &lt;= a:<p>    k += 1<p>    f *= k<p> if f − a &gt; a − f // k:<p>    f //= k<p>    k −= 1<p> print(k)<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var a, k, f: integer;<p> begin<p>    read(a);<p>    k := 0;<p>    f := 1;<p>    while f &lt;= a do begin<p>        k := k + 1;<p>        f := f * k<p>    end;<p>    end;<p>    if f−a &gt; a − f div k<p>        then f := f div k;<p>        k := k − 1;<p>    writeln(k)<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, k, f<p>    ввод a<p>    k := 0<p>    f := 1<p>    нц пока f &lt;= a<p>        k := k + 1<p>        f := f * k<p>    кц<p>    если f − a &gt; a − div(f,k)<p>        то f := div(f,k)<p>            k := k − 1<p>    все<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int a, k, f;<p>    cin &gt;&gt; a;<p>    k = 0;<p>    f = 1;<p>    while (f &lt;= a) {<p>        ++k;<p>        f *= k;<p>    }<p>    if (f − a &gt; a − f/k)<p>        f = f/k;<p>        −−k;<p>    cout &lt;&lt; k;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>A</i> = 7.<p class=\"left_margin\">2. Приведите пример числа <i>A</i>, при котором программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе A = 7 программа выведет число 3.2. Программа выводит верный ответ при вводе A = 1 (ответ 1), AA = 2 (ответ 2) и A = 3 (ответ 2).3. Программа содержит две ошибки.1) Первая ошибка. Ошибочная проверка. По условию при равном удалении A от двух точных факториалов нужно выбрать меньший из них. Для этого нужно строгое сравнение заменить на нестрогое.2) Ошибочный вывод. Вместо значения факториала F выводится «основание» факториала K. Пример исправления для языка Паскаль: Первая ошибка:if f − a > a − f div k Исправленная строка:if f − a >= a − f div k  Допускается использование функции abs (модуль числа). Это ничего не меняет по сути, так как обе части сравнения часть заведомо неотрицательны, но такое использование нельзя считать ошибкой: if abs(f−a) >= abs(a − f div k) При использовании функции модуля на алгоритмическом языке следует использовать функцию iabs (модуль для целых чисел): если iabs(f − a) >= iabs(div(f,k) − a) Использование в алгоритмическом языке функции abs вместо iabs отмечается как ошибка, но не влияет на оценку работы. Вторая ошибка:writeln(k)Исправленная строка:writeln(f)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol16453\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>A</i> = 7 программа выведет число 3.<p class=\"left_margin\">2. Программа выводит верный ответ при вводе <i>A</i> = 1 (ответ 1), A<i>A</i> = 2 (ответ 2) и <i>A</i> = 3 (ответ 2).<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Первая ошибка. Ошибочная проверка. По условию при равном удалении <i>A</i> от двух точных факториалов нужно выбрать меньший из них. Для этого нужно строгое сравнение заменить на нестрогое.<p class=\"left_margin\">2) Ошибочный вывод. Вместо значения факториала <i>F</i> выводится «основание» факториала <i>K</i>.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">if f − a &gt; a − f div k <p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if f − a &gt;= a − f div k <p> </p><p class=\"left_margin\">Допускается использование функции abs (модуль числа). Это ничего не меняет по сути, так как обе части сравнения часть заведомо неотрицательны, но такое использование нельзя считать ошибкой:<p> </p><p class=\"left_margin\">if abs(f−a) &gt;= abs(a − f div k)<p> </p><p class=\"left_margin\">При использовании функции модуля на алгоритмическом языке следует использовать функцию iabs (модуль для целых чисел):<p> </p><p class=\"left_margin\">если iabs(f − a) &gt;= iabs(div(f,k) − a)<p> </p><p class=\"left_margin\">Использование в алгоритмическом языке функции abs вместо iabs отмечается как ошибка, но не влияет на оценку работы.<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">writeln(k)<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">writeln(f)<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "16453"
        },
        {
            "answer": "Решение.1. При вводе N = 2018 программа выведет число 4.2. Примеры чисел, при вводе которых программа выводит верные ответы: 22 (ответ 4), 240 (ответ 4), 480 (ответ 8), 82 (ответ 10).3. Программа содержит две ошибки.1) Неверная инициализация минимума. Минимальная сумма двух цифр может оказаться больше 10. Начальное значение минимума должно быть не меньше 18.2) Неверно определяется последняя цифра. Вместо неё вычисляется число, которое получается при вычёркивании последней цифры из записи N. Пример исправления для языка Паскаль: Первая ошибка:m := 10;Исправленная строка:m := 18;Допускается вместо 18 использовать любое число, которое больше 18. Вторая ошибка:d1 := n div 10;Исправленная строка:d1 := n mod 10;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "parsed": "2019-04-29 21:10:09.725476",
            "question": "Дано целое положительное число N ≥ 10. Необходимо найти наименьшую сумму двух соседних цифр в десятичной записи N. Например, для N = 2018 нужно получить ответ 1, а для N = 2030 ответ 2. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N,M,D1,D2,S AS INTEGER INPUT N M = 10 WHILE N >= 10    D1 = N \\ 10    D2 = N \\ 10 MOD 10    S = D1 + D2    IF S < M THEN        M = S    END IF    N = N \\ 10 WEND PRINT M  n = int(input()) m = 10 while n >= 10:    d1 = n // 10    d2 = n // 10 % 10    s = d1 + d2    if s < m:        m = s    n //= 10 print(m)  ПаскальАлгоритмический язык var n,m,d1,d2,s: integer; begin    readln(n);    m := 10;    while n >= 10 do begin        d1 := n div 10;        d2 := n div 10 mod 10;        s := d1 + d2;        if s < m then            m := s;        n := n div 10    end;    writeln(m); end. алгнач    цел n,m,d1,d2,s    ввод n    m := 10    нц пока n >= 10        d1 := div(n,10)        d2 := mod(div(n,10),10)        s := d1 + d2        если s < m            то m := s        все        n := div(n,10)    кц    вывод mконС++#include <iostream>using namespace std;int main(){    int n,m,d1,d2,s;    cin >> n;    m = 10;    while (n >= 10) {        d1 = n / 10;        d2 = n / 10 % 10;        s = d1 + d2;        if (s < m)            m = s;        n /= 10;    }    cout << m;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 2018.2. Приведите пример числа N, при котором программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body929607\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i> ≥ 10. Необходимо найти наименьшую сумму двух соседних цифр в десятичной записи <i>N</i>. Например, для <i>N</i> = 2018 нужно получить ответ 1, а для <i>N</i> = 2030 ответ 2. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N,M,D1,D2,S AS INTEGER<p> INPUT N<p> M = 10<p> WHILE N &gt;= 10<p>    D1 = N \\ 10<p>    D2 = N \\ 10 MOD 10<p>    S = D1 + D2<p>    IF S &lt; M THEN<p>        M = S<p>    END IF<p>    N = N \\ 10<p> WEND<p> PRINT M<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> n = int(input())<p> m = 10<p> while n &gt;= 10:<p>    d1 = n // 10<p>    d2 = n // 10 % 10<p>    s = d1 + d2<p>    if s &lt; m:<p>        m = s<p>    n //= 10<p> print(m)<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var n,m,d1,d2,s: integer;<p> begin<p>    readln(n);<p>    m := 10;<p>    while n &gt;= 10 do begin<p>        d1 := n div 10;<p>        d2 := n div 10 mod 10;<p>        s := d1 + d2;<p>        if s &lt; m then<p>            m := s;<p>        n := n div 10<p>    end;<p>    writeln(m);<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n,m,d1,d2,s<p>    ввод n<p>    m := 10<p>    нц пока n &gt;= 10<p>        d1 := div(n,10)<p>        d2 := mod(div(n,10),10)<p>        s := d1 + d2<p>        если s &lt; m<p>            то m := s<p>        все<p>        n := div(n,10)<p>    кц<p>    вывод m<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n,m,d1,d2,s;<p>    cin &gt;&gt; n;<p>    m = 10;<p>    while (n &gt;= 10) {<p>        d1 = n / 10;<p>        d2 = n / 10 % 10;<p>        s = d1 + d2;<p>        if (s &lt; m)<p>            m = s;<p>        n /= 10;<p>    }<p>    cout &lt;&lt; m;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 2018.<p class=\"left_margin\">2. Приведите пример числа <i>N</i>, при котором программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 2018 программа выведет число 4.2. Примеры чисел, при вводе которых программа выводит верные ответы: 22 (ответ 4), 240 (ответ 4), 480 (ответ 8), 82 (ответ 10).3. Программа содержит две ошибки.1) Неверная инициализация минимума. Минимальная сумма двух цифр может оказаться больше 10. Начальное значение минимума должно быть не меньше 18.2) Неверно определяется последняя цифра. Вместо неё вычисляется число, которое получается при вычёркивании последней цифры из записи N. Пример исправления для языка Паскаль: Первая ошибка:m := 10;Исправленная строка:m := 18;Допускается вместо 18 использовать любое число, которое больше 18. Вторая ошибка:d1 := n div 10;Исправленная строка:d1 := n mod 10;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol16827\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 2018 программа выведет число 4.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верные ответы: 22 (ответ 4), 240 (ответ 4), 480 (ответ 8), 82 (ответ 10).<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация минимума. Минимальная сумма двух цифр может оказаться больше 10. Начальное значение минимума должно быть не меньше 18.<p class=\"left_margin\">2) Неверно определяется последняя цифра. Вместо неё вычисляется число, которое получается при вычёркивании последней цифры из записи <i>N</i>.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">m := 10;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">m := 18;<p class=\"left_margin\">Допускается вместо 18 использовать любое число, которое больше 18.<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">d1 := n div 10;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">d1 := n mod 10;<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "16827"
        },
        {
            "answer": "Решение.1. При вводе N = 2018 программа выведет число 26.2. Примеры чисел, при вводе которых программа выводит верные ответы: 402 (ответ 4), 804 (ответ 8), 910 (ответ 10).3. Программа содержит две ошибки.1) Неверно определяется вторая с конца цифра. Вместо цифры вычисляется двузначное число, которым заканчивается запись N.2) Неверный переход к следующим цифрам. Цифры отбрасываются по две, а не по одной, в результате некоторые пары соседних цифр не обрабатываются. Пример исправления для языка Паскаль: Первая ошибка:d2 := n mod 100;Исправленная строка:d2 := n mod 100 div 10;Возможны и другие способы вычисления, например:d2 := n div 10 mod 10;Правильным считается любое исправление, которое приводит к верному вычислению нужной цифры. Вторая ошибка:n := n div 100Исправленная строка:n := n div 10В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "parsed": "2019-04-29 21:10:10.058762",
            "question": "Дано целое положительное число N ≥ 10. Необходимо найти наибольшую сумму двух соседних цифр в десятичной записи N. Например, для N = 2018 нужно получить ответ 9, а для N = 2010 ответ 2. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N,M,D1,D2,S AS INTEGER INPUT N M = 0 WHILE N >= 10    D1 = N MOD 10    D2 = N MOD 100    S = D1 + D2    IF S > M THEN        M = S    END IF    N = N \\ 100 WEND PRINT M  n = int(input()) m = 0 while n >= 10:    d1 = n % 10    d2 = n % 100    s = d1 + d2    if s > m:        m = s    n //= 100 print(m)  ПаскальАлгоритмический язык var n,m,d1,d2,s: integer; begin    readln(n);    m := 0;    while n >= 10 do begin        d1 := n mod 10;        d2 := n mod 100;        s := d1 + d2;        if s > m then            m := s;        n := n div 100    end;    writeln(m); end. алгнач    цел n,m,d1,d2,s    ввод n    m := 0    нц пока n >= 10        d1 := mod(n,10)        d2 := mod(n,100)        s := d1 + d2        если s > m            то m := s        все        n := div(n,100)    кц    вывод mконС++#include <iostream>using namespace std;int main(){    int n,m,d1,d2,s;    cin >> n;    m = 0;    while (n >= 10) {        d1 = n % 10;        d2 = n % 100;        s = d1 + d2;        if (s > m)            m = s;        n /= 100;    }    cout << m;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе N = 2018.2. Приведите пример числа N, при котором программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body929016\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i> ≥ 10. Необходимо найти наибольшую сумму двух соседних цифр в десятичной записи <i>N</i>. Например, для <i>N</i> = 2018 нужно получить ответ 9, а для <i>N</i> = 2010 ответ 2. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N,M,D1,D2,S AS INTEGER<p> INPUT N<p> M = 0<p> WHILE N &gt;= 10<p>    D1 = N MOD 10<p>    D2 = N MOD 100<p>    S = D1 + D2<p>    IF S &gt; M THEN<p>        M = S<p>    END IF<p>    N = N \\ 100<p> WEND<p> PRINT M<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> n = int(input())<p> m = 0<p> while n &gt;= 10:<p>    d1 = n % 10<p>    d2 = n % 100<p>    s = d1 + d2<p>    if s &gt; m:<p>        m = s<p>    n //= 100<p> print(m)<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var n,m,d1,d2,s: integer;<p> begin<p>    readln(n);<p>    m := 0;<p>    while n &gt;= 10 do begin<p>        d1 := n mod 10;<p>        d2 := n mod 100;<p>        s := d1 + d2;<p>        if s &gt; m then<p>            m := s;<p>        n := n div 100<p>    end;<p>    writeln(m);<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел n,m,d1,d2,s<p>    ввод n<p>    m := 0<p>    нц пока n &gt;= 10<p>        d1 := mod(n,10)<p>        d2 := mod(n,100)<p>        s := d1 + d2<p>        если s &gt; m<p>            то m := s<p>        все<p>        n := div(n,100)<p>    кц<p>    вывод m<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int n,m,d1,d2,s;<p>    cin &gt;&gt; n;<p>    m = 0;<p>    while (n &gt;= 10) {<p>        d1 = n % 10;<p>        d2 = n % 100;<p>        s = d1 + d2;<p>        if (s &gt; m)<p>            m = s;<p>        n /= 100;<p>    }<p>    cout &lt;&lt; m;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе <i>N</i> = 2018.<p class=\"left_margin\">2. Приведите пример числа <i>N</i>, при котором программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе N = 2018 программа выведет число 26.2. Примеры чисел, при вводе которых программа выводит верные ответы: 402 (ответ 4), 804 (ответ 8), 910 (ответ 10).3. Программа содержит две ошибки.1) Неверно определяется вторая с конца цифра. Вместо цифры вычисляется двузначное число, которым заканчивается запись N.2) Неверный переход к следующим цифрам. Цифры отбрасываются по две, а не по одной, в результате некоторые пары соседних цифр не обрабатываются. Пример исправления для языка Паскаль: Первая ошибка:d2 := n mod 100;Исправленная строка:d2 := n mod 100 div 10;Возможны и другие способы вычисления, например:d2 := n div 10 mod 10;Правильным считается любое исправление, которое приводит к верному вычислению нужной цифры. Вторая ошибка:n := n div 100Исправленная строка:n := n div 10В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol16900\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе <i>N</i> = 2018 программа выведет число 26.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верные ответы: 402 (ответ 4), 804 (ответ 8), 910 (ответ 10).<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверно определяется вторая с конца цифра. Вместо цифры вычисляется двузначное число, которым заканчивается запись <i>N</i>.<p class=\"left_margin\">2) Неверный переход к следующим цифрам. Цифры отбрасываются по две, а не по одной, в результате некоторые пары соседних цифр не обрабатываются.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">d2 := n mod 100;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">d2 := n mod 100 div 10;<p class=\"left_margin\">Возможны и другие способы вычисления, например:<p class=\"left_margin\">d2 := n div 10 mod 10;<p class=\"left_margin\">Правильным считается любое исправление, которое приводит к верному вычислению нужной цифры.<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">n := n div 100<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">n := n div 10<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "16900"
        },
        {
            "answer": "Решение.1. При вводе чисел 2 и 6 программа выведет число 1.2. Ответ больше правильного получается, если первое число равно 1, а второе не является точным факториалом. Например, 1 и 3, 1 и 4. Ученику достаточно привести одну конкретную пару чисел.3. Программа содержит две ошибки.1) Неверная инициализация «основания» факториала K. Из-за этого значение 1 факториала F проверяется дважды, и если A = 1, к ответу прибавляется лишняя единица.2) Ошибочное сравнение. Вместо нестрогого сравнения F и B выполняется строгое. Из-за этого в тех случаях, когда B оказывается точным факториалом, ответ получается на единицу меньше Пример исправления для языка Паскаль: Первая ошибка:k := 0;Исправленная строка:k := 1; Вторая ошибка:while f < b do beginИсправленная строка:while f <= b do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "parsed": "2019-04-29 21:09:49.201032",
            "question": "Факториалом натурального числа N (обозначается N!) называется произведение всех натуральных чисел от 1 до N. Например, 4! = 1 · 2 · 3 · 4 = 24. Даны целые положительные числа A и B, 0 < A ≤ B. Необходимо найти количество таких натуральных K, для которых A ≤ K! ≤ B. Например, при A = 5, B = 25 ответ должен быть равен 2 (подходящие значения K — 3 и 4, их факториалы 6 и 24 попадают в заданный интервал). Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, B, K, F, D AS INTEGER INPUT A: INPUT B F = 1 K = 0 D = 0 WHILE F < B    IF F >=A THEN        D = D + 1    END IF    K = K + 1    F = F * K WEND PRINT D END a = int(input())b = int(input())f = 1k = 0d = 0while f < b:    if f >= a:        d += 1    k += 1    f *= kprint(d)  ПаскальАлгоритмический языкvar a, b, k, f, d: integer;begin    read(a, b);    f := 1;    k := 0;    d := 0;    while f < b do begin        if f >= a then            d := d + 1;        k := k + 1;        f := f * k    end;    writeln(d)end. алгнач    цел a, b, k, f, d    ввод a, b    f := 1    k := 0    d := 0    нц пока f < b        если f >=a            то d := d + 1        все        k := k + 1        f := f * k    кц    вывод dконС++#include <iostream>using namespace std;int main(){    int a, b, k, f, d;    cin >> a >> b;    f = 1;    k = 0;    d = 0;    while (f < b) {        if (f >= a)            ++d;        ++k;        f *= k;    }    cout << d;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 2 и 6.2. Приведите пример входных данных, при которых программа выведет ответ, который больше правильного.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body929090\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа <i>N</i> (обозначается <i>N</i>!) называется произведение всех натуральных чисел от 1 до <i>N</i>. Например, 4! = 1 · 2 · 3 · 4 = 24. Даны целые положительные числа <i>A</i> и <i>B</i>, 0 &lt; <i>A</i> ≤ <i>B</i>. Необходимо найти количество таких натуральных <i>K</i>, для которых <i>A</i> ≤ <i>K</i>! ≤ <i>B</i>. Например, при <i>A</i> = 5, <i>B</i> = 25 ответ должен быть равен 2 (подходящие значения <i>K</i> — 3 и 4, их факториалы 6 и 24 попадают в заданный интервал). Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, B, K, F, D AS INTEGER<p> INPUT A: INPUT B<p> F = 1<p> K = 0<p> D = 0<p> WHILE F &lt; B<p>    IF F &gt;=A THEN<p>        D = D + 1<p>    END IF<p>    K = K + 1<p>    F = F * K<p> WEND<p> PRINT D<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>b = int(input())<p>f = 1<p>k = 0<p>d = 0<p>while f &lt; b:<p>    if f &gt;= a:<p>        d += 1<p>    k += 1<p>    f *= k<p>print(d)<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, b, k, f, d: integer;<p>begin<p>    read(a, b);<p>    f := 1;<p>    k := 0;<p>    d := 0;<p>    while f &lt; b do begin<p>        if f &gt;= a then<p>            d := d + 1;<p>        k := k + 1;<p>        f := f * k<p>    end;<p>    writeln(d)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, b, k, f, d<p>    ввод a, b<p>    f := 1<p>    k := 0<p>    d := 0<p>    нц пока f &lt; b<p>        если f &gt;=a<p>            то d := d + 1<p>        все<p>        k := k + 1<p>        f := f * k<p>    кц<p>    вывод d<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int a, b, k, f, d;<p>    cin &gt;&gt; a &gt;&gt; b;<p>    f = 1;<p>    k = 0;<p>    d = 0;<p>    while (f &lt; b) {<p>        if (f &gt;= a)<p>            ++d;<p>        ++k;<p>        f *= k;<p>    }<p>    cout &lt;&lt; d;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 2 и 6.<p class=\"left_margin\">2. Приведите пример входных данных, при которых программа выведет ответ, который больше правильного.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе чисел 2 и 6 программа выведет число 1.2. Ответ больше правильного получается, если первое число равно 1, а второе не является точным факториалом. Например, 1 и 3, 1 и 4. Ученику достаточно привести одну конкретную пару чисел.3. Программа содержит две ошибки.1) Неверная инициализация «основания» факториала K. Из-за этого значение 1 факториала F проверяется дважды, и если A = 1, к ответу прибавляется лишняя единица.2) Ошибочное сравнение. Вместо нестрогого сравнения F и B выполняется строгое. Из-за этого в тех случаях, когда B оказывается точным факториалом, ответ получается на единицу меньше Пример исправления для языка Паскаль: Первая ошибка:k := 0;Исправленная строка:k := 1; Вторая ошибка:while f < b do beginИсправленная строка:while f <= b do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol17342\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе чисел 2 и 6 программа выведет число 1.<p class=\"left_margin\">2. Ответ больше правильного получается, если первое число равно 1, а второе не является точным факториалом. Например, 1 и 3, 1 и 4. Ученику достаточно привести одну конкретную пару чисел.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация «основания» факториала <i>K</i>. Из-за этого значение 1 факториала <i>F</i> проверяется дважды, и если <i>A</i> = 1, к ответу прибавляется лишняя единица.<p class=\"left_margin\">2) Ошибочное сравнение. Вместо нестрогого сравнения <i>F</i> и <i>B</i> выполняется строгое. Из-за этого в тех случаях, когда <i>B</i> оказывается точным факториалом, ответ получается на единицу меньше<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">k := 0;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">k := 1;<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">while f &lt; b do begin<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">while f &lt;= b do begin<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "17342"
        },
        {
            "answer": "Решение.1. При вводе чисел 5 и 25 программа выведет число 3.2. Верный ответ получается, если первое число является точным факториалом. Возможные пары: 2 и 5, 6 и 24. Ученику достаточно привести одну конкретную пару чисел.3. Программа содержит две ошибки.1) Неверная инициализация счётчика D. Из-за этого ответ оказывается на единицу больше, чем нужно.2) Ошибочное сравнение. Вместо нестрогого сравнения F и A выполняется строгое. Из-за этого в тех случаях, когда A оказывается точным факториалом, ответ получается на единицу меньше. Пример исправления для языка Паскаль: Первая ошибка:d := 1;Исправленная строка: d := 0; Вторая ошибка:if f > a thenИсправленная строка:if f >= a thenВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "parsed": "2019-04-29 21:09:49.522227",
            "question": "Факториалом натурального числа N (обозначается N!) называется произведение всех натуральных чисел от 1 до N. Например, 4! = 1 · 2 · 3 · 4 = 24. Даны целые положительные числа A и B, 0 < A ≤ B. Необходимо найти количество таких натуральных K, для которых A ≤ K! ≤ B. Например, при A = 5, B = 25 ответ должен быть равен 2 (подходящие значения K — 3 и 4, их факториалы 6 и 24 попадают в заданный интервал). Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM A, B, K, F, D AS INTEGER INPUT A: INPUT B F = 1 K = 1 D = 1 WHILE F <= B    IF F >A THEN        D = D + 1    END IF     K = K + 1    F = F * K WEND PRINT D END a = int(input())b = int(input())f = 1k = 1d = 1while f <= b:    if f > a:        d += 1    k += 1    f *= kprint(d)  ПаскальАлгоритмический языкvar a, b, k, f, d: integer;begin    read(a, b);    f := 1;    k := 1;    d := 1;    while f <= b do begin        if f > a then            d := d + 1;        k := k + 1;         f := f * k    end;    writeln(d)end. алгнач    цел a, b, k, f, d     ввод a, b    f := 1     k := 1     d := 1    нц пока f <= b        если f >a            то d := d + 1        все         k := k + 1         f := f * k    кц    вывод dконС++#include <iostream>using namespace std;int main(){    int a, b, k, f, d;    cin >> a >> b;    f = 1;    k = 1;    d = 1;    while (f <= b) {        if (f > a)            ++d;        ++k;        f *= k;    }    cout << d;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе чисел 5 и 25.2. Приведите пример входных данных, при которых программа выведет верный ответ.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body929040\" width=\"100%\"><p class=\"left_margin\">Факториалом натурального числа <i>N</i> (обозначается <i>N</i>!) называется произведение всех натуральных чисел от 1 до <i>N</i>. Например, 4! = 1 · 2 · 3 · 4 = 24. Даны целые положительные числа <i>A</i> и <i>B</i>, 0 &lt; <i>A</i> ≤ <i>B</i>. Необходимо найти количество таких натуральных <i>K</i>, для которых <i>A</i> ≤ <i>K</i>! ≤ <i>B</i>. Например, при <i>A</i> = 5, <i>B</i> = 25 ответ должен быть равен 2 (подходящие значения <i>K</i> — 3 и 4, их факториалы 6 и 24 попадают в заданный интервал). Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, B, K, F, D AS INTEGER<p> INPUT A: INPUT B<p> F = 1<p> K = 1<p> D = 1<p> WHILE F &lt;= B<p>    IF F &gt;A THEN<p>        D = D + 1<p>    END IF <p>    K = K + 1<p>    F = F * K<p> WEND<p> PRINT D<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>b = int(input())<p>f = 1<p>k = 1<p>d = 1<p>while f &lt;= b:<p>    if f &gt; a:<p>        d += 1<p>    k += 1<p>    f *= k<p>print(d)<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, b, k, f, d: integer;<p>begin<p>    read(a, b);<p>    f := 1;<p>    k := 1;<p>    d := 1;<p>    while f &lt;= b do begin<p>        if f &gt; a then<p>            d := d + 1;<p>        k := k + 1; <p>        f := f * k<p>    end;<p>    writeln(d)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел a, b, k, f, d <p>    ввод a, b<p>    f := 1 <p>    k := 1 <p>    d := 1<p>    нц пока f &lt;= b<p>        если f &gt;a<p>            то d := d + 1<p>        все <p>        k := k + 1 <p>        f := f * k<p>    кц<p>    вывод d<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int a, b, k, f, d;<p>    cin &gt;&gt; a &gt;&gt; b;<p>    f = 1;<p>    k = 1;<p>    d = 1;<p>    while (f &lt;= b) {<p>        if (f &gt; a)<p>            ++d;<p>        ++k;<p>        f *= k;<p>    }<p>    cout &lt;&lt; d;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе чисел 5 и 25.<p class=\"left_margin\">2. Приведите пример входных данных, при которых программа выведет верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе чисел 5 и 25 программа выведет число 3.2. Верный ответ получается, если первое число является точным факториалом. Возможные пары: 2 и 5, 6 и 24. Ученику достаточно привести одну конкретную пару чисел.3. Программа содержит две ошибки.1) Неверная инициализация счётчика D. Из-за этого ответ оказывается на единицу больше, чем нужно.2) Ошибочное сравнение. Вместо нестрогого сравнения F и A выполняется строгое. Из-за этого в тех случаях, когда A оказывается точным факториалом, ответ получается на единицу меньше. Пример исправления для языка Паскаль: Первая ошибка:d := 1;Исправленная строка: d := 0; Вторая ошибка:if f > a thenИсправленная строка:if f >= a thenВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol17388\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе чисел 5 и 25 программа выведет число 3.<p class=\"left_margin\">2. Верный ответ получается, если первое число является точным факториалом. Возможные пары: 2 и 5, 6 и 24. Ученику достаточно привести одну конкретную пару чисел.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация счётчика <i>D</i>. Из-за этого ответ оказывается на единицу больше, чем нужно.<p class=\"left_margin\">2) Ошибочное сравнение. Вместо нестрогого сравнения <i>F</i> и <i>A</i> выполняется строгое. Из-за этого в тех случаях, когда <i>A</i> оказывается точным факториалом, ответ получается на единицу меньше.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">d := 1;<p class=\"left_margin\">Исправленная строка: <p class=\"left_margin\">d := 0;<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">if f &gt; a then<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if f &gt;= a then<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "17388"
        },
        {
            "answer": "Решение.1. При вводе чисел 13, 20, 37 и 40 программа выведет числа 2 и 40.2. Программа выведет верный ответ, если среди последовательности из четырёх чисел будет только одно число, которое будет делиться на 10, причём это не 0, например — 1, 2, 3 и 10, либо если в последовательности есть несколько нулей и после них идёт только одно число, которое делится на 10, например — 0 0 20 3.3. Программа содержит две ошибки.1) Неверный подсчёт суммы чисел, которые делятся без остатка на 10.2)  Неверная проверка наличия чисел в последовательности, удовлетворяющих условию. Пример исправления для языка Паскаль: Первая ошибка:p := x;Исправленная строка:p := p + x; Вторая ошибка:if p > 0 then beginИсправленная строка:if count > 0 then beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++). Примечание к пункту 2.Также можно заметить, что программа выведет верный ответ если среди последовательности из четырёх чисел не будет чисел, которые делятся без остатка на 10, например — 5, 7, 23, 1. Но такой пример в качестве ответа привести нельзя.",
            "parsed": "2019-04-29 21:09:29.934022",
            "question": "На обработку поступает последовательность из четырёх целых неотрицательных чисел. Нужно написать программу, которая выводит на экран количество чисел, остаток от деления на 10 которых равен 0, и сумму таких чисел. Если таких чисел нет, требуется вывести на экран «NO». Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM P,I,X,COUNT AS INTEGER COUNT = 0 P = 0 FOR I = 1 TO 4    INPUT X    IF X MOD 10 = 0 THEN        COUNT = COUNT + 1        P = X    END IF NEXT I IF P > 0 THEN    PRINT COUNT    PRINT P ELSE    PRINT ‘NO’ END IF count = 0p = 0for i in range(4):    x = int(input())    if x % 10 == 0:        count = count + 1        p = xif p > 0:    print(count)    print(p)else:    print(‘NO’)  ПаскальАлгоритмический языкvar p,i,x,count: integer;begin    count := 0;    p := 0;    for i := 1 to 4 do begin        read (x);        if x mod 10 = 0 then        begin            count := count+1;            p := x;        end    end;if p > 0 then begin    writeln(count);    writeln(p);endelse    writeln('NO')end. алгнач    цел p, i, x, count    count := 0    p := 0    нц для i от 1 до 4        ввод x        если mod(x,10) = 0 то            count := count + 1            p := x        все    кц    если p > 0 то        вывод count        вывод p    иначе вывод \"NO\"конС++#include <iostream>using namespace std;int main(){    int p, i, x, count;    count = 0; p = 0;    for(i=0; i < 4; i = i + 1){        cin >> x;        if(x % 10 == 0){            count = count + 1;            p = x;        }    }    if(p > 0)        cout << count << endl << p;    else        cout << ‘NO’;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе 13, 20, 37, 40.2. Приведите пример входных данных, при вводе которых программа выведет верный ответ. Среди вводимых чисел должно быть хотя бы одно, удовлетворяющее условию отбора. Укажите этот ответ.3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body927825\" width=\"100%\"><p class=\"left_margin\">На обработку поступает последовательность из четырёх целых неотрицательных чисел. Нужно написать программу, которая выводит на экран количество чисел, остаток от деления на 10 которых равен 0, и сумму таких чисел. Если таких чисел нет, требуется вывести на экран «NO». Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM P,I,X,COUNT AS INTEGER<p> COUNT = 0<p> P = 0<p> FOR I = 1 TO 4<p>    INPUT X<p>    IF X MOD 10 = 0 THEN<p>        COUNT = COUNT + 1<p>        P = X<p>    END IF<p> NEXT I<p> IF P &gt; 0 THEN<p>    PRINT COUNT<p>    PRINT P<p> ELSE<p>    PRINT ‘NO’<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>count = 0<p>p = 0<p>for i in range(4):<p>    x = int(input())<p>    if x % 10 == 0:<p>        count = count + 1<p>        p = x<p>if p &gt; 0:<p>    print(count)<p>    print(p)<p>else:<p>    print(‘NO’)<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var p,i,x,count: integer;<p>begin<p>    count := 0;<p>    p := 0;<p>    for i := 1 to 4 do begin<p>        read (x);<p>        if x mod 10 = 0 then<p>        begin<p>            count := count+1;<p>            p := x;<p>        end<p>    end;<p>if p &gt; 0 then begin<p>    writeln(count);<p>    writeln(p);<p>end<p>else<p>    writeln('NO')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел p, i, x, count<p>    count := 0<p>    p := 0<p>    нц для i от 1 до 4<p>        ввод x<p>        если mod(x,10) = 0 то<p>            count := count + 1<p>            p := x<p>        все<p>    кц<p>    если p &gt; 0 то<p>        вывод count<p>        вывод p<p>    иначе вывод \"NO\"<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>С++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    int p, i, x, count;<p>    count = 0; p = 0;<p>    for(i=0; i &lt; 4; i = i + 1){<p>        cin &gt;&gt; x;<p>        if(x % 10 == 0){<p>            count = count + 1;<p>            p = x;<p>        }<p>    }<p>    if(p &gt; 0)<p>        cout &lt;&lt; count &lt;&lt; endl &lt;&lt; p;<p>    else<p>        cout &lt;&lt; ‘NO’;<p>    return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе 13, 20, 37, 40.<p class=\"left_margin\">2. Приведите пример входных данных, при вводе которых программа выведет верный ответ. Среди вводимых чисел должно быть хотя бы одно, удовлетворяющее условию отбора. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (известно, что их не больше двух) и исправьте их. Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе чисел 13, 20, 37 и 40 программа выведет числа 2 и 40.2. Программа выведет верный ответ, если среди последовательности из четырёх чисел будет только одно число, которое будет делиться на 10, причём это не 0, например — 1, 2, 3 и 10, либо если в последовательности есть несколько нулей и после них идёт только одно число, которое делится на 10, например — 0 0 20 3.3. Программа содержит две ошибки.1) Неверный подсчёт суммы чисел, которые делятся без остатка на 10.2)  Неверная проверка наличия чисел в последовательности, удовлетворяющих условию. Пример исправления для языка Паскаль: Первая ошибка:p := x;Исправленная строка:p := p + x; Вторая ошибка:if p > 0 then beginИсправленная строка:if count > 0 then beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++). Примечание к пункту 2.Также можно заметить, что программа выведет верный ответ если среди последовательности из четырёх чисел не будет чисел, которые делятся без остатка на 10, например — 5, 7, 23, 1. Но такой пример в качестве ответа привести нельзя.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol18093\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе чисел 13, 20, 37 и 40 программа выведет числа 2 и 40.<p class=\"left_margin\">2. Программа выведет верный ответ, если среди последовательности из четырёх чисел будет только одно число, которое будет делиться на 10, причём это не 0, например — 1, 2, 3 и 10, либо если в последовательности есть несколько нулей и после них идёт только одно число, которое делится на 10, например — 0 0 20 3.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверный подсчёт суммы чисел, которые делятся без остатка на 10.<p class=\"left_margin\">2)  Неверная проверка наличия чисел в последовательности, удовлетворяющих условию.<p> </p><p class=\"left_margin\"><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\"><b><i>Первая ошибка:</i></b><p class=\"left_margin\">p := x;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">p := p + x;<p> </p><p class=\"left_margin\"><b><i>Вторая ошибка:</i></b><p class=\"left_margin\">if p &gt; 0 then begin<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">if count &gt; 0 then begin<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления (например, точки с запятой в C++).<p> </p><p><b>Примечание к пункту 2.</b><p class=\"left_margin\">Также можно заметить, что программа выведет верный ответ если среди последовательности из четырёх чисел не будет чисел, которые делятся без остатка на 10, например — 5, 7, 23, 1. Но такой пример в качестве ответа привести нельзя.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ — 2019. До­сроч­ная волна. Вариант 1.",
            "task_id": "18093"
        },
        {
            "answer": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла) Элементы ответа:1) ОбластьУсловие 1 (x*x+y*y>=4)Условие 2 (x>= –2)Условие 3 (y<= –x)Программа выведетОбласть обрабатывается верноAданет——нетВданет——нетСдаданетне принадлежитдаDдададапринадлежитдаЕнет———нетFнет———нетGнет———нетНдададапринадлежитнет 2) Возможная доработка (Паскаль): if (x*x+y*y>=4) and (x>= –2) and (y<= –x) and (y>=0) thenwrite('принадлежит')elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:12.944049",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (,  — действительные числа) и определяет принадлежность точки заштрихованной области, включая её границы. Программист торопился и написал программу неправильно. ПаскальБейсикvar x,y: real;beginreadln(x,y);if x*x+y*y>=4 thenif x>= –2 thenif y<= –x thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, yIF x*x+y*y>=4 THENIF x>= –2 THENIF y<= –x THENPRINT \"принадлежит\"ELSEPRINT \"не принадлежит\"ENDIFENDIFENDIFENDСи++Алгоритмическийint main(){float x,y;cin >> x >> y;if (x*x+y*y>=4)if (x>= –2)if (y<= –x)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алг нач вещ x,y ввод x,y если x*x+y*y>=4 то    если x>= –2 то        если y<= –x то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx = float(input())y = float(input())if x*x+y*y >= 4:    if x >= −2:        if у <= -x:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно\tвыполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (x*x+y*y>=4)Условие 2 (x>= –2)Условие 3 (y<= –x)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body943117\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (<img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/9d/9dd4e461268c8034f5c8564e155c67a6.svg\" style=\"vertical-align:-2pt\"/>, <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/41/415290769594460e2e485922904f345d.svg\" style=\"vertical-align:-3pt\"/> — действительные числа) и определяет принадлежность точки заштрихованной области, включая её границы. Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" width=\"80%\"><tr align=\"center\" valign=\"top\"><th width=\"33%\">Паскаль</th><th width=\"33%\">Бейсик</th></tr><tr valign=\"top\"><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var x,y: real;<p>begin<p>readln(x,y);<p>if x*x+y*y&gt;=4 then<p>if x&gt;= –2 then<p>if y&lt;= –x then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font><p></p></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\"><p class=\"left_margin\">INPUT x, y<p class=\"left_margin\">IF x*x+y*y&gt;=4 THEN<p class=\"left_margin\">IF x&gt;= –2 THEN<p class=\"left_margin\">IF y&lt;= –x THEN<p class=\"left_margin\">PRINT \"принадлежит\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"не принадлежит\"<p class=\"left_margin\">ENDIF<p class=\"left_margin\">ENDIF<p class=\"left_margin\">ENDIF<p class=\"left_margin\">END</p></p></p></p></p></p></p></p></p></p></p></font></div></td><p></p></tr><tr><p><tr><th width=\"34%\">Си++</th><th width=\"34%\">Алгоритмический</th></tr><p><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main()<p>{<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (x*x+y*y&gt;=4)<p>if (x&gt;= –2)<p>if (y&lt;= –x)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></p></font></div></td><p><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если x*x+y*y&gt;=4 то<p>    если x&gt;= –2 то<p>        если y&lt;= –x то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></p></p></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>y = float(input())<p>if x*x+y*y &gt;= 4:<p>    if x &gt;= −2:<p>        if у &lt;= -x:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p> </p><p align=\"center\"><img src=\"http://reshuege.ru/files/2493.png\"/></p><p><img src=\"/get_file?id=5945\" style=\"float:right;margin:10px\" width=\"200px;\"/>Последовательно\tвыполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(x*x+y*y&gt;=4)</p></td><td>Условие 2 <p class=\"left_margin\">(x&gt;= –2)</p></td><td>Условие 3 <p class=\"left_margin\">(y&lt;= –x)</p></td><p><td>Программа выведет</td><td>Область обрабатывается верно</td></p></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла) Элементы ответа:1) ОбластьУсловие 1 (x*x+y*y>=4)Условие 2 (x>= –2)Условие 3 (y<= –x)Программа выведетОбласть обрабатывается верноAданет——нетВданет——нетСдаданетне принадлежитдаDдададапринадлежитдаЕнет———нетFнет———нетGнет———нетНдададапринадлежитнет 2) Возможная доработка (Паскаль): if (x*x+y*y>=4) and (x>= –2) and (y<= –x) and (y>=0) thenwrite('принадлежит')elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol2801\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла)<p> Элементы ответа:<p class=\"left_margin\">1) <table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(x*x+y*y&gt;=4)</p></td><td>Условие 2 <p class=\"left_margin\">(x&gt;= –2)</p></td><td>Условие 3 <p class=\"left_margin\">(y&lt;= –x)</p></td><td>Программа выведет</td><td>Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td>A</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Е</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2) Возможная доработка (Паскаль):<p> </p><p><font face=\"courier\">if (x*x+y*y&gt;=4) and (x&gt;= –2) and (y&lt;= –x) and (y&gt;=0) then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></font><p> </p><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "2801"
        },
        {
            "answer": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысл) Элементы ответа:1) ОбластьУсловие 1 (y<=x)Условие 2 (y<=-x)Условие 3 (y>=x*x-2)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСнет———нетDдададапринадлежитдаЕданет——нетFданет——нетGдаданетне принадлежитдаНнет———нет 2) Возможная доработка (Паскаль, разбиение области на две части прямой x = 0):if (y>=x*x─2) and ((y<=x) and (x>=0) or (x<=0) and (y<=-x)) thenwrite('принадлежит')elsewrite('не принадлежит')  Возможная доработка (Си, разбиение на две пересекающиеся области):if (y>=x*x-2 && (y<=x || y<=-x))cout << \"принадлежит\";elsecout << \"не принадлежит\";  Возможная доработка (Бейсик, отбрасывание части от большей области, используются вложенные условия):IF y>=x*x-2 THENIF NOT (y>x AND y>-x) THENPRINT \"принадлежит\"ELSEPRINT \"не принадлежит\"ENDIFELSEPRINT \"не принадлежит\"ENDIF  Обратите внимание, что вариантов доработки может быть достаточно много, но обычно правильное описание заштрихованных областей в них представляет собой или объединение двух (или более) возможно пересекающихся областей, или исключение одной области из другой. При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведенном решении на языке Паскаль одно из условий (x >= 0) или (x <= 0) может быть строгим). Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:20.605112",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y — действительные числа) и определяется принадлежность этой точки заданной заштрихованной области (включая границы). Программист торопился и написал программу неправильно. ПаскальБейсикvar x,y: real;beginreadln(x,y);if y<=x thenif y<=─x thenif y>=x*x─2 thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, yIF y<=x THENIF y<=-x THENIF y>=x*x-2 THENPRINT \"принадлежит\"ELSEPRINT \"не принадлежит\"ENDIFENDIFENDIFENDСи++Алгоритмическийint main(void){float x,y;cin >> x >> y;if (y<=x)if (y<=-x)if (y>=x*x-2)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алг нач вещ x,y ввод x,y если y<=x то    если y<=─x то        если y>=x*x─2 то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx,y = float(input())if y<=x:    if y<=-x:        if y>=x*x-2:            print(\"принадлежит\")        else:            print(\"не принадлежит\")   Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (y<=x)Условие 2 (y<=-x)Условие 3 (y>=x*x-2)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body943118\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (<i>x</i>, <i>y</i> — действительные числа) и определяется принадлежность этой точки заданной заштрихованной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"1\" cellpadding=\"5\" cellspacing=\"0\" width=\"85%\"><tr align=\"center\" valign=\"top\"><th width=\"33%\">Паскаль</th><th width=\"33%\">Бейсик</th></tr><tr valign=\"top\"><td><p><div class=\"source_code lang_pascal\"><font face=\"courier\">var x,y: real;<p>begin<p>readln(x,y);<p>if y&lt;=x then<p>if y&lt;=─x then<p>if y&gt;=x*x─2 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></div></p></td><td><div class=\"source_code lang_basic\"><font face=\"courier\">INPUT x, y<p class=\"left_margin\">IF y&lt;=x THEN<p class=\"left_margin\">IF y&lt;=-x THEN<p class=\"left_margin\">IF y&gt;=x*x-2 THEN<p class=\"left_margin\">PRINT \"принадлежит\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"не принадлежит\"<p class=\"left_margin\">ENDIF<p class=\"left_margin\">ENDIF<p class=\"left_margin\">ENDIF<p class=\"left_margin\">END</p></p></p></p></p></p></p></p></p></p></font></div></td><p></p></tr><p><th width=\"34%\">Си++</th><th width=\"34%\">Алгоритмический</th><p><tr><p><td><div class=\"source_code lang_c\"><font face=\"courier\">int main(void)<p>{float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&lt;=x)<p>if (y&lt;=-x)<p>if (y&gt;=x*x-2)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></font></div></td><p><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если y&lt;=x то<p>    если y&lt;=─x то<p>        если y&gt;=x*x─2 то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></p></p></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=x:<p>    if y&lt;=-x:<p>        if y&gt;=x*x-2:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></p></table><p> </p></p></center><p> </p><p align=\"center\"><img src=\"/get_file?id=2494\"/></p><p> Последовательно выполните следующее:<img src=\"/get_file?id=5946\" style=\"float:right;margin:10px\" width=\"200px;\"/><p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y&lt;=x)</p></td><td>Условие 2 <p class=\"left_margin\">(y&lt;=-x)</p></td><td>Условие 3 <p class=\"left_margin\">(y&gt;=x*x-2)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысл) Элементы ответа:1) ОбластьУсловие 1 (y<=x)Условие 2 (y<=-x)Условие 3 (y>=x*x-2)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСнет———нетDдададапринадлежитдаЕданет——нетFданет——нетGдаданетне принадлежитдаНнет———нет 2) Возможная доработка (Паскаль, разбиение области на две части прямой x = 0):if (y>=x*x─2) and ((y<=x) and (x>=0) or (x<=0) and (y<=-x)) thenwrite('принадлежит')elsewrite('не принадлежит')  Возможная доработка (Си, разбиение на две пересекающиеся области):if (y>=x*x-2 && (y<=x || y<=-x))cout << \"принадлежит\";elsecout << \"не принадлежит\";  Возможная доработка (Бейсик, отбрасывание части от большей области, используются вложенные условия):IF y>=x*x-2 THENIF NOT (y>x AND y>-x) THENPRINT \"принадлежит\"ELSEPRINT \"не принадлежит\"ENDIFELSEPRINT \"не принадлежит\"ENDIF  Обратите внимание, что вариантов доработки может быть достаточно много, но обычно правильное описание заштрихованных областей в них представляет собой или объединение двух (или более) возможно пересекающихся областей, или исключение одной области из другой. При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведенном решении на языке Паскаль одно из условий (x >= 0) или (x <= 0) может быть строгим). Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol2802\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысл)<p> Элементы ответа:<p class=\"left_margin\">1) <p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y&lt;=x)</p></td><td>Условие 2 <p class=\"left_margin\">(y&lt;=-x)</p></td><td>Условие 3 <p class=\"left_margin\">(y&gt;=x*x-2)</p></td><td>Программа выведет</td><td>Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>G</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2) Возможная доработка (Паскаль, разбиение области на две части прямой <i>x</i> = 0):<p><font face=\"courier\">if (y&gt;=x*x─2) and ((y&lt;=x) and (x&gt;=0) or (x&lt;=0) and (y&lt;=-x)) <p>then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></p></font><p> </p><p> Возможная доработка (Си, разбиение на две пересекающиеся области):<p><font face=\"courier\">if (y&gt;=x*x-2 &amp;&amp; (y&lt;=x || y&lt;=-x))<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";</p></p></p></font><p> </p><p> Возможная доработка (Бейсик, отбрасывание части от большей области, используются вложенные условия):<p><font face=\"courier\">IF y&gt;=x*x-2 THEN<p class=\"left_margin\">IF NOT (y&gt;x AND y&gt;-x) THEN<p class=\"left_margin\">PRINT \"принадлежит\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"не принадлежит\"<p class=\"left_margin\">ENDIF<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"не принадлежит\"<p class=\"left_margin\">ENDIF</p></p></p></p></p></p></p></p></font><p> </p><p> Обратите внимание, что вариантов доработки может быть достаточно много, но обычно правильное описание заштрихованных областей в них представляет собой или объединение двух (или более) возможно пересекающихся областей, или исключение одной области из другой.<p> При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведенном решении на языке Паскаль одно из условий (<i>x</i> &gt;= 0) или (<i>x</i> &lt;= 0) может быть строгим).<p> Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "2802"
        },
        {
            "answer": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (x*x+y*y >= 4)Условие 2 (у >= −2)Условие 3 (у <= x)Программа выведетОбласть обрабатывается верноAнет———нетВдаданетне принадлежитдаСдададапринадлежитнетDнет———нетЕдададапринадлежитнетFдададапринадлежитдаGданет——нетНдаданетне принадлежитда 2.\tВозможная доработка (Паскаль):if (х * х + у * у >= 4) and (у >= −2) and (у <= х) and (х <= 0) then write('принадлежит ') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:13.343718",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х,у: real;beginreadln(x,y);if x*x+y*y >= 4 thenif у >= −2 thenif у <= x thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT x, у IF x*x+y*y >= 4 THEN IF у >= −2 THEN IF у <= x THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){ float x, у;cin >> x >> y ;if (x*x+y*y >= 4)if (у >= −2)if (у <= x)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод х, уесли x*x+y*y >= 4 тоесли у >= −2 тоесли у <= x товывод 1 принадлежит'иначевывод 1 не принадлежит'всевсевсеконPythonx,y = float(input())if x*x+y*y >= 4:    if у >= −2:        if у <= x:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (x*x+y*y >= 4)Условие 2 (у >= −2)Условие 3 (у <= x)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942321\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (<i>х, у</i> — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p> </p><center><p><img src=\"/get_file?id=3608\" style=\"float:right;margin:10px\"/><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><p><div class=\"source_code lang_pascal\"><p><font face=\"courier\">var х,у: real;<p>begin<p>readln(x,y);<p>if x*x+y*y &gt;= 4 then<p>if у &gt;= −2 then<p>if у &lt;= x then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></p></div></p></td><td><div class=\"source_code lang_basic\"><font face=\"courier\"><p> INPUT x, у<p> IF x*x+y*y &gt;= 4 THEN<p> IF у &gt;= −2 THEN<p> IF у &lt;= x THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"courier\">int main(void)<p>{ float x, у;<p>cin &gt;&gt; x &gt;&gt; y ;<p>if (x*x+y*y &gt;= 4)<p>if (у &gt;= −2)<p>if (у &lt;= x)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"courier\">алг<p>нач<p>вещ х, у<p>ввод х, у<p>если x*x+y*y &gt;= 4 то<p>если у &gt;= −2 то<p>если у &lt;= x то<p>вывод 1 принадлежит'<p>иначе<p>вывод 1 не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if x*x+y*y &gt;= 4:<p>    if у &gt;= −2:<p>        if у &lt;= x:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></p></center><p> Последовательно выполните следующее:<img src=\"/get_file?id=5947\" style=\"float:right;margin-left:10px\" width=\"250px;\"/><p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(x*x+y*y &gt;= 4)</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= −2)</p></td><td>Условие 3 <p class=\"left_margin\">(у &lt;= x)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (x*x+y*y >= 4)Условие 2 (у >= −2)Условие 3 (у <= x)Программа выведетОбласть обрабатывается верноAнет———нетВдаданетне принадлежитдаСдададапринадлежитнетDнет———нетЕдададапринадлежитнетFдададапринадлежитдаGданет——нетНдаданетне принадлежитда 2.\tВозможная доработка (Паскаль):if (х * х + у * у >= 4) and (у >= −2) and (у <= х) and (х <= 0) then write('принадлежит ') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3597\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.\t<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(x*x+y*y &gt;= 4)</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= −2)</p></td><td>Условие 3 <p class=\"left_margin\">(у &lt;= x)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>С</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>D</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>G</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr></table><p> </p><p class=\"left_margin\">2.\tВозможная доработка (Паскаль):<p><font face=\"courier\">if (х * х + у * у &gt;= 4) and (у &gt;= −2) and (у &lt;= х) and (х &lt;= 0) then <p>write('принадлежит ') else<p>write('не принадлежит') </p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3597"
        },
        {
            "answer": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (у <= 2 * х * х)Условие 2 (x >= −1)Условие 3 (у >= 1)Программа выведетОбласть обрабатывается верноAданет——нетВнет———нетСдададапринадлежитнетDдаданетне принадлежитдаЕдаданетне принадлежитдаFдаданетне принадлежитдаGдададапринадлежитдаНнет———нет 2.\tВозможная доработка (Паскаль):if (у <= 2 * х * х) and (х >= −1) and (у >= 1) and (х < 0) then write('принадлежит') elsewrite('не принадлежит')(могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:21.100997",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х, у: real;beginreadln(х, у) ;if у <= 2 * х * х thenif х >= −1 thenif у >= 1 thenwrite('принадлежит ')elsewrite('не принадлежит')end.INPUT x, y IF у <= 2 * x * x THEN IF x >= -1 THEN IF у >= 1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main (void){ float x, y;cin >> x >> y;if (y <= 2 * x * x)if (x >= -1)if (У >= 1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод х, уесли у <= 2 * х * х тоесли х >= -1 тоесли у >= 1 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input())if у <= 2 * x * x:    if x >= -1:        if у >= 1:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (у <= 2 * х * х)Условие 2 (x >= −1)Условие 3 (у >= 1)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942317\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=7737\" style=\"float:right;margin:10px\" width=\"270\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х, у: real;<p>begin<p>readln(х, у) ;<p>if у &lt;= 2 * х * х then<p>if х &gt;= −1 then<p>if у &gt;= 1 then<p>write('принадлежит ')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, y<p> IF у &lt;= 2 * x * x THEN<p> IF x &gt;= -1 THEN<p> IF у &gt;= 1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main (void)<p>{ float x, y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y &lt;= 2 * x * x)<p>if (x &gt;= -1)<p>if (У &gt;= 1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, у<p>ввод х, у<p>если у &lt;= 2 * х * х то<p>если х &gt;= -1 то<p>если у &gt;= 1 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if у &lt;= 2 * x * x:<p>    if x &gt;= -1:<p>        if у &gt;= 1:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее:<img src=\"/get_file?id=7737\" style=\"float:right;margin-left:10px\" width=\"270px;\"/><p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &lt;= 2 * х * х)</p></td><td>Условие 2 <p class=\"left_margin\">(x &gt;= −1)</p></td><td>Условие 3 <p class=\"left_margin\">(у &gt;= 1)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (у <= 2 * х * х)Условие 2 (x >= −1)Условие 3 (у >= 1)Программа выведетОбласть обрабатывается верноAданет——нетВнет———нетСдададапринадлежитнетDдаданетне принадлежитдаЕдаданетне принадлежитдаFдаданетне принадлежитдаGдададапринадлежитдаНнет———нет 2.\tВозможная доработка (Паскаль):if (у <= 2 * х * х) and (х >= −1) and (у >= 1) and (х < 0) then write('принадлежит') elsewrite('не принадлежит')(могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3601\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.\t<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &lt;= 2 * х * х)</p></td><td>Условие 2 <p class=\"left_margin\">(x &gt;= −1)</p></td><td>Условие 3 <p class=\"left_margin\">(у &gt;= 1)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>G</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2.\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (у &lt;= 2 * х * х) and (х &gt;= −1) and (у &gt;= 1) and (х &lt; 0) then <p>write('принадлежит') <p>else<p>write('не принадлежит')</p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3601"
        },
        {
            "answer": "Решение.Элементы ответа:1.ОбластьУсловие 1 (у <= sin(x))Условие 2 (у >= 1 − x)Условие 3 (у >= 0)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСдададапринадлежитдаDданет——нетЕданет——нетFдададапринадлежитнетGдаданетне принадлежитдаНнет———нет 2.\tВозможная доработка (Паскаль):if (у <= sin(x)) and (у >= 1 - х) and (у >= 0) and (х <= pi) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:31.101393",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х, у: real;beginreadln(x, у);if у <= sin(x) thenif у >= 1 − x thenif у >= 0 thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, у IF у <= SIN(x) THEN IF у >= 1 − x THEN IF у >= 0 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){float x, у;cin >> x >> y;if (y <= sin(x))if (у >= 1 − x)if (y >= 0)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод X, уесли у <= sin (х) тоесли у >= 1 − х тоесли у >= 0 товывод ' принадлежит 'иначевывод 'не принадлежит'всевсевсеконPythonx = float(input())y = float(input())if у <= sin(x):    if у >= 1 − x:        if у >= 0:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)  ОбластьУсловие 1 (у <= sin(x))Условие 2 (у >= 1 − x)Условие 3(у >= 0)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942313\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (<i>х, у</i> — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p> </p><center><p><img src=\"/get_file?id=7747\" style=\"float:right;margin:5px\"/><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><p><div class=\"source_code lang_pascal\"><p>var х, у: real;<p>begin<p>readln(x, у);<p>if у &lt;= sin(x) then<p>if у &gt;= 1 − x then<p>if у &gt;= 0 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></p></div></p></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF у &lt;= SIN(x) THEN<p> IF у &gt;= 1 − x THEN<p> IF у &gt;= 0 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main(void)<p>{<p>float x, у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y &lt;= sin(x))<p>if (у &gt;= 1 − x)<p>if (y &gt;= 0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, у<p>ввод X, у<p>если у &lt;= sin (х) то<p>если у &gt;= 1 − х то<p>если у &gt;= 0 то<p>вывод ' принадлежит '<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>y = float(input())<p>if у &lt;= sin(x):<p>    if у &gt;= 1 − x:<p>        if у &gt;= 0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></p></center><p> Последовательно выполните следующее:<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p align=\"center\"><img src=\"/get_file?id=7748\"/></p><p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &lt;= sin(x))</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= 1 − x)</p></td><td>Условие 3<p class=\"left_margin\">(у &gt;= 0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.ОбластьУсловие 1 (у <= sin(x))Условие 2 (у >= 1 − x)Условие 3 (у >= 0)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСдададапринадлежитдаDданет——нетЕданет——нетFдададапринадлежитнетGдаданетне принадлежитдаНнет———нет 2.\tВозможная доработка (Паскаль):if (у <= sin(x)) and (у >= 1 - х) and (у >= 0) and (х <= pi) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3605\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &lt;= sin(x))</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= 1 − x)</p></td><td>Условие 3 <p class=\"left_margin\">(у &gt;= 0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>D</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Е</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>G</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2.\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (у &lt;= sin(x)) and (у &gt;= 1 - х) and (у &gt;= 0) and (х &lt;= pi) then <p>write('принадлежит') <p>else<p>write('не принадлежит') </p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3605"
        },
        {
            "answer": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (у >= −х*х)Условие 2 (у >= −х−2)Условие 3 (у <= 0)Программа выведетОбласть обрабатывается верноAданет——нетВданет——нетСдаданетне принадлежитдаDдададапринадлежитнетЕнет———нетFдададапринадлежитдаGнет———нетНнет———нет 2.\tВозможная доработка (Паскаль):if (у >= −х * х) and (у >= −х − 2) and (у <= 0) and (х <= 0) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:21.651577",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х, у: real;beginreadln(х, у) ;if у >= −х * х thenif у >= −х − 2 thenif у <= 0 thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, у IF у >= -x * x THEN IF у >= -x - 2 THEN IF у <= 0 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){ float х, у;cin >> x >> y;if (y >= -x * x)if (y >= -x - 2)if (y <= 0)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод х, уесли у >= -х * х тоесли y >= -х - 2 тоесли у <= 0 товывод 'принадлежит'иначевывод 'не принадлежит' все все все конPythonx,y = float(input())if у >= -x * x:    if у >= -x - 2:        if у <= 0:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (у >= −х*х)Условие 2 (у >= −х−2)Условие 3 (у <= 0)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942309\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (<i>х, у</i> — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=7738\" style=\"float:right;margin:10px\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><font face=\"Courier\"><div class=\"source_code lang_pascal\">var х, у: real;<p>begin<p>readln(х, у) ;<p>if у &gt;= −х * х then<p>if у &gt;= −х − 2 then<p>if у &lt;= 0 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></div></font></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF у &gt;= -x * x THEN<p> IF у &gt;= -x - 2 THEN<p> IF у &lt;= 0 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main(void)<p>{ <p>float х, у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y &gt;= -x * x)<p>if (y &gt;= -x - 2)<p>if (y &lt;= 0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, у<p>ввод х, у<p>если у &gt;= -х * х то<p>если y &gt;= -х - 2 то<p>если у &lt;= 0 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит' <p>все <p>все <p>все <p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if у &gt;= -x * x:<p>    if у &gt;= -x - 2:<p>        if у &lt;= 0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее:<img src=\"/get_file?id=7738\" style=\"float:right;margin:10px\" width=\"200px;\"/><p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &gt;= −х*х)</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= −х−2)</p></td><td>Условие 3 <p class=\"left_margin\">(у &lt;= 0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (у >= −х*х)Условие 2 (у >= −х−2)Условие 3 (у <= 0)Программа выведетОбласть обрабатывается верноAданет——нетВданет——нетСдаданетне принадлежитдаDдададапринадлежитнетЕнет———нетFдададапринадлежитдаGнет———нетНнет———нет 2.\tВозможная доработка (Паскаль):if (у >= −х * х) and (у >= −х − 2) and (у <= 0) and (х <= 0) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3609\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.\t<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &gt;= −х*х)</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= −х−2)</p></td><td>Условие 3 <p class=\"left_margin\">(у &lt;= 0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>Е</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2.\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (у &gt;= −х * х) and (у &gt;= −х − 2) and (у &lt;= 0) and (х &lt;= 0) then <p>write('принадлежит') <p>else<p>write('не принадлежит') </p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3609"
        },
        {
            "answer": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (x <= у * у)Условие 2 (x >= 0)Условие 3 (y <= 1)Программа выведетОбласть обрабатывается верноAданет——нетВдаданетне принадлежитдаСнет———нетDдададапринадлежитдаЕданет——нетFдададапринадлежитнетGнет———нетНнет———нет 2.\tВозможная доработка (Паскаль):if (х <= у * у) and (х >= 0) and (у <= 1) and {у >= 0) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:22.118772",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х, у: real;beginreadln(х, у) ;if х <= у * у thenif х >= 0 thenif у <= 1 thenwrite('принадлежит')elsewrite{'не принадлежит')end.INPUT x, у IF x <= у * y THEN IF x >= 0 THEN IF у <= 1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){ float х, у;cin >> x >> у;if (x <= у * у)if (x >= 0)if (y <= 1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод х, уесли х <= у * у тоесли х >= 0 тоесли у <= 1 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input())if x <= у * y:    if x >= 0:        if у <= 1:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (x <= у * у)Условие 2 (x >= 0)Условие 3 (y <= 1)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942305\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (<i>х, у</i> — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=3612\" style=\"float:right;margin:10px\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х, у: real;<p>begin<p>readln(х, у) ;<p>if х &lt;= у * у then<p>if х &gt;= 0 then<p>if у &lt;= 1 then<p>write('принадлежит')<p>else<p>write{'не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF x &lt;= у * y THEN<p> IF x &gt;= 0 THEN<p> IF у &lt;= 1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main(void)<p>{ float х, у;<p>cin &gt;&gt; x &gt;&gt; у;<p>if (x &lt;= у * у)<p>if (x &gt;= 0)<p>if (y &lt;= 1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, у<p>ввод х, у<p>если х &lt;= у * у то<p>если х &gt;= 0 то<p>если у &lt;= 1 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if x &lt;= у * y:<p>    if x &gt;= 0:<p>        if у &lt;= 1:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее:<img src=\"/get_file?id=5953\" style=\"float:right;margin-left:10px\"/><p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(x &lt;= у * у)</p></td><td>Условие 2 <p class=\"left_margin\">(x &gt;= 0)</p></td><td>Условие 3 <p class=\"left_margin\">(y &lt;= 1)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (x <= у * у)Условие 2 (x >= 0)Условие 3 (y <= 1)Программа выведетОбласть обрабатывается верноAданет——нетВдаданетне принадлежитдаСнет———нетDдададапринадлежитдаЕданет——нетFдададапринадлежитнетGнет———нетНнет———нет 2.\tВозможная доработка (Паскаль):if (х <= у * у) and (х >= 0) and (у <= 1) and {у >= 0) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3613\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.\t<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(x &lt;= у * у)</p></td><td>Условие 2 <p class=\"left_margin\">(x &gt;= 0)</p></td><td>Условие 3 <p class=\"left_margin\">(y &lt;= 1)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>С</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2.\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (х &lt;= у * у) and (х &gt;= 0) and (у &lt;= 1) and {у &gt;= 0) then <p>write('принадлежит') <p>else<p>write('не принадлежит') </p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3613"
        },
        {
            "answer": "Решение.Элементы ответа:1)\tОбластьУсловие 1 (у <= sin(x))Условие 2 (у >= x − 1)Условие 3(у >= 0)Программа выведетОбласть обрабатывается верноAдададапринадлежитнетВнет———нетСдададапринадлежитдаDданет——нетЕнет———нетFнет———нетGдаданетне принадлежитдаНданет——нет2)\tВозможная доработка (Паскаль):if (у <= sin(x)) and (у >= х − 1) and (у >= 0) and (х >= 0) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:31.559081",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х, у: real;beginreadln(х, у);if у <= sin(x) thenif у >= х - 1 thenif у >= 0 thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x/ у IF у <= SIN (x) THEN IF у >= x - 1 THEN IF у >= 0 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){ float x, y;cin >> x >> y;if (y <= sin (x) )if (y >= x - 1)if (y >= 0)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, y ВВОД x/yесли у <= sin(x) тоесли у >= х - 1 тоесли у >= 0 товыв од ' принадлежит'иначевывод ' не принадлежит'всевсевсеконPythonx,y = float(input().split())if у <= sin(x):    if у >= х - 1:        if у >= 0:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее:1. Перерисуйте и заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)  ОбластьУсловие 1 (у <= sin(x))Условие 2 (у >= x − 1)Условие 3(у >= 0)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942301\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (<i>х, у</i> — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=11904\" style=\"float:right;margin:10px\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х, у: real;<p>begin<p>readln(х, у);<p>if у &lt;= sin(x) then<p>if у &gt;= х - 1 then<p>if у &gt;= 0 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x/ у<p> IF у &lt;= SIN (x) THEN<p> IF у &gt;= x - 1 THEN<p> IF у &gt;= 0 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main(void)<p>{ float x, y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y &lt;= sin (x) )<p>if (y &gt;= x - 1)<p>if (y &gt;= 0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, y<p> ВВОД x/y<p>если у &lt;= sin(x) то<p>если у &gt;= х - 1 то<p>если у &gt;= 0 то<p>выв од ' принадлежит'<p>иначе<p>вывод ' не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input().split())<p>if у &lt;= sin(x):<p>    if у &gt;= х - 1:<p>        if у &gt;= 0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее:<p class=\"left_margin\">1. Перерисуйте и заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p align=\"center\"><img src=\"/get_file?id=7734\"/></p><p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &lt;= sin(x))</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= x − 1)</p></td><td>Условие 3<p class=\"left_margin\">(у &gt;= 0)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1)\tОбластьУсловие 1 (у <= sin(x))Условие 2 (у >= x − 1)Условие 3(у >= 0)Программа выведетОбласть обрабатывается верноAдададапринадлежитнетВнет———нетСдададапринадлежитдаDданет——нетЕнет———нетFнет———нетGдаданетне принадлежитдаНданет——нет2)\tВозможная доработка (Паскаль):if (у <= sin(x)) and (у >= х − 1) and (у >= 0) and (х >= 0) then write('принадлежит') elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3617\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1)\t<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у &lt;= sin(x))</p></td><td>Условие 2 <p class=\"left_margin\">(у &gt;= x − 1)</p></td><td>Условие 3<p class=\"left_margin\">(у &gt;= 0)</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>D</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Е</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>G</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Н</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr></table><p class=\"left_margin\">2)\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (у &lt;= sin(x)) and (у &gt;= х − 1) and (у &gt;= 0) and (х &gt;= 0) then <p>write('принадлежит') <p>else<p>write('не принадлежит') </p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3617"
        },
        {
            "answer": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (y <= -x * x)Условие 2 (у <= 0)Условие 3 (у >= -х - 2)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСнет———нетDдададапринадлежитдаЕдададапринадлежитдаFнет———нетGнет———нетНдаданетне принадлежитда 2.\tВозможная доработка (Паскаль):if (х <= 0) and (у >= −х − 2) and (у <= 0) or (х >= 0) and (у >= −х − 2) and (у <= −х * х) then write('принадлежит') elsewrite('не принадлежит')илиif (у >= −х − 2) and ( (х <= 0) and (у <= 0) or (у <= −х * х) ) then write('принадлежит') elsewrite('не принадлежит')  СИ++void main (){float x,y;cin>>x>>y;if (у >= −х − 2) && ( (х <= 0) && (у <= 0) || (у <= −х * х) )cout<<\"prinadlezhit\";else cout<<\"ne prinadlezhit\";}(могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:22.565317",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно. ПаскальБейсикvar х, у: real;beginreadln(х, у);if у <= -х * х thenif у <= 0 thenif у >= -х - 2 thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, у IF у <= -x * x THEN IF у <= 0 THEN IF у >= -x - 2 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF  ENDIF ENDСи++Алгоритмический языкint main (void){ float x, y;cin >> x >> y;if (y <= -x * x)if (y <= 0)if (y >= -x - 2)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод х, уесли у <= -х * х тоесли у <= 0 тоесли у >= -х - 2 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input())if у <= -x * x:    if у <= 0:        if у >= -x - 2:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (y <= -x * x)Условие 2 (у <= 0)Условие 3 (у >= -х - 2)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942297\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области. Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=3614\" style=\"float:right;margin:10px\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х, у: real;<p>begin<p>readln(х, у);<p>if у &lt;= -х * х then<p>if у &lt;= 0 then<p>if у &gt;= -х - 2 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF у &lt;= -x * x THEN<p> IF у &lt;= 0 THEN<p> IF у &gt;= -x - 2 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF <p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main (void)<p>{ float x, y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y &lt;= -x * x)<p>if (y &lt;= 0)<p>if (y &gt;= -x - 2)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, у<p>ввод х, у<p>если у &lt;= -х * х то<p>если у &lt;= 0 то<p>если у &gt;= -х - 2 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if у &lt;= -x * x:<p>    if у &lt;= 0:<p>        if у &gt;= -x - 2:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"/get_file?id=5955\" style=\"float:right;margin-left:10px\"/><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y &lt;= -x * x)</p></td><td>Условие 2 <p class=\"left_margin\">(у &lt;= 0)</p></td><td>Условие 3 <p class=\"left_margin\">(у &gt;= -х - 2)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.\tОбластьУсловие 1 (y <= -x * x)Условие 2 (у <= 0)Условие 3 (у >= -х - 2)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСнет———нетDдададапринадлежитдаЕдададапринадлежитдаFнет———нетGнет———нетНдаданетне принадлежитда 2.\tВозможная доработка (Паскаль):if (х <= 0) and (у >= −х − 2) and (у <= 0) or (х >= 0) and (у >= −х − 2) and (у <= −х * х) then write('принадлежит') elsewrite('не принадлежит')илиif (у >= −х − 2) and ( (х <= 0) and (у <= 0) or (у <= −х * х) ) then write('принадлежит') elsewrite('не принадлежит')  СИ++void main (){float x,y;cin>>x>>y;if (у >= −х − 2) && ( (х <= 0) && (у <= 0) || (у <= −х * х) )cout<<\"prinadlezhit\";else cout<<\"ne prinadlezhit\";}(могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3621\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.\t<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y &lt;= -x * x)</p></td><td>Условие 2 <p class=\"left_margin\">(у &lt;= 0)</p></td><td>Условие 3 <p class=\"left_margin\">(у &gt;= -х - 2)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>F</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr></table><p> </p><p class=\"left_margin\">2.\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (х &lt;= 0) and (у &gt;= −х − 2) and (у &lt;= 0) or (х &gt;= 0) and (у &gt;= −х − 2) and (у &lt;= −х * х) then write('принадлежит') else<p>write('не принадлежит')</p></font><p>или<p><font face=\"Courier\">if (у &gt;= −х − 2) and ( (х &lt;= 0) and (у &lt;= 0) or (у &lt;= −х * х) ) then <p>write('принадлежит') <p>else<p>write('не принадлежит') </p></p></p></font><p> </p><p class=\"left_margin\">СИ++<p><font face=\"Courier\">void main ()<p>{<p>float x,y;<p>cin&gt;&gt;x&gt;&gt;y;<p>if (у &gt;= −х − 2) &amp;&amp; ( (х &lt;= 0) &amp;&amp; (у &lt;= 0) || (у &lt;= −х * х) )<p>cout&lt;&lt;\"prinadlezhit\";<p>else cout&lt;&lt;\"ne prinadlezhit\";<p>}</p></p></p></p></p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3621"
        },
        {
            "answer": "Решение.ОбластьУсловие 1 (y<=2+x)Условие 2 (y>=0)Условие 3 (y>=x*x)Программа выведетОбласть обрабатывается верноAнет———нетBнет———нетCдаданетне принадлежитнетDдададапринадлежитдаEнет———нетFдаданетне принадлежитдаGданет——нетHданет——нет Возможная доработка (Паскаль):if ((x<0) and (y<=2+x) and (y>=0)) or ((x>=0) and (y>=x*x) and (y<=2+x)) thenwrite('принадлежит') elsewrite('не принадлежит')  Возможны и другие способы доработки. Пример: if (y<=2+x) and (y>=0) and ((x<0) or (y>=x*x)) thenwrite('принадлежит') elsewrite('не принадлежит')",
            "parsed": "2019-04-29 21:10:22.959974",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры\tсчитываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. ПаскальБейсикvar x,y: real;\tbeginif y<=2+x thenif y>=0 thenif y>=x*x thenwrite('принадлежит') elsewrite('не принадлежит') end.INPUT x, y IF y<=2+x THEN IF y>=0 THEN IF y>=x*x THEN  PRINT \"принадлежит\"  ELSE PRINT \"не принадлежит\" ENDIF  ENDIF  ENDIF  ENDСи++Алгоритмический языкint main(void){ float x, y; cin >> x >> y; if (y<=2+x) if (y>=0) if (y>=x*x)cout << \"принадлежит\"; elsecout << \"не принадлежит\";}начвещ x,y ввод x,y если y<=2+x то если y>=0 то если y>=x*x товывод 'принадлежит'иначевывод 'не принадлежит' все все всеконPythonx,y = float(input())if y<=2+x:    if y>=0:        if y>=x*x:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно\tвыполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (y<=2+x)Условие 2 (y>=0)Условие 3 (y>=x*x)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942293\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры\tсчитываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=3625\" style=\"float:right;margin:10px\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\">var x,y: real;\t<p>begin<p>if y&lt;=2+x then<p>if y&gt;=0 then<p>if y&gt;=x*x then<p>write('принадлежит') <p>else<p>write('не принадлежит') <p>end.</p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_basic\">INPUT x, y<p> IF y&lt;=2+x THEN<p> IF y&gt;=0 THEN<p> IF y&gt;=x*x THEN <p> PRINT \"принадлежит\" <p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF <p> ENDIF <p> ENDIF <p> END</p></p></p></p></p></p></p></p></p></p></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\">int main(void){ <p>float x, y; <p>cin &gt;&gt; x &gt;&gt; y; <p>if (y&lt;=2+x) <p>if (y&gt;=0) <p>if (y&gt;=x*x)<p>cout &lt;&lt; \"принадлежит\"; <p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>нач<p>вещ x,y <p>ввод x,y <p>если y&lt;=2+x то <p>если y&gt;=0 то <p>если y&gt;=x*x то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит' <p>все <p>все <p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=2+x:<p>    if y&gt;=0:<p>        if y&gt;=x*x:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><img src=\"/get_file?id=3626\" style=\"float:right;margin:10px\"/><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (y&lt;=2+x)</td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&gt;=x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.ОбластьУсловие 1 (y<=2+x)Условие 2 (y>=0)Условие 3 (y>=x*x)Программа выведетОбласть обрабатывается верноAнет———нетBнет———нетCдаданетне принадлежитнетDдададапринадлежитдаEнет———нетFдаданетне принадлежитдаGданет——нетHданет——нет Возможная доработка (Паскаль):if ((x<0) and (y<=2+x) and (y>=0)) or ((x>=0) and (y>=x*x) and (y<=2+x)) thenwrite('принадлежит') elsewrite('не принадлежит')  Возможны и другие способы доработки. Пример: if (y<=2+x) and (y>=0) and ((x<0) or (y>=x*x)) thenwrite('принадлежит') elsewrite('не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3625\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (y&lt;=2+x)</td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&gt;=x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>B</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>C</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>E</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>G</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>H</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">Возможная доработка (Паскаль):<p>if ((x&lt;0) and (y&lt;=2+x) and (y&gt;=0)) or ((x&gt;=0) and (y&gt;=x*x) and (y&lt;=2+x)) then<p>write('принадлежит') <p>else<p>write('не принадлежит') <p> </p><p class=\"left_margin\">Возможны и другие способы доработки. Пример: <p>if (y&lt;=2+x) and (y&gt;=0) and ((x&lt;0) or (y&gt;=x*x)) then<p>write('принадлежит') <p>else<p>write('не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3625"
        },
        {
            "answer": "Решение.ОбластьУсловие 1 (y<=x+2)Условие 2 (x< = 0)Условие 3 (x*x+y*y<=25)Программа выведетОбласть обрабатывается верноAнет———нетBнет———нетCДаДаДапринадлежитнетDнет———нетEДаДаДапринадлежитДаFДаДанетне принадлежитДаGнет———нетHданет——нетKДанет——нет Возможная доработка (пример на Паскале):if (x*x+y*y<=25) and (x<=0) and ((y>=x+2) or (y<=0))then write('принадлежит') else write('не принадлежит') Возможны и другие способы доработки",
            "parsed": "2019-04-29 21:10:13.764157",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры\tсчитываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. ПаскальБейсикvar x,y: real; beginreadln(x,y); if y<=x+2 then if x<=0 thenif x*x+y*y<=25 then write('принадлежит') elsewrite('не принадлежит')end.INPUT x, y  IF y<=x+2 THEN  IF x<=0 THEN IF x*x+y*y<=25 THEN  PRINT \"принадлежит\"  ELSE PRINT \"не принадлежит\"  ENDIF  ENDIF  ENDIF  ENDСи++Алгоритмический язык#include <iostream>using namespace std; int main(){ float x,y;cin >> x >> y; if (y<=x+2) if (x<=0)if (x*x+y*y<=25)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ x,y ввод x,y если y<=x+2 то если x<=0 то если x*x+y*y<=25 то вывод 'принадлежит' иначевывод 'не принадлежит'всевсевсеконPythonx = float(input())y = float(input())if y<=x+2:    if x<=0:        if x*x+y*y<=25:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно\tвыполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (y<=2+x)Условие 2 (x<=0)Условие 3 (x*x+y*y<=25)Программа выведетОбласть обрабатывается верноAВСDЕFGНK",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942289\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры\tсчитываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=3627\" style=\"float:right;margin:10px\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var x,y: real; begin<p>readln(x,y); <p>if y&lt;=x+2 then <p>if x&lt;=0 then<p>if x*x+y*y&lt;=25 then <p>write('принадлежит') <p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, y <p> IF y&lt;=x+2 THEN <p> IF x&lt;=0 THEN<p> IF x*x+y*y&lt;=25 THEN <p> PRINT \"принадлежит\" <p> ELSE<p> PRINT \"не принадлежит\" <p> ENDIF <p> ENDIF <p> ENDIF <p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">#include &lt;iostream&gt;<p>using namespace std; <p>int main(){ <p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y; <p>if (y&lt;=x+2) <p>if (x&lt;=0)<p>if (x*x+y*y&lt;=25)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ x,y <p>ввод x,y <p>если y&lt;=x+2 то <p>если x&lt;=0 то <p>если x*x+y*y&lt;=25 то <p>вывод 'принадлежит' <p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></font></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>y = float(input())<p>if y&lt;=x+2:<p>    if x&lt;=0:<p>        if x*x+y*y&lt;=25:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><img src=\"/get_file?id=3628\" style=\"float:right;margin:10px\"/><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (y&lt;=2+x)</td><td>Условие 2 (x&lt;=0)</td><td>Условие 3 (x*x+y*y&lt;=25)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>K</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.ОбластьУсловие 1 (y<=x+2)Условие 2 (x< = 0)Условие 3 (x*x+y*y<=25)Программа выведетОбласть обрабатывается верноAнет———нетBнет———нетCДаДаДапринадлежитнетDнет———нетEДаДаДапринадлежитДаFДаДанетне принадлежитДаGнет———нетHданет——нетKДанет——нет Возможная доработка (пример на Паскале):if (x*x+y*y<=25) and (x<=0) and ((y>=x+2) or (y<=0))then write('принадлежит') else write('не принадлежит') Возможны и другие способы доработки",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3629\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (y&lt;=x+2)</td><td>Условие 2 (x&lt; = 0)</td><td>Условие 3 (x*x+y*y&lt;=25)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>B</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>C</td><td>Да</td><td>Да</td><td>Да</td><td>принадлежит</td><td>нет</td></tr><tr><td>D</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>E</td><td>Да</td><td>Да</td><td>Да</td><td>принадлежит</td><td>Да</td></tr><tr><td>F</td><td>Да</td><td>Да</td><td>нет</td><td>не принадлежит</td><td>Да</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>H</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>K</td><td>Да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">Возможная доработка (пример на Паскале):<p><font face=\"Courier\">if (x*x+y*y&lt;=25) and (x&lt;=0) and ((y&gt;=x+2) or (y&lt;=0))<p>then write('принадлежит') <p>else write('не принадлежит') </p></p></font><p class=\"left_margin\">Возможны и другие способы доработки</p></p></p></p></div>",
            "source": "",
            "task_id": "3629"
        },
        {
            "answer": "Решение.1. ОбластьУсловие 1 (у>=0)Условие 2 (х<=1.57)Условие 3 (y<=sin(x))Программа выведетОбласть обрабатывается верноAдададапринадлежитнетВдаданетне принадлежитдаСнет———нетDнет———нетЕдададапринадлежитдаFданет——нет 2. Возможная доработка (Паскаль):if (у >= 0) and (х <= 1.57) and (у <= sin (х) ) and (х >= 0)then write('принадлежит') else write('не принадлежит') Возможны и другие способы решения.",
            "parsed": "2019-04-29 21:10:31.968364",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области, включая ее границы. Программист торопился и написал программу неправильно. ПаскальБейсикvar х,у: real;beginreadln(х,у);if у>=0 then if х<=1.57 thenif y<=sin(x) thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, у IF y>=0 THEN IF x<=l,57 THEN IF y<=SIN(x) THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмическийint main(void){float x,y;cin >> x >> y;if (y>=0)if (x<=l,57)if (y<=sin(x))cout << \"принадлежит\";elsecout << \"не принадлежит\"; }алг нач вещ x,y ввод x,y если y>=0 то    если x<=1,57 то        если y<=sin(x) то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx,y = float(input())if y>=0:    if x<=1,57:        if y<=sin(x):            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно\tвыполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E и F).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (у>=0)Условие 2 (х<=1.57)Условие 3 (y<=sin(x))Программа выведетОбласть обрабатывается верноAВСDЕF",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942286\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области, включая ее границы. Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><th>Паскаль</th><th>Бейсик</th></tr><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х,у: real;<p>begin<p>readln(х,у);<p>if у&gt;=0 then <p>if х&lt;=1.57 then<p>if y&lt;=sin(x) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF y&gt;=0 THEN<p> IF x&lt;=l,57 THEN<p> IF y&lt;=SIN(x) THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td><p></p></tr><p><tr><th>Си++</th><th>Алгоритмический</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main(void)<p>{float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&gt;=0)<p>if (x&lt;=l,57)<p>if (y&lt;=sin(x))<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\"; <p>}</p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если y&gt;=0 то<p>    если x&lt;=1,57 то<p>        если y&lt;=sin(x) то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&gt;=0:<p>    if x&lt;=1,57:<p>        if y&lt;=sin(x):<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"/get_file?id=7735\" style=\"margin:10px auto;display:block\"/><p> </p><p><img src=\"/get_file?id=5956\" style=\"float:right;margin-left:10px\" width=\"220px;\"/><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E и F).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у&gt;=0)</p></td><td>Условие 2 <p class=\"left_margin\">(х&lt;=1.57)</p></td><td>Условие 3 <p class=\"left_margin\">(y&lt;=sin(x))</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. ОбластьУсловие 1 (у>=0)Условие 2 (х<=1.57)Условие 3 (y<=sin(x))Программа выведетОбласть обрабатывается верноAдададапринадлежитнетВдаданетне принадлежитдаСнет———нетDнет———нетЕдададапринадлежитдаFданет——нет 2. Возможная доработка (Паскаль):if (у >= 0) and (х <= 1.57) and (у <= sin (х) ) and (х >= 0)then write('принадлежит') else write('не принадлежит') Возможны и другие способы решения.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3634\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. <table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у&gt;=0)</p></td><td>Условие 2 <p class=\"left_margin\">(х&lt;=1.57)</p></td><td>Условие 3 <p class=\"left_margin\">(y&lt;=sin(x))</p></td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>В</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>С</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>D</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p><font face=\"Courier\">if (у &gt;= 0) and (х &lt;= 1.57) and (у &lt;= sin (х) ) and (х &gt;= 0)<p>then write('принадлежит') <p>else <p>write('не принадлежит') </p></p></p></font><p class=\"left_margin\">Возможны и другие способы решения.</p></p></p></p></div>",
            "source": "",
            "task_id": "3634"
        },
        {
            "answer": "Решение.1. ОбластьУсловие 1 (у<=0)Условие 2 (у>= −1)Условие 3 (y<=cos (x))Программа выведетОбласть обрабатывается верноAнет———нетВдададапринадлежитнетСдаданетне принадлежитдаDдададапринадлежитдаЕдаданетне принадлежитда 2. Возможная доработка (Паскаль):if (у <= 0) and (у >= −1) and (у <= cos(х)) and (х >= −Pi) and (х <= Pi) then write('принадлежит') else write('не принадлежит') Возможны и другие способы решения.",
            "parsed": "2019-04-29 21:10:32.389457",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, у — действительные числа) и определяет принадлежность точки заштрихованной области, включая ее границы. Программист торопился и написал программу неправильно.  ПаскальБейсикvar х,у: real;beginreadln(х,у);if у<=0 thenif у>= −1 thenif y<=cos (x) thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, у IF y<=0 THEN IF y>= −l THEN IF y<=cos(x) THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмическийint main(void){ float\tx, y;cin >> x >> y;if (y<=\t0)if (У>=\t-1)if (y<=\tcos(x))cout << \"принадлежит\";else\tcout << \"не принадлежит\";} алг нач вещ x,y ввод x,y если y<=0 то    если y>= −l то        если y<=cos(x) то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx,y = float(input())if y<=0:    if y>= −l:        if y<=cos(x):            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно\tвыполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (у<=0)Условие 2 (у>= −1)Условие 3 (y<=cos (x))Программа выведетОбласть обрабатывается верноAВСDЕ",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942287\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, у — действительные числа) и определяет принадлежность точки заштрихованной области, включая ее границы. Программист торопился и написал программу неправильно.<p> </p><p> </p><center><p><table border=\"1\" rules=\"all\"><tr><th>Паскаль</th><th>Бейсик</th></tr><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х,у: real;<p>begin<p>readln(х,у);<p>if у&lt;=0 then<p>if у&gt;= −1 then<p>if y&lt;=cos (x) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF y&lt;=0 THEN<p> IF y&gt;= −l THEN<p> IF y&lt;=cos(x) THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td><p></p></tr><p><tr><th>Си++</th><th>Алгоритмический</th></tr><p><tr><p><td><font face=\"Courier\"><div class=\"source_code lang_c\"><p>int main(void)<p>{ float\tx, y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&lt;=\t0)<p>if (У&gt;=\t-1)<p>if (y&lt;=\tcos(x))<p>cout &lt;&lt; \"принадлежит\";<p>else\t<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></p></div></font></td><p> </p><p><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если y&lt;=0 то<p>    если y&gt;= −l то<p>        если y&lt;=cos(x) то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></p></p></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=0:<p>    if y&gt;= −l:<p>        if y&lt;=cos(x):<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"/get_file?id=7736\" style=\"margin:10px auto;display:block\"/><p> </p><p><img src=\"/get_file?id=5957\" style=\"float:right;margin:10px\" width=\"250px;\"/><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (у&lt;=0)</td><td>Условие 2 (у&gt;= −1)</td><p><td>Условие 3 (y&lt;=cos (x))</td><td>Программа выведет</td><td>Область обрабатывается верно</td></p></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. ОбластьУсловие 1 (у<=0)Условие 2 (у>= −1)Условие 3 (y<=cos (x))Программа выведетОбласть обрабатывается верноAнет———нетВдададапринадлежитнетСдаданетне принадлежитдаDдададапринадлежитдаЕдаданетне принадлежитда 2. Возможная доработка (Паскаль):if (у <= 0) and (у >= −1) and (у <= cos(х)) and (х >= −Pi) and (х <= Pi) then write('принадлежит') else write('не принадлежит') Возможны и другие способы решения.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3635\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. <table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (у&lt;=0)</td><td>Условие 2 (у&gt;= −1)</td><p><td>Условие 3 (y&lt;=cos (x))</td><td>Программа выведет</td><td>Область обрабатывается верно</td></p></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Е</td><p><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></p></tr></table><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p><font face=\"Courier\">if (у &lt;= 0) and (у &gt;= −1) and (у &lt;= cos(х)) and (х &gt;= −Pi) and (х &lt;= Pi) <p>then write('принадлежит') <p>else write('не принадлежит')</p></p></font><p> </p><p class=\"left_margin\">Возможны и другие способы решения.</p></p></p></p></div>",
            "source": "",
            "task_id": "3635"
        },
        {
            "answer": "Решение.1) а = −1, b = 0, x = 0.Значение х может быть не указано. Значение a может быть любым отрицательным числом. Также допустим ответ, что программа работает неправильно при любых отрицательных а и b = 0). 2)\tЛишняя часть:не нужно вводить х с клавиатуры; верно: readln(a, b). Также не нужно задавать переменную x при описании переменных; верно var a,b:real. 3)\tВозможная доработка: readln(a, b);if b = 0 thenif а > 0 thenwrite('х > 0 или х < 0')elsewrite('нет решений') elseif а > 0 thenwrite('х > 0 или х <', −b)elsewrite(−b, '< х < 0 ' );(могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:09:38.124978",
            "question": "Требовалось написать программу, которая решает неравенство «(ах) / (х + b) > 0» относительно х для любого ненулевого числа а и любого неотрицательного числа b и , введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.  БейсикPython INPUT а, b, х IF b = 0 THEN PRINT \"х > 0 или х <0\" ELSE IF а>0 THEN PRINT \"х >0 или х<\",-b  ELSE PRINT -b,\"<х<0\" ENDIF ENDIF END a = int(input())b = int(input())x = int(input())if b == 0:    print(\"x > 0 или x < 0\")else:    if a > 0:        print('x > 0 или x <',-b)    else:        print(-b,'< x <0 ')  ПаскальАлгоритмический языкvar a,b,x: real;beginreadln(a,b,x);if b = 0 thenwrite('x > 0 или x < 0')elseif a > 0 thenwrite('x > 0 или x <',-b)elsewrite(-b,'< x <0 ' ) ;end. алгнач    вещ a,b,x    если b = 0 то         вывод \"x > 0 или x < 0\"    иначе    если a > 0 то         вывод \"x > 0 или x <\",-b    иначе вывод -b,\"< x <0\"    все    всеконСи++#include <iostream>using namespace std;int main(void) { float a,b,x; cin >> a >> b >> x ; if (b==0)cout << \"x>0 или x<0\" << endl; elseif (a > 0)cout << \"x > 0 или x <\" << -b << endl;  elsecout <<  -b << \"< x <0\" << endl;  }   Последовательно выполните три задания:1)\tПриведите пример таких чисел a, b, x, при которых программа неверно решает поставленную задачу.2)\tУкажите, какая часть программы является лишней.3)\tУкажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942281\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая решает неравенство «(ах) / (х + b) &gt; 0» относительно х для любого ненулевого числа <i>а</i> и любого неотрицательного числа <i>b</i> и <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/06/06b5700080969a7e318bacc7c115a705.svg\" style=\"vertical-align:-3pt\"/>, введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT а, b, х<p> IF b = 0 THEN<p> PRINT \"х &gt; 0 или х &lt;0\"<p> ELSE<p> IF а&gt;0 THEN<p> PRINT \"х &gt;0 или х&lt;\",-b <p> ELSE<p> PRINT -b,\"&lt;х&lt;0\"<p> ENDIF<p> ENDIF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = int(input())<p>b = int(input())<p>x = int(input())<p>if b == 0:<p>    print(\"x &gt; 0 или x &lt; 0\")<p>else:<p>    if a &gt; 0:<p>        print('x &gt; 0 или x &lt;',-b)<p>    else:<p>        print(-b,'&lt; x &lt;0 ')<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a,b,x: real;<p>begin<p>readln(a,b,x);<p>if b = 0 then<p>write('x &gt; 0 или x &lt; 0')<p>else<p>if a &gt; 0 then<p>write('x &gt; 0 или x &lt;',-b)<p>else<p>write(-b,'&lt; x &lt;0 ' ) ;<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ a,b,x<p>    если b = 0 то <p>        вывод \"x &gt; 0 или x &lt; 0\"<p>    иначе<p>    если a &gt; 0 то <p>        вывод \"x &gt; 0 или x &lt;\",-b<p>    иначе вывод -b,\"&lt; x &lt;0\"<p>    все<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void) <p>{ float a,b,x; <p>cin &gt;&gt; a &gt;&gt; b &gt;&gt; x ; <p>if (b==0)<p>cout &lt;&lt; \"x&gt;0 или x&lt;0\" &lt;&lt; endl; <p>else<p>if (a &gt; 0)<p>cout &lt;&lt; \"x &gt; 0 или x &lt;\" &lt;&lt; -b &lt;&lt; endl;  <p>else<p>cout &lt;&lt;  -b &lt;&lt; \"&lt; x &lt;0\" &lt;&lt; endl;  <p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните три задания:<p class=\"left_margin\">1)\tПриведите пример таких чисел a, b, x, при которых программа неверно решает поставленную задачу.<p class=\"left_margin\">2)\tУкажите, какая часть программы является лишней.<p class=\"left_margin\">3)\tУкажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) а = −1, b = 0, x = 0.Значение х может быть не указано. Значение a может быть любым отрицательным числом. Также допустим ответ, что программа работает неправильно при любых отрицательных а и b = 0). 2)\tЛишняя часть:не нужно вводить х с клавиатуры; верно: readln(a, b). Также не нужно задавать переменную x при описании переменных; верно var a,b:real. 3)\tВозможная доработка: readln(a, b);if b = 0 thenif а > 0 thenwrite('х > 0 или х < 0')elsewrite('нет решений') elseif а > 0 thenwrite('х > 0 или х <', −b)elsewrite(−b, '< х < 0 ' );(могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3637\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) а = −1, b = 0, x = 0.<p class=\"left_margin\">Значение х может быть не указано. Значение <i>a</i> может быть любым отрицательным числом. Также допустим ответ, что программа работает неправильно при любых отрицательных а и b = 0).<p> </p><p class=\"left_margin\">2)\tЛишняя часть:<p>не нужно вводить х с клавиатуры; верно: readln(a, b). Также не нужно задавать переменную x при описании переменных; верно var a,b:real.<p> </p><p class=\"left_margin\">3)\tВозможная доработка: <p><font face=\"Courier\"><p>readln(a, b);<p>if b = 0 then<p>if а &gt; 0 then<p>write('х &gt; 0 или х &lt; 0')<p>else<p>write('нет решений') <p>else<p>if а &gt; 0 then<p>write('х &gt; 0 или х &lt;', −b)<p>else<p>write(−b, '&lt; х &lt; 0 ' );</p></p></p></p></p></p></p></p></p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3637"
        },
        {
            "answer": "Решение.1) a = 1, b = −1, x = 0.Значение x может быть не указано. Значения а и b могут быть любыми ненулевыми числами с разными знаками. Ошибка программиста состоит в том, что программа работает неправильно при любых ненулевых а и Ь, имеющих разные знаки. 2)\tЛишняя часть:не нужно вводить х с клавиатуры; верно: readln(a, Ь). 3)\tВозможная доработка:readln(а, b); if а = 0 thenif b = 0 then write('любое число')else write('нет решений')elseif b/а > 0 thenwrite('х =', Ь/а, ' или х =', -Ь/а) elseif b = 0 then write('х =0') else write('нет решений');(могут быть и другие способы доработки)",
            "parsed": "2019-04-29 21:09:38.536063",
            "question": "Требовалось написать программу, которая решает уравнение «a |x| = b» относительно х для любых чисел а и b, введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.  БейсикPython INPUT a, b, x IF a = 0 THEN IF b = 0 THEN PRINT \"любое число\" ELSE PRINT \"нет решений\" ENDIF ELSE IF b = 0 THEN PRINT \"x =0\" ELSE PRINT \"x =\",b/a, \"или x =\",-b/a ENDIF ENDIF END a, b, x = float(input())if a == 0:    if b == 0:        print('любое число')    else:        print('нет решений')else:    if b == 0:        print('x = 0')    else:        print('x =', b/a, 'или x =',-b/a)  ПаскальАлгоритмический языкvar a,b,x: real;beginreadln(a,b,x);if a = 0 then    if b = 0 then        write ('любое число')    else        write ('нет решений')else    if b = 0 then        write('x = 0')    else        write('x =',b/a,' или x =',-b/a);end. алгнач    вещ a,b,x    если a = 0 то         если b = 0 то             вывод \"любое число\"        иначе вывод \"нет решений\"        все    иначе        если b = 0 то             вывод \"x = 0\"        иначе            вывод \"x =\", b/a, \"или x =\",-b/a    всеконСи++#include <iostream>using namespace std;int main(void){float a,b,x;cin >> a >> b >> x;if (a==0)if (b==0)cout << \"любое число\";elsecout << \"нет решений\";elseif (b==0)cout << \"x - 0\";elsecout << \"x=\" << b/a << \"или x=\" << -b/a << endl; }   Последовательно выполните три задания:1) Приведите пример таких чисел a, b, x, при которых программа неверно решает поставленную задачу.2) Укажите, какая часть программы является лишней.3) Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942276\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая решает уравнение «a |x| = b» относительно х для любых чисел а и b, введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT a, b, x<p> IF a = 0 THEN<p> IF b = 0 THEN<p> PRINT \"любое число\"<p> ELSE<p> PRINT \"нет решений\"<p> ENDIF<p> ELSE<p> IF b = 0 THEN<p> PRINT \"x =0\"<p> ELSE<p> PRINT \"x =\",b/a, \"или x =\",-b/a<p> ENDIF<p> ENDIF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a, b, x = float(input())<p>if a == 0:<p>    if b == 0:<p>        print('любое число')<p>    else:<p>        print('нет решений')<p>else:<p>    if b == 0:<p>        print('x = 0')<p>    else:<p>        print('x =', b/a, 'или x =',-b/a)<p> </p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a,b,x: real;<p>begin<p>readln(a,b,x);<p>if a = 0 then<p>    if b = 0 then<p>        write ('любое число')<p>    else<p>        write ('нет решений')<p>else<p>    if b = 0 then<p>        write('x = 0')<p>    else<p>        write('x =',b/a,' или x =',-b/a);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ a,b,x<p>    если a = 0 то <p>        если b = 0 то <p>            вывод \"любое число\"<p>        иначе вывод \"нет решений\"<p>        все<p>    иначе<p>        если b = 0 то <p>            вывод \"x = 0\"<p>        иначе<p>            вывод \"x =\", b/a, \"или x =\",-b/a<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void)<p>{float a,b,x;<p>cin &gt;&gt; a &gt;&gt; b &gt;&gt; x;<p>if (a==0)<p>if (b==0)<p>cout &lt;&lt; \"любое число\";<p>else<p>cout &lt;&lt; \"нет решений\";<p>else<p>if (b==0)<p>cout &lt;&lt; \"x - 0\";<p>else<p>cout &lt;&lt; \"x=\" &lt;&lt; b/a &lt;&lt; \"или x=\" &lt;&lt; -b/a &lt;&lt; endl; <p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните три задания:<p class=\"left_margin\">1) Приведите пример таких чисел a, b, x, при которых программа неверно решает поставленную задачу.<p class=\"left_margin\">2) Укажите, какая часть программы является лишней.<p class=\"left_margin\">3) Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) a = 1, b = −1, x = 0.Значение x может быть не указано. Значения а и b могут быть любыми ненулевыми числами с разными знаками. Ошибка программиста состоит в том, что программа работает неправильно при любых ненулевых а и Ь, имеющих разные знаки. 2)\tЛишняя часть:не нужно вводить х с клавиатуры; верно: readln(a, Ь). 3)\tВозможная доработка:readln(а, b); if а = 0 thenif b = 0 then write('любое число')else write('нет решений')elseif b/а > 0 thenwrite('х =', Ь/а, ' или х =', -Ь/а) elseif b = 0 then write('х =0') else write('нет решений');(могут быть и другие способы доработки)",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3640\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) a = 1, b = −1, x = 0.<p class=\"left_margin\">Значение x может быть не указано. Значения а и b могут быть любыми ненулевыми числами с разными знаками. Ошибка программиста состоит в том, что программа работает неправильно при любых ненулевых а и Ь, имеющих разные знаки.<p> </p><p class=\"left_margin\">2)\tЛишняя часть:<p>не нужно вводить х с клавиатуры; верно: readln(a, Ь).<p> </p><p class=\"left_margin\">3)\tВозможная доработка:<p>readln(а, b); if а = 0 then<p>if b = 0 then write('любое число')<p>else write('нет решений')<p>else<p>if b/а &gt; 0 then<p>write('х =', Ь/а, ' или х =', -Ь/а) <p>else<p>if b = 0 then <p>write('х =0') <p>else <p>write('нет решений');<p class=\"left_margin\">(могут быть и другие способы доработки)</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3640"
        },
        {
            "answer": "Решение.1)\tОбластьУсловие 1 (у<=x*x)Условие 2 (x<=1.5)Условие 3 (y>=0)Программа выведетОбласть обрабатывается верноAдададапринадлежитнетВнет———нетСданет——нетDдададапринадлежитдаЕдаданетне принадлежитдаFдаданетне принадлежитда 2)\tВозможная доработка (Паскаль):if (у < = х*х) and (х < = 1.5) and (у > = 0) and (х > = 0) then write('принадлежит ') elsewrite('не принадлежит'); (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:23.421096",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области, включая ее границы. ПаскальБейсикvar х,у: real;beginreadln(х,у);if у<=х*х thenif х<=1.5 thenif y>=0 thenwrite('принадлежит ')elsewrite ('не принадлежит');end.INPUT x, у IF y<=x*x THEN IF x<=1.5 THEN IF y>=0 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмическийint main(void){ float x,у;cin >> x >> y;if (y<=x*x)if (x<=l.5)if (y>=0)cout << \"принадлежит\";elsecout << \"не принадлежит\"; }алг нач вещ x,y ввод x,y если у<=х*х то    если х<=1.5 то        если y>=0 то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx = float(input())y = float(input())if y<=x*x:    if x<=1.5:        if y>=0:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее:1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E и F).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1 (у<=x*x)Условие 2 (x<=1.5)Условие 3 (y>=0)Программа выведетОбласть обрабатывается верноAВСDЕF",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942279\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (х, у — действительные числа) и определяет принадлежность точки заштрихованной области, включая ее границы.<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><th>Паскаль</th><th>Бейсик</th></tr><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var х,у: real;<p>begin<p>readln(х,у);<p>if у&lt;=х*х then<p>if х&lt;=1.5 then<p>if y&gt;=0 then<p>write('принадлежит ')<p>else<p>write ('не принадлежит');<p>end.<p></p></p></p></p></p></p></p></p></p></p></font></div></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, у<p> IF y&lt;=x*x THEN<p> IF x&lt;=1.5 THEN<p> IF y&gt;=0 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></font></div></td></tr><p><tr><th>Си++</th><th>Алгоритмический</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">int main(void)<p>{ float x,у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&lt;=x*x)<p>if (x&lt;=l.5)<p>if (y&gt;=0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\"; <p>}</p></p></p></p></p></p></p></p></p></font></div></td><p><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если у&lt;=х*х то<p>    если х&lt;=1.5 то<p>        если y&gt;=0 то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></p></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>y = float(input())<p>if y&lt;=x*x:<p>    if x&lt;=1.5:<p>        if y&gt;=0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></p></p></table><p> </p></p></center><p><img src=\"/get_file?id=7739\" style=\"margin:10px auto;display:block\" width=\"250\"/><p> </p><p class=\"left_margin\">Последовательно выполните следующее:<img src=\"/get_file?id=5958\" style=\"float:right;margin:10px\"/><p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E и F).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у&lt;=x*x)</p></td><td>Условие 2 <p class=\"left_margin\">(x&lt;=1.5)</p></td><td>Условие 3 <p class=\"left_margin\">(y&gt;=0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1)\tОбластьУсловие 1 (у<=x*x)Условие 2 (x<=1.5)Условие 3 (y>=0)Программа выведетОбласть обрабатывается верноAдададапринадлежитнетВнет———нетСданет——нетDдададапринадлежитдаЕдаданетне принадлежитдаFдаданетне принадлежитда 2)\tВозможная доработка (Паскаль):if (у < = х*х) and (х < = 1.5) and (у > = 0) and (х > = 0) then write('принадлежит ') elsewrite('не принадлежит'); (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3643\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1)\t<p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(у&lt;=x*x)</p></td><td>Условие 2 <p class=\"left_margin\">(x&lt;=1.5)</p></td><td>Условие 3 <p class=\"left_margin\">(y&gt;=0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr></table><p> </p><p class=\"left_margin\">2)\tВозможная доработка (Паскаль):<p><font face=\"Courier\">if (у &lt; = х*х) and (х &lt; = 1.5) and (у &gt; = 0) <p>and (х &gt; = 0) then <p>write('принадлежит ') <p>else<p>write('не принадлежит'); </p></p></p></p></font><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></div>",
            "source": "",
            "task_id": "3643"
        },
        {
            "answer": "Решение.1) a = −11, b = 1, x = 0.Значение x может быть не указано. Значение а может быть любым отрицательным числом, зна¬чение b — любым положительным. Также допустим ответ, что программа работает неправильно при любых положительных b и отрицательных а.2)\tЛишняя часть:не нужно вводить х с клавиатуры; верно: readln(a, b).3)\tВозможная доработка:readln(а, b); if b > 0 then if а > 0 thenwrite('х >', а, 'или х < 0') elsewrite('х < ', а, 'или х > 0') elseif а > 0 then write('0 < х <', а) elsewrite(а,' < х < 0');(могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:09:34.412288",
            "question": "Требовалось написать программу, которая решает неравенство  относительно x для любых ненулевых чисел a и b  введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.  БейсикPython INPUT a, b, x IF b > 0 THEN PRINT \"x > \",a,\" или x<0\" ELSE IF a > 0 THEN PRINT \"0 < x < \",a ELSE PRINT a,\" < x < 0\" ENDIF ENDIF END a = float(input())b = float(input())x = float(input())if b > 0:    print('x > ', a, ' или x < 0')else:    if a > 0:        print('0 < x <', a)    else:        print(a, '< x < 0 ')  ПаскальАлгоритмический языкvar a,b,x: real;beginreadln(a,b,x);if b>0 thenwrite ('x > ', a, ' или x < 0')elseif a > 0 thenwrite ('0 < x <', a)elsewrite (a, '< x < 0 ');end. алгнач    вещ a,b,x    ввод a,b,x    если b > 0 то         вывод \"x > \", a, \" или x < 0\"    иначе    если a > 0 то         вывод \"0 < x <\", a    иначе вывод a, \"< x < 0 \"    все    всеконСи++#include <iostream>using namespace std;int main(void){ float a,b,x;cin >> a >> b >> x;if (b > 0)cout << \"x > \" << a << \"или x < 0'\" << endl;elseif (a>0)cout << \"0 < x <\" << a << endl; elsecout << a << \"< x < 0\" << endl; }   Последовательно выполните три задания: 1) Приведите пример таких чисел а, b, х, при которых программа неверно решает поставленную задачу.2)\tУкажите, какая часть программы является лишней.3)\tУкажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942274\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая решает неравенство <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/02/024d675ee635958ca84b406aefeaa271.svg\" style=\"vertical-align:-8pt\"/> относительно <i>x</i> для любых ненулевых чисел <i>a</i> и <i>b</i> <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/ab/abd59d203149e6b826aa1d9b65de58bd.svg\" style=\"vertical-align:-3pt\"/> введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT a, b, x<p> IF b &gt; 0 THEN<p> PRINT \"x &gt; \",a,\" или x&lt;0\"<p> ELSE<p> IF a &gt; 0 THEN<p> PRINT \"0 &lt; x &lt; \",a<p> ELSE<p> PRINT a,\" &lt; x &lt; 0\"<p> ENDIF<p> ENDIF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = float(input())<p>b = float(input())<p>x = float(input())<p>if b &gt; 0:<p>    print('x &gt; ', a, ' или x &lt; 0')<p>else:<p>    if a &gt; 0:<p>        print('0 &lt; x &lt;', a)<p>    else:<p>        print(a, '&lt; x &lt; 0 ')<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a,b,x: real;<p>begin<p>readln(a,b,x);<p>if b&gt;0 then<p>write ('x &gt; ', a, ' или x &lt; 0')<p>else<p>if a &gt; 0 then<p>write ('0 &lt; x &lt;', a)<p>else<p>write (a, '&lt; x &lt; 0 ');<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ a,b,x<p>    ввод a,b,x<p>    если b &gt; 0 то <p>        вывод \"x &gt; \", a, \" или x &lt; 0\"<p>    иначе<p>    если a &gt; 0 то <p>        вывод \"0 &lt; x &lt;\", a<p>    иначе вывод a, \"&lt; x &lt; 0 \"<p>    все<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void)<p>{ float a,b,x;<p>cin &gt;&gt; a &gt;&gt; b &gt;&gt; x;<p>if (b &gt; 0)<p>cout &lt;&lt; \"x &gt; \" &lt;&lt; a &lt;&lt; \"или x &lt; 0'\" &lt;&lt; endl;<p>else<p>if (a&gt;0)<p>cout &lt;&lt; \"0 &lt; x &lt;\" &lt;&lt; a &lt;&lt; endl; <p>else<p>cout &lt;&lt; a &lt;&lt; \"&lt; x &lt; 0\" &lt;&lt; endl; <p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните три задания: <p class=\"left_margin\">1) Приведите пример таких чисел а, b, х, при которых программа неверно решает поставленную задачу.<p class=\"left_margin\">2)\tУкажите, какая часть программы является лишней.<p class=\"left_margin\">3)\tУкажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) a = −11, b = 1, x = 0.Значение x может быть не указано. Значение а может быть любым отрицательным числом, зна¬чение b — любым положительным. Также допустим ответ, что программа работает неправильно при любых положительных b и отрицательных а.2)\tЛишняя часть:не нужно вводить х с клавиатуры; верно: readln(a, b).3)\tВозможная доработка:readln(а, b); if b > 0 then if а > 0 thenwrite('х >', а, 'или х < 0') elsewrite('х < ', а, 'или х > 0') elseif а > 0 then write('0 < х <', а) elsewrite(а,' < х < 0');(могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3646\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) a = −11, b = 1, x = 0.<p class=\"left_margin\">Значение x может быть не указано. Значение а может быть любым отрицательным числом, зна¬чение b — любым положительным. Также допустим ответ, что программа работает неправильно при любых положительных b и отрицательных а.<p class=\"left_margin\">2)\tЛишняя часть:<p>не нужно вводить х с клавиатуры; верно: readln(a, b).<p class=\"left_margin\">3)\tВозможная доработка:<p>readln(а, b); <p>if b &gt; 0 then <p>if а &gt; 0 then<p>write('х &gt;', а, 'или х &lt; 0') <p>else<p>write('х &lt; ', а, 'или х &gt; 0') <p>else<p>if а &gt; 0 then <p>write('0 &lt; х &lt;', а) <p>else<p>write(а,' &lt; х &lt; 0');<p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3646"
        },
        {
            "answer": "Решение.1) с = 0, x = 0. Значение x может быть не указано. 2) Лишняя часть: не нужно вводить х с клавиатуры; верно: readln (с). 3) Возможная доработка:readln(с);if с>0 thenwrite('нет решений')elseif с = 0 then write ( 'х=0' ) elsewrite('х=',sqrt(-с), ' или х=',-sqrt(-с));(могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:09:37.348404",
            "question": "Требовалось написать программу, которая решает уравнение  относительно х для любого числа с, введенного с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.  БейсикPythonINPUT с, хIF с>0 THENPRINT \"нет решений\"ELSEPRINT \"х=\",SQR(-с) или х=\",-SQR(-с) ENDIF END c = float(input())x = float(input())if c > 0:    print(\"нет решений\")else:    print('х=',sqrt(-с), ' или х=',-sqrt(-с))  ПаскальАлгоритмический языкvar с,х: real; beginreadln (с,х);if с>0 thenwrite ('нет решений')elsewrite ('х=',sqrt(-с), ' или х=',-sqrt(-с)); end. алгнач    вещ c,x    если c > 0 то         вывод 'нет решений'    иначе        вывод 'х=',sqrt(-с), ' или х=',-sqrt(-с)    всеконСи++#include <iostream>using namespace std;int main(void) { float c,x; cin >> c >> x; if (c>0)cout << \"нет решений\"; elsecout << \"\"х=\"\" << sqrt(-с) << \" или х=\" << -sqrt(-с)) << endl;}   Последовательно выполните три задания:1) Приведите пример таких чисел с, х, при которых программа неверно решает поставленную задачу.2) Укажите, какая часть программы является лишней.3) Укажите, как нужно доработать программу, чтобы не было случаев ее некорректной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942269\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая решает уравнение <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/a8/a851db13c0db420b7b0899999e9bc646.svg\" style=\"vertical-align:-2pt\"/> относительно <i>х</i> для любого числа <i>с</i>, введенного с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT с, х<p class=\"left_margin\">IF с&gt;0 THEN<p class=\"left_margin\">PRINT \"нет решений\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"х=\",SQR(-с) <p>или х=\",-SQR(-с) <p class=\"left_margin\">ENDIF <p class=\"left_margin\">END<p> </p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>c = float(input())<p>x = float(input())<p>if c &gt; 0:<p>    print(\"нет решений\")<p>else:<p>    print('х=',sqrt(-с), <p>' или х=',-sqrt(-с))<p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var с,х: real; <p>begin<p>readln (с,х);<p>if с&gt;0 then<p>write ('нет решений')<p>else<p>write ('х=',sqrt(-с), <p>' или х=',-sqrt(-с)); <p>end.<p> </p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ c,x<p>    если c &gt; 0 то <p>        вывод 'нет решений'<p>    иначе<p>        вывод 'х=',sqrt(-с), <p>' или х=',-sqrt(-с)<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void) <p>{ float c,x; <p>cin &gt;&gt; c &gt;&gt; x; <p>if (c&gt;0)<p>cout &lt;&lt; \"нет решений\"; <p>else<p>cout &lt;&lt; \"\"х=\"\" &lt;&lt; sqrt(-с) &lt;&lt; \" или х=\" &lt;&lt; -sqrt(-с)) &lt;&lt; endl;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните три задания:<p class=\"left_margin\">1) Приведите пример таких чисел <i>с</i>, <i>х</i>, при которых программа неверно решает поставленную задачу.<p class=\"left_margin\">2) Укажите, какая часть программы является лишней.<p class=\"left_margin\">3) Укажите, как нужно доработать программу, чтобы не было случаев ее некорректной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1) с = 0, x = 0. Значение x может быть не указано. 2) Лишняя часть: не нужно вводить х с клавиатуры; верно: readln (с). 3) Возможная доработка:readln(с);if с>0 thenwrite('нет решений')elseif с = 0 then write ( 'х=0' ) elsewrite('х=',sqrt(-с), ' или х=',-sqrt(-с));(могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3649\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) <i>с</i> = 0, <i>x</i> = 0. Значение <i>x</i> может быть не указано.<p> </p><p class=\"left_margin\">2) Лишняя часть: не нужно вводить <i>х</i> с клавиатуры; верно: <p>readln (с).<p> </p><p class=\"left_margin\">3) Возможная доработка:<p>readln(с);<p>if с&gt;0 then<p>write('нет решений')<p>else<p>if с = 0 then <p>write ( 'х=0' ) <p>else<p>write('х=',sqrt(-с), <p>' или х=',-sqrt(-с));<p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3649"
        },
        {
            "answer": "Решение.1)  Значение  может быть не указано. Значение  может быть любым отрицательным числом, значение  — любым положительным. Также допустим ответ, что программа работает неправильно при любых положительных  и отрицательных  2)\tЛишняя часть: не нужно вводить х с клавиатуры; верно: readln (а, b) . 3)\tВозможная доработка: readln(a, b);if а=0 then if b>0 then write('нет решений') elsewrite('x>0 или x<0') elseif b>0 then write(-a,'< x <0') elsewrite ('x>0 или x<',-a);(могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:09:37.744947",
            "question": "Требовалось написать программу, которая решает неравенство  относительно  для любого ненулевого числа  и любого неотрицательного числа  и  введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.  БейсикPythonINPUT а, b, х IF а = 0 THEN IF b > 0 THEN PRINT \"нет решений\" ELSE PRINT \"x>0 или x<0\" ENDIF ELSE PRINT -a,\"< x < 0\" a,b,x = int(input())if a == 0:    if b > 0:        print(\"нет решений\")    else:        print(\"x > 0 или x <0\")else:    print(-a,'< x <0')  ПаскальАлгоритмический языкvar a,b,x: real;beginreadln(a,b,x);if a = 0 thenif b > 0 thenwrite ('нет решений')elsewrite('x > 0 или x <0')elsewrite(-a,'< x <0');end. алгнач    вещ a, b, x    если a == 0 то         если b > 0 то             вывод 'нет решений'        иначе            вывод 'x > 0 или x <0'        все    иначе        вывод -a,'< x <0'    всеконСи++#include <iostream>using namespace std;int main(void){ float a,b,x;cin >> a >> b,&xif (a==0)if (b>0)cout << \"нет решений\"<< endl; elsecout << \"x>0 или x<0\"<< endl; elsecout << -a << \"< x <0\" << endl;    Последовательно выполните три задания:1)\tПриведите пример таких чисел а, b, х, при которых программа неверно решает поставленную задачу.2)\tУкажите, какая часть программы является лишней.3)\tУкажите, как нужно доработать программу, чтобы не было случаев ее некорректной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942264\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая решает неравенство <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/db/db846ee16fd343c63b06b87acccf1268.svg\" style=\"vertical-align:-3pt\"/> относительно <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/9d/9dd4e461268c8034f5c8564e155c67a6.svg\" style=\"vertical-align:-2pt\"/> для любого ненулевого числа <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/92/92eb5ffee6ae2fec3ad71c777531578f.svg\" style=\"vertical-align:-2pt\"/> и любого неотрицательного числа <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/0c/0cc175b9c0f1b6a831c399e269772661.svg\" style=\"vertical-align:-2pt\"/> и <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/0a/0ab25691081d466f3769b9d954d869a9.svg\" style=\"vertical-align:-3pt\"/> введенных с клавиатуры. Все числа считаются действительными. Программист торопился и написал программу неправильно.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT а, b, х<p> IF а = 0 THEN<p> IF b &gt; 0 THEN<p> PRINT \"нет решений\"<p> ELSE<p> PRINT \"x&gt;0 или x&lt;0\"<p> ENDIF<p> ELSE<p> PRINT -a,\"&lt; x &lt; 0\"<p> </p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a,b,x = int(input())<p>if a == 0:<p>    if b &gt; 0:<p>        print(\"нет решений\")<p>    else:<p>        print(\"x &gt; 0 или x &lt;0\")<p>else:<p>    print(-a,'&lt; x &lt;0')<p> </p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a,b,x: real;<p>begin<p>readln(a,b,x);<p>if a = 0 then<p>if b &gt; 0 then<p>write ('нет решений')<p>else<p>write('x &gt; 0 или x &lt;0')<p>else<p>write(-a,'&lt; x &lt;0');<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ a, b, x<p>    если a == 0 то <p>        если b &gt; 0 то <p>            вывод 'нет решений'<p>        иначе<p>            вывод 'x &gt; 0 или x &lt;0'<p>        все<p>    иначе<p>        вывод -a,'&lt; x &lt;0'<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void)<p>{ float a,b,x;<p>cin &gt;&gt; a &gt;&gt; b,&amp;x<p>if (a==0)<p>if (b&gt;0)<p>cout &lt;&lt; \"нет решений\"&lt;&lt; endl; <p>else<p>cout &lt;&lt; \"x&gt;0 или x&lt;0\"&lt;&lt; endl; <p>else<p>cout &lt;&lt; -a &lt;&lt; \"&lt; x &lt;0\" &lt;&lt; endl; <p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните три задания:<p class=\"left_margin\">1)\tПриведите пример таких чисел <i>а</i>, <i>b</i>, <i>х</i>, при которых программа неверно решает поставленную задачу.<p class=\"left_margin\">2)\tУкажите, какая часть программы является лишней.<p class=\"left_margin\">3)\tУкажите, как нужно доработать программу, чтобы не было случаев ее некорректной работы. (Это можно сделать несколькими способами, поэтому можно указать любой способ доработки исходной программы).</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1)  Значение  может быть не указано. Значение  может быть любым отрицательным числом, значение  — любым положительным. Также допустим ответ, что программа работает неправильно при любых положительных  и отрицательных  2)\tЛишняя часть: не нужно вводить х с клавиатуры; верно: readln (а, b) . 3)\tВозможная доработка: readln(a, b);if а=0 then if b>0 then write('нет решений') elsewrite('x>0 или x<0') elseif b>0 then write(-a,'< x <0') elsewrite ('x>0 или x<',-a);(могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3652\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1) <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/95/95d1d47dd784ec87cc6a7b9ce16a06e2.svg\" style=\"vertical-align:-3pt\"/> Значение <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/b4/b40165c9db29fc8fd17e74ccc38e1b3b.svg\" style=\"vertical-align:-2pt\"/> может быть не указано. Значение <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/92/92eb5ffee6ae2fec3ad71c777531578f.svg\" style=\"vertical-align:-2pt\"/> может быть любым отрицательным числом, значение <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/0c/0cc175b9c0f1b6a831c399e269772661.svg\" style=\"vertical-align:-2pt\"/> — любым положительным. Также допустим ответ, что программа работает неправильно при любых положительных <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/0c/0cc175b9c0f1b6a831c399e269772661.svg\" style=\"vertical-align:-2pt\"/> и отрицательных <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/2d/2dd7ce2d41fb3bc94a98a058ea9f3832.svg\" style=\"vertical-align:-2pt\"/><p> </p><p class=\"left_margin\">2)\tЛишняя часть: не нужно вводить <i>х</i> с клавиатуры; верно: readln (а, b) .<p> </p><p class=\"left_margin\">3)\tВозможная доработка: readln(a, b);<p>if а=0 then <p>if b&gt;0 then <p>write('нет решений') <p>else<p>write('x&gt;0 или x&lt;0') <p>else<p>if b&gt;0 then <p>write(-a,'&lt; x &lt;0') <p>else<p>write ('x&gt;0 или x&lt;',-a);<p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3652"
        },
        {
            "answer": "Решение.1.Таблица: ОбластьУсловие 1(х*х+у*у <=  49)Условие 2 (х*х+у*у >=  16)Программа выведетОбласть обрабатывается верноAданетне принадлежитнетВданетне принадлежитдаСдадапринадлежитдаDнет——нет  2. Возможная доработка (Паскаль): if   (х*х+у*у >=  16)   and   (х*х+у*у <=  49)     or   (x*x+y*y <=  1)   thenwrite('принадлежит') elsewrite('не принадлежит') Возможны и другие способы доработки. Пример: if х*х +  у*у >=  16 then if x*x +  у*у <=  49  then write('принадлежит') elsewrite{'не принадлежит') elseif x*x +  у*у <=  1write('принадлежит')elsewrite{'не принадлежит')",
            "parsed": "2019-04-29 21:10:14.084277",
            "question": " Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. БейсикПаскаль INPUT  х,   у IF x*x + у*у <= 49 THEN IF  x*x + у*у >=  16 THEN PRINT  \"принадлежит\" ELSE PRINT  \"не принадлежит\" ENDIF END IF ENDvar x, у:  real;beginreadln(x,y);if x*x +  y*y <=  49 thenif x*x +  y*y >=  16 thenwrite('принадлежит')elsewrite('не принадлежит')end.Си++Алгоритмический#include <iostream>using namespace std; int main (void) {float x,y;cin >> x >> y;if   (x*x +  y*y <=  49)if   (x*x +  y*y >=  16)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х,уввод х,уесли    х*х +  у*у <=  49  тоесли х*х + у* у >=  16 товывод  'принадлежит'иначевывод  'не принадлежит'всевсеконPythonx,y = float(input())if x*x + у*у <= 49:    if x*x + у*у >=  16:        print(\"принадлежит\")    else:        print(\"не принадлежит\")   Последовательно\tвыполните следующее.1.  Перерисуйте   и  заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D). Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1(х*х+у*у <=  49)Условие 2 (х*х+у*у >=  16)Программа выведетОбласть обрабатывается верноAВСD",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942135\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=7740\" style=\"float:right;margin:10px\" width=\"250\"/> Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><p><table align=\"center\" border=\"\" width=\"55%\"><p><tr><p><th>Бейсик</th><p><th>Паскаль</th><p></p></p></p></tr><p><tr><p><td valign=\"top\"><div class=\"source_code lang_basic\"><p> INPUT  х,   у<p> IF x*x + у*у &lt;= 49 THEN<p> IF  x*x + у*у &gt;=  16 THEN<p> PRINT  \"принадлежит\"<p> ELSE<p> PRINT  \"не принадлежит\"<p> ENDIF<p> END IF<p> END<p></p></p></p></p></p></p></p></p></p></p></div></td><p><td valign=\"top\"><div class=\"source_code lang_pascal\"><p>var x, у:  real;<p>begin<p>readln(x,y);<p>if x*x +  y*y &lt;=  49 then<p>if x*x +  y*y &gt;=  16 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></p></tr><p><tr><p><th>Си++</th><p><th>Алгоритмический</th><p></p></p></p></tr><p><tr><p><td valign=\"top\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main (void) {<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if   (x*x +  y*y &lt;=  49)<p>if   (x*x +  y*y &gt;=  16)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td valign=\"top\"><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х,у<p>ввод х,у<p>если    х*х +  у*у &lt;=  49  то<p>если х*х + у* у &gt;=  16 то<p>вывод  'принадлежит'<p>иначе<p>вывод  'не принадлежит'<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if x*x + у*у &lt;= 49:<p>    if x*x + у*у &gt;=  16:<p>        print(\"принадлежит\")<p>    else:<p>        print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></div></td></tr></p></p></p></p></p></table><p> </p><p> </p><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.  Перерисуйте   и  заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D). Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table align=\"center\" border=\"1\" rules=\"all\"><p><tr><p><th>Область</th><p><th>Условие 1<p class=\"left_margin\">(х*х+у*у &lt;=  49)</p></th><p><th>Условие 2 <p class=\"left_margin\">(х*х+у*у &gt;=  16)</p></th><p><th>Программа выведет</th><p><th>Область <p>обрабатывается верно</p></th><p></p></p></p></p></p></p></tr><p><tr><p><td>A</td><td></td><td></td><td></td><td></td><p></p></p></tr><p><tr><p><td>В</td><td></td><td></td><td></td><td></td><p></p></p></tr><p><tr><p><td>С</td><td></td><td></td><td></td><td></td><p></p></p></tr><p><tr><p><td>D</td><td></td><td></td><td></td><td></td><p></p></p></tr></p></p></p></p></p></table></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.Таблица: ОбластьУсловие 1(х*х+у*у <=  49)Условие 2 (х*х+у*у >=  16)Программа выведетОбласть обрабатывается верноAданетне принадлежитнетВданетне принадлежитдаСдадапринадлежитдаDнет——нет  2. Возможная доработка (Паскаль): if   (х*х+у*у >=  16)   and   (х*х+у*у <=  49)     or   (x*x+y*y <=  1)   thenwrite('принадлежит') elsewrite('не принадлежит') Возможны и другие способы доработки. Пример: if х*х +  у*у >=  16 then if x*x +  у*у <=  49  then write('принадлежит') elsewrite{'не принадлежит') elseif x*x +  у*у <=  1write('принадлежит')elsewrite{'не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3787\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.Таблица:<p> </p><p><table align=\"center\" border=\"1\" rules=\"all\"><p><tr><p><th>Область</th><p><th>Условие 1<p class=\"left_margin\">(х*х+у*у &lt;=  49)</p></th><p><th>Условие 2 <p class=\"left_margin\">(х*х+у*у &gt;=  16)</p></th><p><th>Программа выведет</th><p><th>Область <p>обрабатывается верно</p></th><p></p></p></p></p></p></p></tr><p><tr><p><td>A</td><td>да</td><td>нет</td><td>не принадлежит</td><td>нет</td><p></p></p></tr><p><tr><p><td>В</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td><p></p></p></tr><p><tr><p><td>С</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td><p></p></p></tr><p><tr><p><td>D</td><td>нет</td><td>—</td><td>—</td><td>нет</td><p></p></p></tr></p></p></p></p></p></table><p> </p><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p> </p><p>if   (х*х+у*у &gt;=  16)   and   (х*х+у*у &lt;=  49)     or   (x*x+y*y &lt;=  1)   then<p>write('принадлежит') else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Возможны и другие способы доработки. Пример:<p> </p><p>if х*х +  у*у &gt;=  16 then if x*x +  у*у &lt;=  49  then write('принадлежит') else<p>write{'не принадлежит') else<p>if x*x +  у*у &lt;=  1<p>write('принадлежит')<p>else<p>write{'не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3787"
        },
        {
            "answer": "Решение.1. Таблица: ОбластьУсловие 1(х*х+у*у >= 1)Условие 2 (х*х+у*у >= 49)Программа выведетОбласть обрабатывается верноAнет——нетВданетне принадлежитнетСданетне принадлежитдаDдадапринадлежитда  2. Возможная доработка (Паскаль): if   <х*х+у*у <=  16)   and   (х*х+у*у >=  1)     or   (x*x+y*y >=  49)   thenwrite('принадлежит') elsewrite('не принадлежит')  Возможны и другие способы доработки. Пример: if х*х +  у*у <=  16 then if x*x +  у*у >=  1  then write('принадлежит') elsewrite{'не принадлежит') elseif x*x +  у*у >=  49write('принадлежит')elsewrite{'не принадлежит')",
            "parsed": "2019-04-29 21:10:14.512280",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у - действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. БейсикПаскальINPUT  х, уIF х*х + у*у >=1 THENIF  x*x + у*у >=  49 THENPRINT  \"принадлежит\"ELSEPRINT  \"не принадлежит\"ENDIFEND IFENDvar x, у:  real;beginreadln(x,y);if x*x +  y*y >=  1  thenif x*x +  y*y >=  49 thenwrite('принадлежит')elsewrite('не принадлежит')end.Си++Алгоритмический язык#include <iostream>using namespace std; int main (void) {float x,y;cin >> x >> y;if   (x*x +  y*y >=  1  )if   (x*x +  y*y >=  49)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х,уввод х,уесли    х*х +  у*у >=  1  тоесли х*х + у* у >=  49 товывод  'принадлежит'иначевывод  'не принадлежит'всевсеконPythonx,y = float(input())if x*x +  y*y >=  1 :    if x*x +  y*y >=  49:        print(\"принадлежит\")    else:        print(\"не принадлежит\")   Последовательно\tвыполните следующее.1.  Перерисуйте   и  заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1(х*х+у*у >=  1)Условие 2 (х*х+у*у >=  49)Программа выведетОбласть обрабатывается верноAВСD",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body942128\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=14251\" style=\"float:right;margin:10px\"/><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у - действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><p><table align=\"center\" border=\"\" width=\"55%\"><p><tr><p><th>Бейсик</th><p><th>Паскаль</th><p></p></p></p></tr><p><tr><p><td valign=\"top\"><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT  х, у<p class=\"left_margin\">IF х*х + у*у &gt;=1 THEN<p class=\"left_margin\">IF  x*x + у*у &gt;=  49 THEN<p class=\"left_margin\">PRINT  \"принадлежит\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT  \"не принадлежит\"<p class=\"left_margin\">ENDIF<p class=\"left_margin\">END IF<p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></div></td><p><td valign=\"top\"><div class=\"source_code lang_pascal\"><p>var x, у:  real;<p>begin<p>readln(x,y);<p>if x*x +  y*y &gt;=  1  then<p>if x*x +  y*y &gt;=  49 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></p></tr><p><tr><p><th>Си++</th><p><th>Алгоритмический язык</th><p></p></p></p></tr><p><tr><p><td valign=\"top\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main (void) {<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if   (x*x +  y*y &gt;=  1  )<p>if   (x*x +  y*y &gt;=  49)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td valign=\"top\"><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х,у<p>ввод х,у<p>если    х*х +  у*у &gt;=  1  то<p>если х*х + у* у &gt;=  49 то<p>вывод  'принадлежит'<p>иначе<p>вывод  'не принадлежит'<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if x*x +  y*y &gt;=  1 :<p>    if x*x +  y*y &gt;=  49:<p>        print(\"принадлежит\")<p>    else:<p>        print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></div></td></tr></p></p></p></p></p></table><p> </p><p> </p><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.  Перерисуйте   и  заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table align=\"center\" border=\"1\" rules=\"all\"><p><tr><p><th>Область</th><p><th>Условие 1<p class=\"left_margin\">(х*х+у*у &gt;=  1)</p></th><p><th>Условие 2 <p class=\"left_margin\">(х*х+у*у &gt;=  49)</p></th><p><th>Программа выведет</th><p><th>Область <p>обрабатывается верно</p></th><p></p></p></p></p></p></p></tr><p><tr><p><td>A</td><td></td><td></td><td></td><td></td><p></p></p></tr><p><tr><p><td>В</td><td></td><td></td><td></td><td></td><p></p></p></tr><p><tr><p><td>С</td><td></td><td></td><td></td><td></td><p></p></p></tr><p><tr><p><td>D</td><td></td><td></td><td></td><td></td><p></p></p></tr></p></p></p></p></p></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. Таблица: ОбластьУсловие 1(х*х+у*у >= 1)Условие 2 (х*х+у*у >= 49)Программа выведетОбласть обрабатывается верноAнет——нетВданетне принадлежитнетСданетне принадлежитдаDдадапринадлежитда  2. Возможная доработка (Паскаль): if   <х*х+у*у <=  16)   and   (х*х+у*у >=  1)     or   (x*x+y*y >=  49)   thenwrite('принадлежит') elsewrite('не принадлежит')  Возможны и другие способы доработки. Пример: if х*х +  у*у <=  16 then if x*x +  у*у >=  1  then write('принадлежит') elsewrite{'не принадлежит') elseif x*x +  у*у >=  49write('принадлежит')elsewrite{'не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol3788\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. Таблица:<p> </p><p><table align=\"center\" border=\"1\" rules=\"all\"><p><tr><p><th>Область</th><p><th>Условие 1<p class=\"left_margin\">(х*х+у*у &gt;= 1)</p></th><p><th>Условие 2 <p class=\"left_margin\">(х*х+у*у &gt;= 49)</p></th><p><th>Программа выведет</th><p><th>Область <p>обрабатывается верно</p></th><p></p></p></p></p></p></p></tr><p><tr><p><td>A</td><td>нет</td><td>—</td><td>—</td><td>нет</td><p></p></p></tr><p><tr><p><td>В</td><td>да</td><td>нет</td><td>не принадлежит</td><td>нет</td><p></p></p></tr><p><tr><p><td>С</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td><p></p></p></tr><p><tr><p><td>D</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td><p></p></p></tr></p></p></p></p></p></table><p> </p><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p> </p><p>if   &lt;х*х+у*у &lt;=  16)   and   (х*х+у*у &gt;=  1)     or   (x*x+y*y &gt;=  49)   then<p>write('принадлежит') else<p>write('не принадлежит') <p> </p><p class=\"left_margin\">Возможны и другие способы доработки. Пример:<p> </p><p>if х*х +  у*у &lt;=  16 then if x*x +  у*у &gt;=  1  then write('принадлежит') else<p>write{'не принадлежит') else<p>if x*x +  у*у &gt;=  49<p>write('принадлежит')<p>else<p>write{'не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "3788"
        },
        {
            "answer": "Решение.1.ОбластьУсловие 1 (y>=x)Условие 2 (y>=0)Условие 3 (y<=2–x*x)Программа выведетОбласть обрабатывается верноAдаданетне принадлежитдаВданет--нетСнет---нетDнет---нетЕдададапринадлежитдаFданет--нетGнет---нетНнет---нет 2. Возможная доработка (Паскаль):if (y<=2-x*x) and ((y>=x) or (y<=x and y>=0)) thenwrite('принадлежит')elsewrite('не принадлежит')Возможны и другие способы доработки.",
            "parsed": "2019-04-29 21:10:23.895994",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры\tсчитываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.  ПаскальБейсикvar x,y: real;beginreadln(x,y);if y>=x thenif y>=0 thenif y<=2-x*x thenwrite('принадлежит')elsewrite('не принадлежит')end.INPUT x, y IF y>=x THEN IF y>=0 THEN IF y<=2-x*x THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){float x,y;cin >> x >> y;if (y>=x)if (y>=0)if (y<=2-x*x)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ x,yввод x,yесли y>=x тоесли y>=0 тоесли y<=2-x*x товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input())if y>=x:    if y>=0:        if y<=2-x*x:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно\tвыполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". 2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)   ОбластьУсловие 1 (y>=x)Условие 2 (y>=0)Условие 3 (y<=2–x*x)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950095\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры\tсчитываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. <img <img=\"\" src=\"/get_file?id=7742\" style=\"float:right;margin:10px\" width=\"200\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\">var x,y: real;<p>begin<p>readln(x,y);<p>if y&gt;=x then<p>if y&gt;=0 then<p>if y&lt;=2-x*x then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_basic\">INPUT x, y<p> IF y&gt;=x THEN<p> IF y&gt;=0 THEN<p> IF y&lt;=2-x*x THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\">int main(void){<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&gt;=x)<p>if (y&gt;=0)<p>if (y&lt;=2-x*x)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\">алг<p>нач<p>вещ x,y<p>ввод x,y<p>если y&gt;=x то<p>если y&gt;=0 то<p>если y&lt;=2-x*x то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&gt;=x:<p>    if y&gt;=0:<p>        if y&lt;=2-x*x:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"/get_file?id=7743\" style=\"float:right;margin:10px\" width=\"250\"/><p class=\"left_margin\">Последовательно\tвыполните следующее. <p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). <p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". <p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) <p> </p><p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (y&gt;=x)</td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&lt;=2–x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.ОбластьУсловие 1 (y>=x)Условие 2 (y>=0)Условие 3 (y<=2–x*x)Программа выведетОбласть обрабатывается верноAдаданетне принадлежитдаВданет--нетСнет---нетDнет---нетЕдададапринадлежитдаFданет--нетGнет---нетНнет---нет 2. Возможная доработка (Паскаль):if (y<=2-x*x) and ((y>=x) or (y<=x and y>=0)) thenwrite('принадлежит')elsewrite('не принадлежит')Возможны и другие способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4531\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 (y&gt;=x)</td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&lt;=2–x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>В</td><td>да</td><td>нет</td><td>-</td><td>-</td><td>нет</td></tr><tr><td>С</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr><tr><td>D</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>нет</td><td>-</td><td>-</td><td>нет</td></tr><tr><td>G</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr><tr><td>Н</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p>if (y&lt;=2-x*x) and ((y&gt;=x) or (y&lt;=x and y&gt;=0)) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p class=\"left_margin\">Возможны и другие способы доработки.</p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4531"
        },
        {
            "answer": "Решение.ОбластьУсловие1(y>=x–2)Условие 2 (x<=0)Условие 3 (x*x+y*y<=25)Программа выведетОбласть обрабатывается верноAдаданетне принадлежитдаВдададапринадлежитдаСдададапринадлежитдаDдаданетне принадлежитдаЕнет———нетFданет——нетGданет——нетНнет———нетKнет———нет Возможная доработка (пример на Паскале):if (x*x+y*y<=25) and ((x<=0) or ((y<=x-2) and (y<=0))) then write('принадлежит') else write('не принадлежит') Возможны и другие способы доработки",
            "parsed": "2019-04-29 21:10:15.003550",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x,y – действительные числа) и определяется принадлежность точки закрашенной области, включая ее границы. Программист торопился и написал программу неправильно. ПаскальБейсикvar x,y: real;beginreadln(x,y);if y>=x-2 thenif x<=0 thenif x*x+y*y<=25 thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT x, y IF y>=x-2 THEN IF x<=0 THEN IF x*x+y*y<=25 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF ENDСи++Алгоритмический#include <iostream>using namespace std;int main() {float x,y;cin >> x >> y;if (y>=x-2)if (x<=0)if (x*x+y*y<=25)cout << \"принадлежит\";elsecout << \"не принадлежит\";алг нач вещ x,y ввод x,y если y>=x-2 то    если x<=0 то        если x*x+y*y<=25 то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx,y = float(input())if y>=x-2:    if x<=0:        if x*x+y*y<=25:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно\tвыполните следующее.1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие1(y>=x–2)Условие 2 (x<=0)Условие 3 (x*x+y*y<=25)Программа выведетОбласть обрабатывается верноAВСDЕFGНK",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950089\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=7744\" style=\"float:right;margin:10px\" width=\"280\"/><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x,y – действительные числа) и определяется принадлежность точки закрашенной области, включая ее границы. Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\">var x,y: real;<p>begin<p>readln(x,y);<p>if y&gt;=x-2 then<p>if x&lt;=0 then<p>if x*x+y*y&lt;=25 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_basic\"><p> INPUT x, y<p> IF y&gt;=x-2 THEN<p> IF x&lt;=0 THEN<p> IF x*x+y*y&lt;=25 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END</p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический</th></tr><p><tr><td><div class=\"source_code lang_c\">#include &lt;iostream&gt;<p>using namespace std;<p>int main() {<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&gt;=x-2)<p>if (x&lt;=0)<p>if (x*x+y*y&lt;=25)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p></p></p></p></p></p></p></p></p></p></p></p></div></td><p><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если y&gt;=x-2 то<p>    если x&lt;=0 то<p>        если x*x+y*y&lt;=25 то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></p></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&gt;=x-2:<p>    if x&lt;=0:<p>        if x*x+y*y&lt;=25:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно\tвыполните следующее.<p class=\"left_margin\">1.      Перерисуйте      и     заполните таблицу,  которая  показывает,  как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H).<p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><img src=\"http://reshuege.ru/files/4212.png\" style=\"float:right;margin:10px\"/><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие1<p class=\"left_margin\">(y&gt;=x–2)</p></td><td>Условие 2 (x&lt;=0)</td><td>Условие 3 (x*x+y*y&lt;=25)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>K</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.ОбластьУсловие1(y>=x–2)Условие 2 (x<=0)Условие 3 (x*x+y*y<=25)Программа выведетОбласть обрабатывается верноAдаданетне принадлежитдаВдададапринадлежитдаСдададапринадлежитдаDдаданетне принадлежитдаЕнет———нетFданет——нетGданет——нетНнет———нетKнет———нет Возможная доработка (пример на Паскале):if (x*x+y*y<=25) and ((x<=0) or ((y<=x-2) and (y<=0))) then write('принадлежит') else write('не принадлежит') Возможны и другие способы доработки",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4533\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие1<p class=\"left_margin\">(y&gt;=x–2)</p></td><td>Условие 2 (x&lt;=0)</td><td>Условие 3 (x*x+y*y&lt;=25)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>В</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>С</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>D</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Е</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>F</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>G</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>K</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">Возможная доработка (пример на Паскале):<p>if (x*x+y*y&lt;=25) and ((x&lt;=0) or ((y&lt;=x-2) and (y&lt;=0))) <p>then write('принадлежит') <p>else write('не принадлежит') <p class=\"left_margin\">Возможны и другие способы доработки</p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4533"
        },
        {
            "answer": "Решение.1. ОбластьУсловие 1 (y<=2-x)Условие 2 (y>=0)Условие 3 (y<=x*x)Программа выведетОбласть обрабатывается верно Aдададапринадлежитнет Внет---нет Сдаданетне принадлежитнетDдададапринадлежитда Енет---нет Fнет---нет Gданет--нет Ннет---нет  2. Возможная доработка (Паскаль):if (x<0) and (y<=2-x) and (y>=x*x) or (x>=0) and (y>=0)and (y<=2-x) then   write('принадлежит')  else   write('не принадлежит')Возможны и другие способы доработки.Пример:if (y<=2-x) and (y>=0) and ((x>0) or (y>=x*x)) then  write('принадлежит')else  write('не принадлежит')",
            "parsed": "2019-04-29 21:10:24.412428",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.  ПаскальБейсикvar x,y: real;beginreadln(x,y);if y<=2-x thenif y>=0 thenif y<=x*x thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT x, y IF y<=2-x THEN IF y>=0 THEN IF y<=x*x THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){float x,y;cin >> x >> y;if (y<=2-x)if (y>=0)if (y<=x*x)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ x,yввод x,yесли y<=2-x тоесли y>=0 тоесли y<=x*x товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input()), float(input())if y<=2-x:    if y>=0:        if y<=x*x:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). Точки, лежащие на границах областей, отдельно не рассматривать.В столбцах условий укажите \"да\", если условие выполнится, \"нет\" если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв». В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки  исходной программы.) ОбластьУсловие 1  (y<=2-x)Условие 2 (y>=0)Условие 3 (y<=x*x)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950091\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. <img src=\"http://reshuege.ru/files/4208.png\" style=\"float:right;margin:10px\" width=\"170\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><p>var x,y: real;<p>begin<p>readln(x,y);<p>if y&lt;=2-x then<p>if y&gt;=0 then<p>if y&lt;=x*x then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><td><div class=\"source_code lang_basic\"><p> INPUT x, y<p> IF y&lt;=2-x THEN<p> IF y&gt;=0 THEN<p> IF y&lt;=x*x THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\">int main(void){<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&lt;=2-x)<p>if (y&gt;=0)<p>if (y&lt;=x*x)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\">алг<p>нач<p>вещ x,y<p>ввод x,y<p>если y&lt;=2-x то<p>если y&gt;=0 то<p>если y&lt;=x*x то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input()), float(input())<p>if y&lt;=2-x:<p>    if y&gt;=0:<p>        if y&lt;=x*x:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"http://reshuege.ru/files/4210.png\" style=\"float:right;margin:10px\" width=\"170\"/><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). Точки, лежащие на границах областей, отдельно не рассматривать.<p class=\"left_margin\">В столбцах условий укажите \"да\", если условие выполнится, \"нет\" если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв». В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки  исходной программы.)<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1  <p class=\"left_margin\">(y&lt;=2-x)</p></td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&lt;=x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. ОбластьУсловие 1 (y<=2-x)Условие 2 (y>=0)Условие 3 (y<=x*x)Программа выведетОбласть обрабатывается верно Aдададапринадлежитнет Внет---нет Сдаданетне принадлежитнетDдададапринадлежитда Енет---нет Fнет---нет Gданет--нет Ннет---нет  2. Возможная доработка (Паскаль):if (x<0) and (y<=2-x) and (y>=x*x) or (x>=0) and (y>=0)and (y<=2-x) then   write('принадлежит')  else   write('не принадлежит')Возможны и другие способы доработки.Пример:if (y<=2-x) and (y>=0) and ((x>0) or (y>=x*x)) then  write('принадлежит')else  write('не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4535\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<table border=\"1\" rules=\"all\"> <tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y&lt;=2-x)</p></td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&lt;=x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr> <tr><td>A</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr> <tr><td>В</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr> <p><tr><p><td>С</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>нет</td><p></p></p></tr><p><tr><p><td>D</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td><p></p></p></tr><p> <tr><td>Е</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr> <tr><td>F</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr> <tr><td>G</td><td>да</td><td>нет</td><td>-</td><td>-</td><td>нет</td></tr> <tr><td>Н</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr></p></p></p></table><p> </p><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p>if (x&lt;0) and (y&lt;=2-x) and (y&gt;=x*x) or (x&gt;=0) and (y&gt;=0)<p>and (y&lt;=2-x) then<p>   write('принадлежит')<p>  else<p>   write('не принадлежит')<p class=\"left_margin\">Возможны и другие способы доработки.<p class=\"left_margin\">Пример:<p>if (y&lt;=2-x) and (y&gt;=0) and ((x&gt;0) or (y&gt;=x*x)) then<p>  write('принадлежит')<p>else<p>  write('не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4535"
        },
        {
            "answer": "Решение.ОбластьУсловие 1 y<=3–x*xУсловие 2 (y>=0)Условие 3 (y>=x+1)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСданет——нетDданет——нетЕдаданетне принадлежитдаFдададапринадлежитдаGдададапринадлежитдаНдаданетне принадлежитнет Возможная доработка (Паскаль): if (y<=3–x*x) and ((y>=x+1)or((y>=0)and(x>=0))) then write('принадлежит') else write('не принадлежит')",
            "parsed": "2019-04-29 21:10:24.763876",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.  ПаскальБейсикvar x,y: real;beginreadln(x,y);if y<=3-x*x thenif y>=0 thenif y>=x+1 thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT x, y IF y<=3-x*x THEN IF y>=0 THEN IF y>=x+1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF ENDСи++Алгоритмическийint main(void){float x,y;cin >> x >> y;if (y<=3-x*x)if (y>=0)if (y>=x+1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}  алг нач вещ x,y ввод x,y если y<=3-x*x то    если y>=0 то        если y>=x+1 то            вывод 'принадлежит'        иначе            вывод 'не принадлежит'        все    все все конPythonx,y = float(input())if y<=3-x*x:    if y>=0:        if y>=x+1:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно\tвыполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".  2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)  ОбластьУсловие 1 y<=3–x*xУсловие 2 (y>=0)Условие 3 (y>=x+1)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950084\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=13847\" style=\"float:right;margin:10px\" width=\"200\"/><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. <p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><p>var x,y: real;<p>begin<p>readln(x,y);<p>if y&lt;=3-x*x then<p>if y&gt;=0 then<p>if y&gt;=x+1 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_basic\"><p> INPUT x, y<p> IF y&lt;=3-x*x THEN<p> IF y&gt;=0 THEN<p> IF y&gt;=x+1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END</p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th>Си++</th><th>Алгоритмический</th></tr><p><tr><td><div class=\"source_code lang_c\">int main(void){<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&lt;=3-x*x)<p>if (y&gt;=0)<p>if (y&gt;=x+1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></div></td><p> </p><p> </p><p><td><div class=\"source_code lang_alg\"><p>алг<p> нач<p> вещ x,y<p> ввод x,y<p> если y&lt;=3-x*x то<p>    если y&gt;=0 то<p>        если y&gt;=x+1 то<p>            вывод 'принадлежит'<p>        иначе<p>            вывод 'не принадлежит'<p>        все<p>    все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=3-x*x:<p>    if y&gt;=0:<p>        if y&gt;=x+1:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно\tвыполните следующее. <p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). <p class=\"left_margin\">Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\". <p> </p><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) <p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 y&lt;=3–x*x</td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&gt;=x+1)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.ОбластьУсловие 1 y<=3–x*xУсловие 2 (y>=0)Условие 3 (y>=x+1)Программа выведетОбласть обрабатывается верноAнет———нетВнет———нетСданет——нетDданет——нетЕдаданетне принадлежитдаFдададапринадлежитдаGдададапринадлежитдаНдаданетне принадлежитнет Возможная доработка (Паскаль): if (y<=3–x*x) and ((y>=x+1)or((y>=0)and(x>=0))) then write('принадлежит') else write('не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4536\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 y&lt;=3–x*x</td><td>Условие 2 (y&gt;=0)</td><td>Условие 3 (y&gt;=x+1)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>G</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>Н</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">Возможная доработка (Паскаль): <p>if (y&lt;=3–x*x) and ((y&gt;=x+1)or((y&gt;=0)and(x&gt;=0))) then <p>write('принадлежит') <p>else <p>write('не принадлежит')</p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4536"
        },
        {
            "answer": "Решение.1. ОбластьУсловие 1 (y>=0)Условие 2 (y>=2-x)Условие 3 (y<=x*x)Программа выведетОбласть обрабатывается верноAданет--нет Вдададапринадлежитда Сданет--нет Dданет--нет Едаданетне принадлежитда Fдададапринадлежитнет Gнет---нет Ннет---нет  2. Возможная доработка (Паскаль):if (x<0) and (y>=2-x) and (y<=x*x) or (x>=0) and (y>=0)and (y<=2-x) and (y<=x*x) thenwrite('принадлежит')elsewrite('не принадлежит')Возможны и другие способы доработки.Пример:if (y<=x*x) and (y>=0) and((x>=0) and (y<=2-x) or (y>=2-x) and (x<0)) thenwrite('принадлежит')elsewrite('не принадлежит')",
            "parsed": "2019-04-29 21:10:25.264911",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой  точки заданной закрашенным областям (включая границы). Программист торопился и написал программу неправильно.  ПаскальБейсикvar x,y: real;beginreadln(x,y);if y>=0 thenif y>=2-x thenif y<=x*x thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT x, y IF y>=0 THEN IF y>=2-x THEN IF y<=x*x THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDСи++Алгоритмический языкint main(void){float x,y;cin >> x >> y;if (y>=0)if (y>=2-x)if (y<=x*x)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ x,yввод x,yесли y>=0 тоесли y>=2-x тоесли y<=x*x товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input())if y>=0:    if y>=2-x:        if y<=x*x:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F,G и H). Точки, лежащие на границах областей, отдельно не рассматривать.В столбцах условий укажите \"да\", если условие выполнится, \"нет\" если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв». В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)  ОбластьУсловие 1  (y>=0)Условие 2 (y>=2-x)Условие 3 (y<=x*x)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950085\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой  точки заданной закрашенным областям (включая границы). Программист торопился и написал программу неправильно. <img src=\"http://reshuege.ru/files/4215.png\" style=\"float:right;margin:10px\" width=\"180\"/><p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><p><div class=\"source_code lang_pascal\"><p>var x,y: real;<p>begin<p>readln(x,y);<p>if y&gt;=0 then<p>if y&gt;=2-x then<p>if y&lt;=x*x then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><p><div class=\"source_code lang_basic\"><p> INPUT x, y<p> IF y&gt;=0 THEN<p> IF y&gt;=2-x THEN<p> IF y&lt;=x*x THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END</p></p></p></p></p></p></p></p></p></p></p></div></p></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><p>int main(void){<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&gt;=0)<p>if (y&gt;=2-x)<p>if (y&lt;=x*x)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}</p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ x,y<p>ввод x,y<p>если y&gt;=0 то<p>если y&gt;=2-x то<p>если y&lt;=x*x то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&gt;=0:<p>    if y&gt;=2-x:<p>        if y&lt;=x*x:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"http://reshuege.ru/files/4216.png\" style=\"float:right;margin:10px\" width=\"180\"/><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F,G и H). Точки, лежащие на границах областей, отдельно не рассматривать.<p class=\"left_margin\">В столбцах условий укажите \"да\", если условие выполнится, \"нет\" если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв». В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1  <p class=\"left_margin\">(y&gt;=0)</p></td><td>Условие 2 (y&gt;=2-x)</td><td>Условие 3 (y&lt;=x*x)</td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. ОбластьУсловие 1 (y>=0)Условие 2 (y>=2-x)Условие 3 (y<=x*x)Программа выведетОбласть обрабатывается верноAданет--нет Вдададапринадлежитда Сданет--нет Dданет--нет Едаданетне принадлежитда Fдададапринадлежитнет Gнет---нет Ннет---нет  2. Возможная доработка (Паскаль):if (x<0) and (y>=2-x) and (y<=x*x) or (x>=0) and (y>=0)and (y<=2-x) and (y<=x*x) thenwrite('принадлежит')elsewrite('не принадлежит')Возможны и другие способы доработки.Пример:if (y<=x*x) and (y>=0) and((x>=0) and (y<=2-x) or (y>=2-x) and (x<0)) thenwrite('принадлежит')elsewrite('не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4537\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<table border=\"1\" rules=\"all\"> <tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y&gt;=0)</p></td><td>Условие 2 <p class=\"left_margin\">(y&gt;=2-x)</p></td><td>Условие 3 (y&lt;=x*x)</td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td>да</td><td>нет</td><td>-</td><td>-</td><td>нет</td></tr> <tr><td>В</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr> <tr><td>С</td><td>да</td><td>нет</td><td>-</td><td>-</td><td>нет</td></tr> <tr><td>D</td><td>да</td><td>нет</td><td>-</td><td>-</td><td>нет</td></tr> <p><tr><td>Е</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr> <p><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>нет</td></tr> <tr><td>G</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr> <tr><td>Н</td><td>нет</td><td>-</td><td>-</td><td>-</td><td>нет</td></tr></p></p></table><p> </p><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p>if (x&lt;0) and (y&gt;=2-x) and (y&lt;=x*x) or (x&gt;=0) and (y&gt;=0)<p>and (y&lt;=2-x) and (y&lt;=x*x) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p class=\"left_margin\">Возможны и другие способы доработки.<p class=\"left_margin\">Пример:<p>if (y&lt;=x*x) and (y&gt;=0) and<p class=\"left_margin\">((x&gt;=0) and (y&lt;=2-x) or (y&gt;=2-x) and (x&lt;0)) then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4537"
        },
        {
            "answer": "Решение.",
            "parsed": "2019-04-29 21:10:25.667146",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. ПаскальБейсикvar x,y: real;beginreadln(x,y);if y<=x+1 thenif y>=x*x-1 thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT x, y IF y<=x+1 THEN IF y>=x*x-1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDСи++Алгоритмический язык#include <iostream>using namespace std;int main(){float x,у;cin >> x >> y;if (y<=x+1)if (y>=x*x-1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х,уввод х,уесли y<=x+1 тоесли y>=x*x-1 товывод 'принадлежит'иначевывод 'не принадлежит'всевсеконPythonx,y = float(input())if y<=x+1:    if y>=x*x-1:        print(\"принадлежит\")    else:        print(\"не принадлежит\") Последовательно выполните следующее. 1. Заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). Точки, лежащие на границах областей, отдельно не рассматривать.В столбцах условий укажите \"да\", если условие выполнится, \"нет\" если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв». В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. ОбластьУсловие 1  (y<=x+1)Условие 2 (y>=x*x-1)Программа выведетОбласть обрабатывается верноAВСDЕFGН",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950086\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=7746\" style=\"float:right;margin:10px\" width=\"250\"/><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y – действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><p>var x,y: real;<p>begin<p>readln(x,y);<p>if y&lt;=x+1 then<p>if y&gt;=x*x-1 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></div></td><td><p><div class=\"source_code lang_basic\"><p> INPUT x, y<p> IF y&lt;=x+1 THEN<p> IF y&gt;=x*x-1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></div></p></td></tr><tr><th>Си++</th><th>Алгоритмический язык</th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>float x,у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&lt;=x+1)<p>if (y&gt;=x*x-1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х,у<p>ввод х,у<p>если y&lt;=x+1 то<p>если y&gt;=x*x-1 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=x+1:<p>    if y&gt;=x*x-1:<p>        print(\"принадлежит\")<p>    else:<p>        print(\"не принадлежит\")<p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее. <img src=\"http://reshuege.ru/files/4218.png\" style=\"float:right;margin:10px\"/><p class=\"left_margin\">1. Заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G и H). Точки, лежащие на границах областей, отдельно не рассматривать.<p class=\"left_margin\">В столбцах условий укажите \"да\", если условие выполнится, \"нет\" если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв». В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы.<p> </p><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1  <p class=\"left_margin\">(y&lt;=x+1)</p></td><td>Условие 2 (y&gt;=x*x-1)</td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td></tr><tr><td>В</td><td></td><td></td><td></td><td></td></tr><tr><td>С</td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td></tr><tr><td>Е</td><td></td><td></td><td></td><td></td></tr><tr><td>F</td><td></td><td></td><td></td><td></td></tr><tr><td>G</td><td></td><td></td><td></td><td></td></tr><tr><td>Н</td><td></td><td></td><td></td><td></td></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4538\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><img src=\"/get_file?id=4219\" style=\"float:right;margin:10px\"/></p></div>",
            "source": "",
            "task_id": "4538"
        },
        {
            "answer": "Решение.Элементы ответа:1.ОбластьУсловие 1 (x >= –3)Условие 2 (x <= 9)Условие 3 (x > 1)Программа выведетОбласть обрабатывается верноAНет---НетBДаДаНет ПринадлежитДаCДаДаДаНе принадлежитДаDДаДаДаНе принадлежитНетEДаНет--Нет2. Возможная доработка (Паскаль):if (x>=-3) and (x<=1) or (x>=5) and (x<=9) thenwrite('принадлежит')elsewrite('не принадлежит')Возможны и другие способы доработки.Например:if x>=-3 thenif x<=1 thenwrite('принадлежит')elseif x>=5 thenif x<=9 thenwrite('принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')Другой пример:if abs(abs(x-3)-4)<=2 thenwrite('принадлежит')elsewrite('не принадлежит') Обратите внимание! В задаче требуется выполнить три действия.1. Заполнить таблицу.2. Исправить ошибку в условном операторе.3. Исправить ошибку, связанную с неправильным набором условий.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия. Рассмотрим отдельно каждое действие.1. Действие по заполнению таблицы считается выполненным, если в таблице нет ошибок или ошибки присутствуют только в одной строке.2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции.В сложных случаях это действие считается выполненным, если программа выдает одно из двух сообщений: «принадлежит» или «не принадлежит» – для любых чисел x, при этом программа не стала работать хуже, чем раньше, т.е. для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ.3. Приведённых трёх ограничений недостаточно для описания двух областей (потеряно условие x>=5). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||x–3|–4|≤2), либо использование сложной комбинации каскадных условий.В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, т.е. программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего. В работе (во фрагментах программ) допускается наличие отдельных синтаксических ошибок, не искажающих замысла автора решения.",
            "parsed": "2019-04-29 21:09:52.015242",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. БейсикПаскаль INPUT x IF x>=-3 THEN IF x<=9 THEN IF x>1 THEN PRINT \"не принадлежит\" ELSE PRINT \"принадлежит\" ENDIF ENDIF ENDIF ENDvar x: real;beginreadln(x);if x>=-3 thenif x<=9 thenif x>1 thenwrite('не принадлежит')elsewrite('принадлежит')end.Си++Алгоритмический языкint main(void){float x;cin >> x;if(x>=-3)if(x<=9)if(x>1)cout << \"не принадлежит\";elsecout << \"принадлежит\";}алгначвещ xввод xесли x>=-3 тоесли x<=9 тоесли x>1 товывод 'не принадлежит'иначевывод 'принадлежит'всевсевсеконPythonx = float(input())if x >= -3:    if x <= 9:        if x > 1:            print(\"не принадлежит\")        else:            print(\"принадлежит\")   Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки –3, 1, 5 и 9) принадлежат заштрихованным областям (B и D соответственно).В столбцах условий укажите «Да», если условие выполнится; «Нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1(x >= –3)Условие 2(x <= 9)Условие 3(x > 1)Программа выведетОбласть обрабатывается верноABCDE",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body950052\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=7749\" style=\"float:right;margin:10px\" width=\"200\"/><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th>Бейсик</th><th>Паскаль</th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x<p> IF x&gt;=-3 THEN<p> IF x&lt;=9 THEN<p> IF x&gt;1 THEN<p> PRINT \"не принадлежит\"<p> ELSE<p> PRINT \"принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><p><div class=\"source_code lang_pascal\"><p>var x: real;<p>begin<p>readln(x);<p>if x&gt;=-3 then<p>if x&lt;=9 then<p>if x&gt;1 then<p>write('не принадлежит')<p>else<p>write('принадлежит')<p>end.</p></p></p></p></p></p></p></p></p></p></div></p></td></tr><tr><th>Си++</th><th>Алгоритмический язык</th></tr><tr><td><p><div class=\"source_code lang_c\"><p>int main(void)<p>{<p>float x;<p>cin &gt;&gt; x;<p>if(x&gt;=-3)<p>if(x&lt;=9)<p>if(x&gt;1)<p>cout &lt;&lt; \"не принадлежит\";<p>else<p>cout &lt;&lt; \"принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ x<p>ввод x<p>если x&gt;=-3 то<p>если x&lt;=9 то<p>если x&gt;1 то<p>вывод 'не принадлежит'<p>иначе<p>вывод 'принадлежит'<p>все<p>все<p>все<p>кон</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>if x &gt;= -3:<p>    if x &lt;= 9:<p>        if x &gt; 1:<p>            print(\"не принадлежит\")<p>        else:<p>            print(\"принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки –3, 1, 5 и 9) принадлежат заштрихованным областям (B и D соответственно).<p class=\"left_margin\">В столбцах условий укажите «Да», если условие выполнится; «Нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p><table align=\"center\" border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1<br/>(x &gt;= –3)</td><td>Условие 2<br/>(x &lt;= 9)</td><td>Условие 3<br/>(x &gt; 1)</td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr><td>B</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>C</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>E</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr></table></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.ОбластьУсловие 1 (x >= –3)Условие 2 (x <= 9)Условие 3 (x > 1)Программа выведетОбласть обрабатывается верноAНет---НетBДаДаНет ПринадлежитДаCДаДаДаНе принадлежитДаDДаДаДаНе принадлежитНетEДаНет--Нет2. Возможная доработка (Паскаль):if (x>=-3) and (x<=1) or (x>=5) and (x<=9) thenwrite('принадлежит')elsewrite('не принадлежит')Возможны и другие способы доработки.Например:if x>=-3 thenif x<=1 thenwrite('принадлежит')elseif x>=5 thenif x<=9 thenwrite('принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')Другой пример:if abs(abs(x-3)-4)<=2 thenwrite('принадлежит')elsewrite('не принадлежит') Обратите внимание! В задаче требуется выполнить три действия.1. Заполнить таблицу.2. Исправить ошибку в условном операторе.3. Исправить ошибку, связанную с неправильным набором условий.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия. Рассмотрим отдельно каждое действие.1. Действие по заполнению таблицы считается выполненным, если в таблице нет ошибок или ошибки присутствуют только в одной строке.2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции.В сложных случаях это действие считается выполненным, если программа выдает одно из двух сообщений: «принадлежит» или «не принадлежит» – для любых чисел x, при этом программа не стала работать хуже, чем раньше, т.е. для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ.3. Приведённых трёх ограничений недостаточно для описания двух областей (потеряно условие x>=5). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||x–3|–4|≤2), либо использование сложной комбинации каскадных условий.В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, т.е. программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего. В работе (во фрагментах программ) допускается наличие отдельных синтаксических ошибок, не искажающих замысла автора решения.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4568\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.<table border=\"1\" rules=\"all\"><tr><p><td>Область</td><td>Условие 1 (x &gt;= –3)</td><td>Условие 2 (x &lt;= 9)</td><td>Условие 3 (x &gt; 1)</td><td>Программа выведет</td><td>Область обрабатывается верно</td><p></p></p></tr><p><tr><p><td>A</td><td>Нет</td><td>-</td><td>-</td><td>-</td><td>Нет</td><p></p></p></tr><tr></tr><tr></tr><tr></tr><p><tr><p><td>B</td><td>Да</td><td>Да</td><td>Нет</td><td> Принадлежит</td><td>Да</td><p></p></p></tr><p><tr></tr><tr></tr><tr></tr><p><tr><p><td>C</td><td>Да</td><td>Да</td><td>Да</td><td>Не принадлежит</td><td>Да</td><p></p></p></tr><p><tr></tr><tr></tr><tr></tr><p><tr><p><td>D</td><td>Да</td><td>Да</td><td>Да</td><td>Не принадлежит</td><td>Нет</td><p></p></p></tr><tr></tr><tr></tr><tr></tr><p><tr><td>E</td><td>Да</td><td>Нет</td><td>-</td><td>-</td><td>Нет</td></tr><tr></tr><tr></tr><tr></tr></p></p></p></p></p></p></p></table><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p>if (x&gt;=-3) and (x&lt;=1) or (x&gt;=5) and (x&lt;=9) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p class=\"left_margin\">Возможны и другие способы доработки.<p class=\"left_margin\">Например:<p>if x&gt;=-3 then<p>if x&lt;=1 then<p>write('принадлежит')<p>else<p>if x&gt;=5 then<p>if x&lt;=9 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p class=\"left_margin\">Другой пример:<p>if abs(abs(x-3)-4)&lt;=2 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Обратите внимание! В задаче требуется выполнить три действия.<p class=\"left_margin\">1. Заполнить таблицу.<p class=\"left_margin\">2. Исправить ошибку в условном операторе.<p class=\"left_margin\">3. Исправить ошибку, связанную с неправильным набором условий.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия. Рассмотрим отдельно каждое действие.<p class=\"left_margin\">1. Действие по заполнению таблицы считается выполненным, если в таблице нет ошибок или ошибки присутствуют только в одной строке.<p class=\"left_margin\">2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции.<p class=\"left_margin\">В сложных случаях это действие считается выполненным, если программа выдает одно из двух сообщений: «принадлежит» или «не принадлежит» – для любых чисел x, при этом программа не стала работать хуже, чем раньше, т.е. для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ.<p class=\"left_margin\">3. Приведённых трёх ограничений недостаточно для описания двух областей (потеряно условие x&gt;=5). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||x–3|–4|≤2), либо использование сложной комбинации каскадных условий.<p class=\"left_margin\">В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, т.е. программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего. В работе (во фрагментах программ) допускается наличие отдельных синтаксических ошибок, не искажающих замысла автора решения.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Демонстрационная версия ЕГЭ—2013 по информатике.",
            "task_id": "4568"
        },
        {
            "answer": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла) Элементы ответа:1) ОбластьУсловие 1 (y>=x*x-2)Условие 2 (y<=4-x*x)Условие 3 (x>=0)Программа выведетОбласть обрабатывается верноAданет——нетВнет———нетСдаданет не принадлежитнетDдаданетне принадлежитдаЕдададапринадлежитдаFдададапринадлежитдаGнет———нетНнет———нет 2) Возможная доработка (Паскаль): if (y<=4–x*x) and (((y>=x*x-2) and (x>=0)) or ((y>=0) and (x<=0))) thenwrite('принадлежит')elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:26.100708",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у - действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. БейсикПаскаль INPUT x, у IF y>=x*x-2 THEN IF y<=4-x*x THEN IF x>=0 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF ENDvar х,у: real; beginreadln(х,у); if у>=х*х-2 then if у<=4-х*х then if x>=0 thenwrite('принадлежит') elsewrite('не принадлежит'end.Си++Алгоритмический язык#include <iostream>using namespace std;int main(){float x,у;cin >> x >> y;if (y>=x*x-2)if (y<=4-x*x)if (x>=0)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х,уввод х,уесли у>=х*х-2 тоесли у<=4-х*х тоесли х>=0 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx = float(input())y = float(input())if y>=x*x-2:    if y<=4-x*x:        if x>=0:            print(\"принадлежит\")        else:            print(\"не принадлежит\") Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D, Е, F, G, Н). Точки, лежащие на границах областей, отдельно не рассматривать. Границами областей А и Н являются параболы и ось Оу.В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1(y >= x*x-2)Условие 2(y <= 4-x*x)Условие 3(x >= 0)Программа выведетОбласть обрабатывается верноABCDEFGH ",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949410\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=7750\" style=\"float:right;margin:10px\" width=\"290\"/><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у - действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"1\"><tr><th>Бейсик</th><th>Паскаль</th></tr><tr><td><p><div class=\"source_code lang_basic\"><p> INPUT x, у<p> IF y&gt;=x*x-2 THEN<p> IF y&lt;=4-x*x THEN<p> IF x&gt;=0 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END</p></p></p></p></p></p></p></p></p></p></p></div></p></td><td><p><div class=\"source_code lang_pascal\"><p>var х,у: real; <p>begin<p>readln(х,у); <p>if у&gt;=х*х-2 then <p>if у&lt;=4-х*х then <p>if x&gt;=0 then<p>write('принадлежит') <p>else<p>write('не принадлежит'<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td></tr><p><tr><th>Си++</th><th>Алгоритмический язык</th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>float x,у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&gt;=x*x-2)<p>if (y&lt;=4-x*x)<p>if (x&gt;=0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х,у<p>ввод х,у<p>если у&gt;=х*х-2 то<p>если у&lt;=4-х*х то<p>если х&gt;=0 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>y = float(input())<p>if y&gt;=x*x-2:<p>    if y&lt;=4-x*x:<p>        if x&gt;=0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D, Е, F, G, Н). Точки, лежащие на границах областей, отдельно не рассматривать. Границами областей А и Н являются параболы и ось Оу.<p class=\"left_margin\">В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1<br/>(y &gt;= x*x-2)</td><td>Условие 2<br/>(y &lt;= 4-x*x)</td><td>Условие 3<br/>(x &gt;= 0)</td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr><td>B</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>C</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>E</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>H</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr></table><p> </p></p></center></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла) Элементы ответа:1) ОбластьУсловие 1 (y>=x*x-2)Условие 2 (y<=4-x*x)Условие 3 (x>=0)Программа выведетОбласть обрабатывается верноAданет——нетВнет———нетСдаданет не принадлежитнетDдаданетне принадлежитдаЕдададапринадлежитдаFдададапринадлежитдаGнет———нетНнет———нет 2) Возможная доработка (Паскаль): if (y<=4–x*x) and (((y>=x*x-2) and (x>=0)) or ((y>=0) and (x<=0))) thenwrite('принадлежит')elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4702\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла)<p> Элементы ответа:<p class=\"left_margin\">1) <table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y&gt;=x*x-2)</p></td><td>Условие 2 <p class=\"left_margin\">(y&lt;=4-x*x)</p></td><td>Условие 3 <p class=\"left_margin\">(x&gt;=0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>нет</td><td> не принадлежит</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2) Возможная доработка (Паскаль):<p> </p><p><font face=\"courier\">if (y&lt;=4–x*x) and (((y&gt;=x*x-2) and (x&gt;=0)) or ((y&gt;=0) and (x&lt;=0))) then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></font><p> </p><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4702"
        },
        {
            "answer": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла) Элементы ответа:1) ОбластьУсловие 1 (y>=x*x-2)Условие 2 (y<=4-x*x)Условие 3 (x>=0)Программа выведетОбласть обрабатывается верноAданет——нетВнет———нетСдаданетне принадлежитнетDдаданетне принадлежитдаЕдададапринадлежитдаFдададапринадлежитдаGнет———нетНнет———нет 2) Возможная доработка (Паскаль): if (y<=4-x*x) and ((y>=0)and(x<=0)) or ((x>0)and(y>=x*x-2)) thenwrite('принадлежит')elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "parsed": "2019-04-29 21:10:26.533546",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно. БэйсикПаскаль INPUT x, у IF y>=x*x-2 THEN IF y<=4-x*x THEN IF x>=0 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END var х,у: real; beginreadln(х,у); if у>=х*х-2 then if у<=4-х*х then if x>=0 thenwrite('принадлежит') elsewrite('не принадлежит'end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main(){float x,у;cin >> x >> y;if (y>=x*x-2)if (y<=4-x*x)if (x>=0)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х,уввод х,уесли у>=х*х-2 тоесли у<=4-х*х тоесли х>=0 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx,y = float(input())if y>=x*x-2:    if y<=4-x*x:        if x>=0:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D, Е, F, G, Н). Точки, лежащие на границах областей, отдельно не рассматривать. Границами областей А и Н являются параболы и ось Оу. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1(y >= x*x-2)Условие 2(y <= 4-x*x)Условие 3(x >= 0)Программа выведетОбласть обрабатывается верноABCDEFGH ",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949378\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Программист торопился и написал программу неправильно.<p><img src=\"/get_file?id=7751\" style=\"float:right;margin:10px\" width=\"270\"/><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x, у<p> IF y&gt;=x*x-2 THEN<p> IF y&lt;=4-x*x THEN<p> IF x&gt;=0 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var х,у: real; <p>begin<p>readln(х,у); <p>if у&gt;=х*х-2 then <p>if у&lt;=4-х*х then <p>if x&gt;=0 then<p>write('принадлежит') <p>else<p>write('не принадлежит'<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>float x,у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y&gt;=x*x-2)<p>if (y&lt;=4-x*x)<p>if (x&gt;=0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х,у<p>ввод х,у<p>если у&gt;=х*х-2 то<p>если у&lt;=4-х*х то<p>если х&gt;=0 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&gt;=x*x-2:<p>    if y&lt;=4-x*x:<p>        if x&gt;=0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D, Е, F, G, Н). Точки, лежащие на границах областей, отдельно не рассматривать. Границами областей А и Н являются параболы и ось Оу. В столбцах условий укажите \"да\", если условие выполнится, \"нет\", если условие не выполнится, \"—\" (прочерк), если условие не будет проверяться, \"не изв.\", если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце \"Программа выведет\" укажите, что программа выведет на экран. Если программа ничего не выводит, напишите \"—\" (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите \"не изв\". В последнем столбце укажите \"да\" или \"нет\".<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев ее неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1<br/>(y &gt;= x*x-2)</td><td>Условие 2<br/>(y &lt;= 4-x*x)</td><td>Условие 3<br/>(x &gt;= 0)</td><td>Программа выведет</td><td>Область обрабатывается верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr><td>B</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>C</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>E</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>F</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>G</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr><tr><td>H</td><td></td><td></td><td></td><td></td><td></td></tr><tr></tr><tr></tr><tr></tr></table><p> </p></p></center></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла) Элементы ответа:1) ОбластьУсловие 1 (y>=x*x-2)Условие 2 (y<=4-x*x)Условие 3 (x>=0)Программа выведетОбласть обрабатывается верноAданет——нетВнет———нетСдаданетне принадлежитнетDдаданетне принадлежитдаЕдададапринадлежитдаFдададапринадлежитдаGнет———нетНнет———нет 2) Возможная доработка (Паскаль): if (y<=4-x*x) and ((y>=0)and(x<=0)) or ((x>0)and(y>=x*x-2)) thenwrite('принадлежит')elsewrite('не принадлежит') (могут быть и другие способы доработки).",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4734\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Содержание верного ответа и указания по оцениванию (допускаются иные формулировки ответа, не искажающие его смысла)<p> Элементы ответа:<p class=\"left_margin\">1) <table border=\"1\" rules=\"all\"><tr><td>Область</td><td>Условие 1 <p class=\"left_margin\">(y&gt;=x*x-2)</p></td><td>Условие 2 <p class=\"left_margin\">(y&lt;=4-x*x)</p></td><td>Условие 3 <p class=\"left_margin\">(x&gt;=0)</p></td><td>Программа выведет</td><td>Область обрабатывается <p>верно</p></td></tr><tr><td>A</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>В</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>С</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>нет</td></tr><tr><td>D</td><td>да</td><td>да</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr><td>Е</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>F</td><td>да</td><td>да</td><td>да</td><td>принадлежит</td><td>да</td></tr><tr><td>G</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr><tr><td>Н</td><td>нет</td><td>—</td><td>—</td><td>—</td><td>нет</td></tr></table><p> </p><p class=\"left_margin\">2) Возможная доработка (Паскаль):<p> </p><p><font face=\"courier\">if (y&lt;=4-x*x) and ((y&gt;=0)and(x&lt;=0)) or ((x&gt;0)and(y&gt;=x*x-2)) then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></font><p> </p><p class=\"left_margin\">(могут быть и другие способы доработки).</p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4734"
        },
        {
            "answer": "Решение.2) Код на языке Паскаль:  if (abs(x)<=1) or (5<=abs(x)) and (abs(x)<=7) then write('принадлежит') else write('не принадлежит'); Возможны и другие способы доработки.",
            "parsed": "2019-04-29 21:09:52.888342",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков (включая границы). Программист торопился и написал программу неправильно. БэйсикПаскаль INPUT х IF х>=-7 OR х<=1 THEN IF х>=-5 AND х<=5 THEN IF х>=-1 AND x<=7 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END var х: real;begin\treadln(х);if (x >=-7) or (x <= 1) thenif (x >= -5) and (x <= 5) thenif (x >= -1) and (x <= 7) then write('принадлежит')elsewrite('не принадлежит')end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main(){float x;cin >> x;if (x >= -7 || x <= 1)if (x >= -5 && x<= 5)if (x >= -1 && x <= 7)cout << \"принадлежит\";elsecout << не принадлежит;}алгначвещ хввод xесли х >= -7 или х<=1 тоесли х >= -5 и х<=5 тоесли х >= -1 и х<=7 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx = int(input())if (x >=-7) or (x <= 1):    if (x >= -5) and (x <= 5):        if (x >= -1) and (x <= 7):            print(\"принадлежит\")        else:            print(\"не принадлежит\")    Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументе, принадлежащем различным областям (А, В, С, D, Е, F, G). Точки, лежащие на границах областей, отдельно не рассматривать.В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области.В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.) ОбластьУсловие 1(x >= -7 или x <= 1)Условие 2(x >= -5 и x <= 5)Условие 3(x >= -1 и x <= 7)ПрограммавыведетОбластьобрабатываетсяверноABCDEFG ",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949255\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT х<p> IF х&gt;=-7 OR х&lt;=1 THEN<p> IF х&gt;=-5 AND х&lt;=5 THEN<p> IF х&gt;=-1 AND x&lt;=7 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var х: real;<p>begin\t<p>readln(х);<p>if (x &gt;=-7) or (x &lt;= 1) then<p>if (x &gt;= -5) and (x &lt;= 5) then<p>if (x &gt;= -1) and (x &lt;= 7) then <p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>float x;<p>cin &gt;&gt; x;<p>if (x &gt;= -7 || x &lt;= 1)<p>if (x &gt;= -5 &amp;&amp; x&lt;= 5)<p>if (x &gt;= -1 &amp;&amp; x &lt;= 7)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; не принадлежит;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х<p>ввод x<p>если х &gt;= -7 или х&lt;=1 то<p>если х &gt;= -5 и х&lt;=5 то<p>если х &gt;= -1 и х&lt;=7 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if (x &gt;=-7) or (x &lt;= 1):<p>    if (x &gt;= -5) and (x &lt;= 5):<p>        if (x &gt;= -1) and (x &lt;= 7):<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><center><img src=\"/get_file?id=6786\" style=\"margin:10px\"/></center> <p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументе, принадлежащем различным областям (А, В, С, D, Е, F, G). Точки, лежащие на границах областей, отдельно не рассматривать.<p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области.<p class=\"left_margin\">В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><center><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<br/>(x &gt;= -7 или x &lt;= 1)</td><td style=\"text-align:center\">Условие 2<br/>(x &gt;= -5 и x &lt;= 5)</td><td style=\"text-align:center\">Условие 3<br/>(x &gt;= -1 и x &lt;= 7)</td><td style=\"text-align:center\">Программа<br/>выведет</td><td style=\"text-align:center\">Область<br/>обрабатывается<br/>верно</td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr></table><p> </p></p></center></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.2) Код на языке Паскаль:  if (abs(x)<=1) or (5<=abs(x)) and (abs(x)<=7) then write('принадлежит') else write('не принадлежит'); Возможны и другие способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4859\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><img src=\"/get_file?id=12011\" style=\"margin:10px auto;display:block\"/><p class=\"left_margin\">2) Код на языке Паскаль:<p> </p><p> if (abs(x)&lt;=1) or (5&lt;=abs(x)) and (abs(x)&lt;=7) then<p> write('принадлежит')<p> else<p> write('не принадлежит');<p> </p><p class=\"left_margin\">Возможны и другие способы доработки.</p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4859"
        },
        {
            "answer": "Решение.2) для удобства вывода ответа заведём переменную типа boolean, которая будет истиной, если точка принадлежит закрашенной области, и ложью в противном случае. Код на языке Паскаль: ans:=false;if (x >= -5) and (x <= -3) then ans := true;if (x >= -1) and (x <= 1) then ans := true;if (x >= 3) and (x <= 5) then ans := true;if (ans = true) then write('принадлежит') else write('не принадлежит');",
            "parsed": "2019-04-29 21:09:53.672108",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х - действительное число) и определяется принадлежность этой точки одному из выделенных отрезков (включая границы). Программист торопился и написал программу неправильно. БэйсикПаскаль INPUT х IF х>=-5 OR х<=1 THEN IF х>=-3 AND x<=3 THEN IF x>=-1 AND x<=5 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END var х: real;begin\treadln(х);if\t(x>=-5) or (x<=1) thenif (x>=-3) and (x<=3) thenif (x>=-1) and (x<=5) then write('принадлежит')elsewrite('не принадлежит')end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main(){float x;cin >> x;if (x>=-5 || x<=l)if (x>=-3 && x<=3)if (x>=-1 && x<=5)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ хввод Xесли х>=-5 или х<=1 тоесли х>=-3 и х<=3 тоесли х>=-1 и х<=5 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx = int(input())if (x >= -5) or (x <= 1):    if (x >= -3) and (x <= 3):        if (x >= -l) and (x <= 5):            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументе, принадлежащем различным областям (А, В, С, D, Е, F, G). Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области.В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)  ОбластьУсловие 1(x >= -5 или x <= 1)Условие 2(x >= -3 и x <= 3)Условие 3(x >= -1 и x <= 5)ПрограммавыведетОбластьобрабатываетсяверноABCDEFG ",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949757\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х - действительное число) и определяется принадлежность этой точки одному из выделенных отрезков (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT х<p> IF х&gt;=-5 OR х&lt;=1 THEN<p> IF х&gt;=-3 AND x&lt;=3 THEN<p> IF x&gt;=-1 AND x&lt;=5 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var х: real;<p>begin\t<p>readln(х);<p>if\t(x&gt;=-5) or (x&lt;=1) then<p>if (x&gt;=-3) and (x&lt;=3) then<p>if (x&gt;=-1) and (x&lt;=5) then write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>float x;<p>cin &gt;&gt; x;<p>if (x&gt;=-5 || x&lt;=l)<p>if (x&gt;=-3 &amp;&amp; x&lt;=3)<p>if (x&gt;=-1 &amp;&amp; x&lt;=5)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х<p>ввод X<p>если х&gt;=-5 или х&lt;=1 то<p>если х&gt;=-3 и х&lt;=3 то<p>если х&gt;=-1 и х&lt;=5 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if (x &gt;= -5) or (x &lt;= 1):<p>    if (x &gt;= -3) and (x &lt;= 3):<p>        if (x &gt;= -l) and (x &lt;= 5):<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=6960\" style=\"margin:10px auto;display:block\"/><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументе, принадлежащем различным областям (А, В, С, D, Е, F, G). Точки, лежащие на границах областей, отдельно не рассматривать. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области.<p class=\"left_margin\">В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)<p> </p><p> </p><center><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<br/>(x &gt;= -5 или x &lt;= 1)</td><td style=\"text-align:center\">Условие 2<br/>(x &gt;= -3 и x &lt;= 3)</td><td style=\"text-align:center\">Условие 3<br/>(x &gt;= -1 и x &lt;= 5)</td><td style=\"text-align:center\">Программа<br/>выведет</td><td style=\"text-align:center\">Область<br/>обрабатывается<br/>верно</td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr></table><p> </p></p></center></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.2) для удобства вывода ответа заведём переменную типа boolean, которая будет истиной, если точка принадлежит закрашенной области, и ложью в противном случае. Код на языке Паскаль: ans:=false;if (x >= -5) and (x <= -3) then ans := true;if (x >= -1) and (x <= 1) then ans := true;if (x >= 3) and (x <= 5) then ans := true;if (ans = true) then write('принадлежит') else write('не принадлежит');",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4865\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><img src=\"/get_file?id=19825\" style=\"margin:10px auto;display:block\"/><p class=\"left_margin\">2) для удобства вывода ответа заведём переменную типа boolean, которая будет истиной, если точка принадлежит закрашенной области, и ложью в противном случае. Код на языке Паскаль:<p> </p><p>ans:=false;<p>if (x &gt;= -5) and (x &lt;= -3) then ans := true;<p>if (x &gt;= -1) and (x &lt;= 1) then ans := true;<p>if (x &gt;= 3) and (x &lt;= 5) then ans := true;<p>if (ans = true) then write('принадлежит') else write('не принадлежит');</p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4865"
        },
        {
            "answer": "Решение.Для удобства вывода ответа заведём переменную типа boolean, которая будет истиной, если точка принадлежит закрашенной области, и ложью в противном случае. Код на языке Паскаль: ans:=false;if x * x + y * y <= 25 then  begin  if (y <= x + 1) then    begin    if x <= 0 then ans := true;    if (x >= 0) and (y >= 0) and (y <= 4 - x * x) then ans:= true;    end;  if (x >= 0) and (y <= 4 - x * x) and (y >= x + 1) then ans := true;  end;if ans then write('принадлежит') else write('не принадлежит');",
            "parsed": "2019-04-29 21:10:26.973926",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). ПаскальБейсикvar x, у:  real;beginreadln(x,y);if x*x +  y*y <=  25 thenif y <= 4 - x*x thenif y <= x+1 thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT  х,   у IF x*x + у*у  <=  25 THEN IF  y <= 4 - x*x THEN IF  y <= x + 1 THEN PRINT  \"принадлежит\" ELSE PRINT  \"не принадлежит\" ENDIF END IF END IF ENDСи++Алгоритмический язык#include <iostream>using namespace std; int main (void) {float x,y;cin >> x >> y;if   (x*x +  y*y <=  25)if   (y <=  4 - x * x)if   (y <=  x + 1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х,уввод х,уесли    х * х +  у * у <=  25  тоесли y <= 4 - x * x  тоесли y <= x + 1  товывод  'принадлежит'иначевывод  'не принадлежит'всевсевсеконPythonx,y = float(input())if x*x +  y*y <=  25:    if y <=  4 - x * x:        if y <=  x + 1:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  При проверке работы программа выполнялась по шагам для некоторых контрольных значений x и y. при этом был заполнен протокол тестирования, содержащий следующую информацию.  Область — часть плоскости, которой принадлежит проверяемая точка (все возможные области отмечены на рисунке буквами A, B, C, ... W).  Условие 1, Условие 2, Условие 3 — результат проверки соответствующего условия (да или нет). Если условие не проверялось, в протокол записывался прочерк.  Вывод — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк.  Верно — итоговое заключение (да или нет) о правильности результата работы программы при данных значениях x и y.В результате неаккуратного обращения протокол был испорчен, частично сохранилось только три строки: ОбластьУсловие 1 (х*х+у*у <=  25)Условие 2 (y <= 4 - x * x)Условие 3 (y <= x + 1)ВыводВернода —          принадлежитнет нет нет Последовательно выполните следующее.1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы (это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы).",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949664\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=7143\" style=\"float:right;margin:10px\"/><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы).<p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><p>var x, у:  real;<p>begin<p>readln(x,y);<p>if x*x +  y*y &lt;=  25 then<p>if y &lt;= 4 - x*x then<p>if y &lt;= x+1 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><td><div class=\"source_code lang_basic\"><p> INPUT  х,   у<p> IF x*x + у*у  &lt;=  25 THEN<p> IF  y &lt;= 4 - x*x THEN<p> IF  y &lt;= x + 1 THEN<p> PRINT  \"принадлежит\"<p> ELSE<p> PRINT  \"не принадлежит\"<p> ENDIF<p> END IF<p> END IF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main (void) {<p>float x,y;<p>cin &gt;&gt; x &gt;&gt; y;<p>if   (x*x +  y*y &lt;=  25)<p>if   (y &lt;=  4 - x * x)<p>if   (y &lt;=  x + 1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х,у<p>ввод х,у<p>если    х * х +  у * у &lt;=  25  то<p>если y &lt;= 4 - x * x  то<p>если y &lt;= x + 1  то<p>вывод  'принадлежит'<p>иначе<p>вывод  'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if x*x +  y*y &lt;=  25:<p>    if y &lt;=  4 - x * x:<p>        if y &lt;=  x + 1:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">При проверке работы программа выполнялась по шагам для некоторых контрольных значений x и y. при этом был заполнен протокол тестирования, содержащий следующую информацию.<p> </p><p><b><i> Область</i></b> — часть плоскости, которой принадлежит проверяемая точка (все возможные области отмечены на рисунке буквами A, B, C, ... W).<p> </p><p><b><i> Условие 1, Условие 2, Условие 3</i></b> — результат проверки соответствующего условия (да или нет). Если условие не проверялось, в протокол записывался прочерк.<p> </p><p><b><i> Вывод</i></b> — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк.<p> </p><p><b><i> Верно</i></b> — итоговое заключение (да или нет) о правильности результата работы программы при данных значениях x и y.<p class=\"left_margin\">В результате неаккуратного обращения протокол был испорчен, частично сохранилось только три строки:<p> </p><p><table border=\"1\"><tr><td><b>Область</b></td><td><b>Условие 1 <p class=\"left_margin\">(х*х+у*у &lt;=  25)</p></b></td><td><b>Условие 2 (y &lt;= 4 - x * x)</b></td><td><b>Условие 3 (y &lt;= x + 1)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><p><tr><td></td><td>да</td><td></td><td> </td><td>—        </td><td></td></tr><p><tr><td></td><td> </td><td></td><td> </td><td>принадлежит</td><td>нет</td></tr><p><tr><td></td><td> </td><td></td><td>нет</td><td></td> <td>нет</td></tr><p></p></p></p></p></table><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы (это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы).</p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Для удобства вывода ответа заведём переменную типа boolean, которая будет истиной, если точка принадлежит закрашенной области, и ложью в противном случае. Код на языке Паскаль: ans:=false;if x * x + y * y <= 25 then  begin  if (y <= x + 1) then    begin    if x <= 0 then ans := true;    if (x >= 0) and (y >= 0) and (y <= 4 - x * x) then ans:= true;    end;  if (x >= 0) and (y <= 4 - x * x) and (y >= x + 1) then ans := true;  end;if ans then write('принадлежит') else write('не принадлежит');",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol4956\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><img src=\"/get_file?id=18308\" style=\"margin:10px auto;display:block\"/><p class=\"left_margin\">Для удобства вывода ответа заведём переменную типа boolean, которая будет истиной, если точка принадлежит закрашенной области, и ложью в противном случае. Код на языке Паскаль:<p> </p><p>ans:=false;<p>if x * x + y * y &lt;= 25 then<p>  begin<p>  if (y &lt;= x + 1) then<p>    begin<p>    if x &lt;= 0 then ans := true;<p>    if (x &gt;= 0) and (y &gt;= 0) and (y &lt;= 4 - x * x) then ans:= true;<p>    end;<p>  if (x &gt;= 0) and (y &lt;= 4 - x * x) and (y &gt;= x + 1) then ans := true;<p>  end;<p>if ans then write('принадлежит') else write('не принадлежит');</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "4956"
        },
        {
            "answer": "Решение.1.ОбластьУсловие 1 (y >= x*x – 6)Условие 2 (x*x + y*y<= 16)Условие 3 (x >= 0)ВыводВерноBCQRданет——нетDSнет—дапринадлежитнетAEKPнет—нетне принадлежитдаFGLMдада—принадлежитдаHNнет—дапринадлежитда2.Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FGLM, HN и QR. При этом получается такой фрагмент программы (пример на Паскале): if (у>= х*х 6) and (х*х+у*у<= 16) or (у>= х*х 6) and (у<=0) or (х*х+у*у<= 16) and (х>=0)then write('принадлежит')else write('не принадлежит') Обратите внимание: в данном решении вместо строгих условий (у<0) и (х>0) можно было бы использовать нестрогие, это не влияет на правильность программы. Возможны и другие способы доработки программы.",
            "parsed": "2019-04-29 21:10:32.764532",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Ученик написал такую программу: ПаскальБейсикvar x, y: real; beginreadln(x,у);if у >= x*x − 6 then beginif x*x + y*y <= 16 then write('принадлежит')endelseif x >= 0 thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT х, у IF у >= х*х − 6 THEN IF х*х + у*у <= 16 THEN PRINT \"принадлежит\" ELSE IF х => О THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\"  END IF  END IF  ENDСи++Алгоритмический язык#include <iostream>using namespace std;int main(){float x, y;cin >> x >> y; if (y >= x*x − 6) {if (x*x +y*y <= 16) cout << принадлежит;}elseif (x >= 0)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, у ввод х, уесли у >= х*х − 6 тоесли х*х + у*у <= 16 товывод 'принадлежит'всеиначеесли х >= 0 товывод 'принадлежит' иначевывод 'не принадлежит'всевсеконPythonx,y = float(input())if у >= х*х − 6:    if х*х + у*у <= 16:        print(\"принадлежит\")    else:        if х => 0:            print(\"принадлежит\")        else:            print(\"не принадлежит\") При проверке работы программа выполнялась по шагам для некоторых контрольных значений х и у, при этом был заполнен протокол тестирования. В результате неаккуратного обращения протокол был испорчен, частично сохранились только четыре строки: ОбластьУсловие 1 (y >= x*x – 6)Условие 2 (x*x + y*y<= 16)Условие 3 (x >= 0)ВыводВернода—принадлежитнетне принадлежитда—дадада Графы протокола содержат следующую информацию. Область - часть плоскости, которой принадлежит проверяемая точка. (Всевозможные области отмечены на рисунке буквами А, В, С, ... S.) Условие 1, Условие2, Условие 3 — результат проверки соответствующегоусловия (да или нет). Если условие не проверялось, в протокол записывалсяпрочерк. Вывод — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк. Верно - итоговое заключение (да или нет) о правильности результата работы программы при данных значениях х и у. Последовательно выполните следующее.1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949559\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (х, у — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы). Ученик написал такую программу:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var x, y: real; <p>begin<p>readln(x,у);<p>if у &gt;= x*x − 6 then begin<p>if x*x + y*y &lt;= 16 then write('принадлежит')<p>end<p>else<p>if x &gt;= 0 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\"><p> INPUT х, у<p> IF у &gt;= х*х − 6 THEN<p> IF х*х + у*у &lt;= 16 THEN PRINT \"принадлежит\"<p> ELSE<p> IF х =&gt; О THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\" <p> END IF <p> END IF <p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><font face=\"Courier\"><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>float x, y;<p>cin &gt;&gt; x &gt;&gt; y; <p>if (y &gt;= x*x − 6) {<p>if (x*x +y*y &lt;= 16) cout &lt;&lt; принадлежит;<p>}<p>else<p>if (x &gt;= 0)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></font></td><td><font face=\"Courier\"><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ х, у <p>ввод х, у<p>если у &gt;= х*х − 6 то<p>если х*х + у*у &lt;= 16 то<p>вывод 'принадлежит'<p>все<p>иначе<p>если х &gt;= 0 то<p>вывод 'принадлежит' <p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></font></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if у &gt;= х*х − 6:<p>    if х*х + у*у &lt;= 16:<p>        print(\"принадлежит\")<p>    else:<p>        if х =&gt; 0:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p><img src=\"/get_file?id=7752\" style=\"margin:10px auto;display:block\" width=\"300\"/><p class=\"left_margin\">При проверке работы программа выполнялась по шагам для некоторых контрольных значений х и у, при этом был заполнен протокол тестирования. В результате неаккуратного обращения протокол был испорчен, частично сохранились только четыре строки:<p> </p><p><table border=\"1\" rules=\"all\"><tr><td><b>Область</b></td><td><b>Условие 1 (y &gt;= x*x – 6)</b></td><td><b>Условие 2 (x*x + y*y&lt;= 16)</b></td><td><b>Условие 3 (x &gt;= 0)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><tr><td></td><td>да</td><td></td><td></td><td>—</td><td></td></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td></td><td>принадлежит</td><td>нет</td></tr><tr></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td></td><td>не принадлежит</td><td>да</td></tr><tr></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td>—</td><td></td><td>да</td></tr><p><tr><td></td><td></td><td></td><td>да</td><td></td><td>да</td></tr></p></table><p> </p><p class=\"left_margin\">Графы протокола содержат следующую информацию.<p> </p><p><b>Область</b> - часть плоскости, которой принадлежит проверяемая точка. (Все<p>возможные области отмечены на рисунке буквами А, В, С, ... S.)<p> </p><p><b>Условие 1, Условие2, Условие 3</b> — результат проверки соответствующего<p>условия (да или нет). Если условие не проверялось, в протокол записывался<p>прочерк.<p> </p><p><b>Вывод</b> — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк.<p> </p><p><b>Верно</b> - итоговое заключение (да или нет) о правильности результата работы программы при данных значениях х и у.<p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.ОбластьУсловие 1 (y >= x*x – 6)Условие 2 (x*x + y*y<= 16)Условие 3 (x >= 0)ВыводВерноBCQRданет——нетDSнет—дапринадлежитнетAEKPнет—нетне принадлежитдаFGLMдада—принадлежитдаHNнет—дапринадлежитда2.Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FGLM, HN и QR. При этом получается такой фрагмент программы (пример на Паскале): if (у>= х*х 6) and (х*х+у*у<= 16) or (у>= х*х 6) and (у<=0) or (х*х+у*у<= 16) and (х>=0)then write('принадлежит')else write('не принадлежит') Обратите внимание: в данном решении вместо строгих условий (у<0) и (х>0) можно было бы использовать нестрогие, это не влияет на правильность программы. Возможны и другие способы доработки программы.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5067\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<p><table border=\"1\" rules=\"all\"><tr><td><b>Область</b></td><td><b>Условие 1 (y &gt;= x*x – 6)</b></td><td><b>Условие 2 <p class=\"left_margin\">(x*x + y*y&lt;= 16)</p></b></td><td><b>Условие 3 (x &gt;= 0)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><tr><td>BCQR</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr></tr><tr></tr><tr><td>DS</td><td>нет</td><td>—</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr></tr><tr></tr><tr></tr><tr><td>AEKP</td><td>нет</td><td>—</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr></tr><tr></tr><tr></tr><p><tr><p><td>FGLM</td><p><td>да</td><p><td>да</td><p><td>—</td><p><td>принадлежит</td><p><td>да</td><p></p></p></p></p></p></p></p></tr><p><tr><p><td>HN</td><p><td>нет</td><p><td>—</td><p><td>да</td><p><td>принадлежит</td><p><td>да</td><p></p></p></p></p></p></p></p></tr><p></p></p></p></table><p class=\"left_margin\">2.Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FGLM, HN и QR. При этом получается такой фрагмент программы (пример на Паскале):<p> </p><p>if (у&gt;= х*х 6) and (х*х+у*у&lt;= 16) or (у&gt;= х*х 6) and (у&lt;=0) or (х*х+у*у&lt;= 16) and (х&gt;=0)<p>then <p>write('принадлежит')<p>else <p>write('не принадлежит')<p> </p><p class=\"left_margin\">Обратите внимание: в данном решении вместо строгих условий (у&lt;0) и (х&gt;0) можно было бы использовать нестрогие, это не влияет на правильность программы. Возможны и другие способы доработки программы.</p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "5067"
        },
        {
            "answer": "Решение.1.ОбластьУсловие 1 (у >= 1-x)Условие 2 (y <= 2-2*x*x)Условие 3 (y >= x*x-5)ВыводВерноBCDNPданет——нетKLнет—дапринадлежитнетAHQRнет—нетне принадлежитдаGдада—принадлежитда2. Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FGLM, HN и QR. При этом получается такой фрагмент программы (пример на Паскале): if ((y<=1-x) and (y>= x*x -5) and (y>=0)) or((y <= 2 - 2*x*x) and (y>=0)) or((y <= 1-x) and (y>= x*x - 5) and (y>= 2- 2*x*x) and ( x>= 0))thenwrite('принадлежит')else write('не принадлежит') Возможны и другие способы доработки программы",
            "parsed": "2019-04-29 21:10:27.416284",
            "question": " Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы).Ученик написал такую программу: ПаскальБейсикvar x, y: real; beginreadln(x,у);if у >= 1-х then beginif у <= 2-2*x*x then write('принадлежит')end elseif у >= x*x-5 thenwrite('принадлежит')elsewrite('не принадлежит')end. INPUT х, у IF у >= 1-х THEN IF у <= 2-2*х*х THEN PRINT \"принадлежит\" ELSE IF у >= х*х-5 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\"  END IF  END IF  ENDСи++Алгоритмический язык#include <iostream>using namespace std; int main (){float x, у;cin >> x >> y;if (y >= 1-х) {if (y <= 2-2*x*x) cout << \"принадлежит\";}elseif (y >= x*x-5)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ х, уввод х, уесли у >= 1-х тоесли у <= 2-2*х*х товывод 'принадлежит'все иначеесли у >= х*х-5 товывод 'принадлежит' иначевывод 'не принадлежит'всевсеконPythonx,y = float(input())if у >= 1-х:    if у <= 2-2*x*x:        print(\"принадлежит\")    else:        if у >= x*x-5:            print(\"принадлежит\")        else:            print(\"не принадлежит\") При проверке работы программа выполнялась по шагам для некоторых контрольных значений х и у, при этом был заполнен протокол тестирования. В результате неаккуратного обращения протокол был испорчен, частично сохранились только четыре строки: ОбластьУсловие 1 (у >= 1-x)Условие 2 (y <= 2−2*x*x)Условие 3 (y >= x*x−5)ВыводВерно—принадлежитнетне принадлежитда—да Графы протокола содержат следующую информацию. Область - часть плоскости, которой принадлежит проверяемая точка. (Все возможные области отмечены на рисунке буквами А, В, С, ... S.) Условие 1, Условие2, Условие 3 — результат проверки соответствующего условия (да или нет). Если условие не проверялось, в протокол записывался прочерк. Вывод — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк. Верно — итоговое заключение (да или нет) о правильности результата работы программы при данных значениях х и у. Последовательно выполните следующее.1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948891\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=23585\" style=\"float:right;margin:10px\" width=\"400\"/><p> </p><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы).<p class=\"left_margin\">Ученик написал такую программу:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><font face=\"Courier\"><p><div class=\"source_code lang_pascal\"><p>var x, y: real; begin<p>readln(x,у);<p>if у &gt;= 1-х then begin<p>if у &lt;= 2-2*x*x then write('принадлежит')<p>end else<p>if у &gt;= x*x-5 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></font></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\"><p> INPUT х, у<p> IF у &gt;= 1-х THEN<p> IF у &lt;= 2-2*х*х THEN PRINT \"принадлежит\"<p> ELSE<p> IF у &gt;= х*х-5 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\" <p> END IF <p> END IF <p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_c\"><font face=\"Courier\">#include &lt;iostream&gt;<p>using namespace std; <p>int main (){<p>float x, у;<p>cin &gt;&gt; x &gt;&gt; y;<p>if (y &gt;= 1-х) {<p>if (y &lt;= 2-2*x*x) cout &lt;&lt; \"принадлежит\";<p>}<p>else<p>if (y &gt;= x*x-5)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td><td><div class=\"source_code lang_alg\"><font face=\"Courier\">алг<p>нач<p>вещ х, у<p>ввод х, у<p>если у &gt;= 1-х то<p>если у &lt;= 2-2*х*х то<p>вывод 'принадлежит'<p>все <p>иначе<p>если у &gt;= х*х-5 то<p>вывод 'принадлежит' <p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if у &gt;= 1-х:<p>    if у &lt;= 2-2*x*x:<p>        print(\"принадлежит\")<p>    else:<p>        if у &gt;= x*x-5:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></p></p></table><p> </p></p></center><p class=\"left_margin\">При проверке работы программа выполнялась по шагам для некоторых контрольных значений х и у, при этом был заполнен протокол тестирования. В результате неаккуратного обращения протокол был испорчен, частично сохранились только четыре строки:<p> </p><p><table border=\"1\" rules=\"all\"><tr><td><b>Область</b></td><td><b>Условие 1 (у &gt;= 1-x)</b></td><td><b>Условие 2 (y &lt;= 2−2*x*x)</b></td><td><b>Условие 3 (y &gt;= x*x−5)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><tr><td></td><td></td><td></td><td></td><td>—</td><td></td></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td></td><td>принадлежит</td><td>нет</td></tr><tr></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td></td><td>не принадлежит</td><td>да</td></tr><tr></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td>—</td><td></td><td>да</td></tr></table><p> </p><p class=\"left_margin\">Графы протокола содержат следующую информацию.<p> </p><p><b>Область</b> - часть плоскости, которой принадлежит проверяемая точка. (Все возможные области отмечены на рисунке буквами А, В, С, ... S.)<p> </p><p><b>Условие 1, Условие2, Условие 3</b> — результат проверки соответствующего условия (да или нет). Если условие не проверялось, в протокол записывался прочерк.<p> </p><p><b>Вывод</b> — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк.<p> </p><p><b>Верно</b> — итоговое заключение (да или нет) о правильности результата работы программы при данных значениях х и у.<p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.ОбластьУсловие 1 (у >= 1-x)Условие 2 (y <= 2-2*x*x)Условие 3 (y >= x*x-5)ВыводВерноBCDNPданет——нетKLнет—дапринадлежитнетAHQRнет—нетне принадлежитдаGдада—принадлежитда2. Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FGLM, HN и QR. При этом получается такой фрагмент программы (пример на Паскале): if ((y<=1-x) and (y>= x*x -5) and (y>=0)) or((y <= 2 - 2*x*x) and (y>=0)) or((y <= 1-x) and (y>= x*x - 5) and (y>= 2- 2*x*x) and ( x>= 0))thenwrite('принадлежит')else write('не принадлежит') Возможны и другие способы доработки программы",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5223\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<p><table border=\"1\" rules=\"all\"><tr><td><b>Область</b></td><td><b>Условие 1 (у &gt;= 1-x)</b></td><td><b>Условие 2 (y &lt;= 2-2*x*x)</b></td><td><b>Условие 3 (y &gt;= x*x-5)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><tr><td>BCDNP</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr></tr><tr></tr><tr><td>KL</td><td>нет</td><td>—</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr></tr><tr></tr><tr></tr><tr><td>AHQR</td><td>нет</td><td>—</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr></tr><tr></tr><tr></tr><tr><td>G</td><td>да</td><td>да</td><td>—</td><td>принадлежит</td><td>да</td></tr></table><p class=\"left_margin\">2. Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FGLM, HN и QR. При этом получается такой фрагмент программы (пример на Паскале):<p> </p><p>if ((y&lt;=1-x) and (y&gt;= x*x -5) and (y&gt;=0)) or<p class=\"left_margin\">((y &lt;= 2 - 2*x*x) and (y&gt;=0)) or<p class=\"left_margin\">((y &lt;= 1-x) and (y&gt;= x*x - 5) and (y&gt;= 2- 2*x*x) and ( x&gt;= 0))<p>then<p>write('принадлежит')<p>else <p>write('не принадлежит')<p> </p><p class=\"left_margin\">Возможны и другие способы доработки программы</p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "5223"
        },
        {
            "answer": "Решение.1.ОбластьУсловие 1 (у >= x+1)Условие 2 (y <= 2−2*x*x)Условие 3 (y >= x*x−5)ВыводВерноАВСНКданет——нетMNнет—дапринадлежитнетPQRGнет—нетне принадлежитдаDдада—принадлежитда2. Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FE, D и L. При этом получается такой фрагмент программы (пример на Паскале): if (((у<=х+1) and (у>=х*х-5)) and ((y>=0) or ((y>=2-2*x*x) and (x<=0)))) or ((у<=2-2*х*х) and (у>=0))thenwrite('принадлежит')elsewrite('не принадлежит') Возможны и другие способы доработки программы.",
            "parsed": "2019-04-29 21:10:27.862002",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы).Ученик написал такую программу: ПаскальБейсикvar x, y: real; beginreadln(x,y);if y >= x+1 then beginif y <= 2-2*x*x then write('принадлежит')end elseif y >= x*x-5 thenwrite('принадлежит,)elsewrite('не принадлежит')end. INPUT x, yIF y >= x+1 THENIF y <= 2-2*x*x THEN PRINT \"принадлежит\"ELSEIF y >= x*x-5 THENPRINT \"принадлежит\"ELSEPRINT \"не принадлежит\" END IF END IF ENDСи++Алгоритмический язык#include <iostream>using namespace std; int main(){float x, y;cin >> x >> y; if (y >= x+1) {if (y <= 2-2*x*x) cout << \"принадлежит\";}elseif (y >= x*x-5)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алг начвещ x, yввод x, yесли y >= x+1 тоесли y <= 2-2*x*x товывод 'принадлежит'всеиначеесли y >= x*x-5 товывод 'принадлежит' иначевывод 'не принадлежит'всевсеконPythonx,y = float(input())if y >= x+1:    if y <= 2-2*x*x:        print(\"принадлежит\")    else:        if y >= x*x-5:            print(\"принадлежит\")        else:            print(\"не принадлежит\") При проверке работы программа выполнялась по шагам для некоторых контрольных значений х и у, при этом был заполнен протокол тестирования. В результате неаккуратного обращения протокол был испорчен, частично сохранились только четыре строки: ОбластьУсловие 1 (у >= x+1)Условие 2 (y <= 2−2*x*x)Условие 3 (y >= x*x−5)ВыводВерно—принадлежитнетне принадлежитда—да Графы протокола содержат следующую информацию. Область - часть плоскости, которой принадлежит проверяемая точка. (Все возможные области отмечены на рисунке буквами А, В, С, ... S.) Условие 1, Условие2, Условие 3 — результат проверки соответствующего условия (да или нет). Если условие не проверялось, в протокол записывался прочерк. Вывод — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк. Верно - итоговое заключение (да или нет) о правильности результата работы программы при данных значениях х и у. Последовательно выполните следующее.1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948859\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считываются координаты точки на плоскости (x, y — действительные числа) и определяется принадлежность этой точки заданной закрашенной области (включая границы).<p><img src=\"/get_file?id=10793\" style=\"float:right;margin:10px\" width=\"280\"/><p class=\"left_margin\">Ученик написал такую программу:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr align=\"center\" p=\"\"><th>Паскаль</th><th>Бейсик</th></tr><p><tr><td><div class=\"source_code lang_pascal\"><font face=\"Courier\">var x, y: real; begin<p>readln(x,y);<p>if y &gt;= x+1 then begin<p>if y &lt;= 2-2*x*x then write('принадлежит')<p>end <p>else<p>if y &gt;= x*x-5 then<p>write('принадлежит,)<p>else<p>write('не принадлежит')<p>end. <p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td><td><div class=\"source_code lang_basic\"><font face=\"Courier\">INPUT x, y<p class=\"left_margin\">IF y &gt;= x+1 THEN<p class=\"left_margin\">IF y &lt;= 2-2*x*x THEN PRINT \"принадлежит\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">IF y &gt;= x*x-5 THEN<p class=\"left_margin\">PRINT \"принадлежит\"<p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"не принадлежит\" <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td></tr><tr align=\"center\" p=\"\"><th>Си++</th><th>Алгоритмический язык</th></tr><p><tr><td><div class=\"source_code lang_с\"><font face=\"Courier\">#include &lt;iostream&gt;<p>using namespace std; <p>int main(){<p>float x, y;<p>cin &gt;&gt; x &gt;&gt; y; <p>if (y &gt;= x+1) {<p>if (y &lt;= 2-2*x*x) cout &lt;&lt; \"принадлежит\";<p>}<p>else<p>if (y &gt;= x*x-5)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></font></div><p></p></td><td><font face=\"Courier\"><div class=\"source_code lang_alg\"><p>алг <p>нач<p>вещ x, y<p>ввод x, y<p>если y &gt;= x+1 то<p>если y &lt;= 2-2*x*x то<p>вывод 'принадлежит'<p>все<p>иначе<p>если y &gt;= x*x-5 то<p>вывод 'принадлежит' <p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></font></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y &gt;= x+1:<p>    if y &lt;= 2-2*x*x:<p>        print(\"принадлежит\")<p>    else:<p>        if y &gt;= x*x-5:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></p></table><p> </p></p></center><p class=\"left_margin\">При проверке работы программа выполнялась по шагам для некоторых контрольных значений х и у, при этом был заполнен протокол тестирования. В результате неаккуратного обращения протокол был испорчен, частично сохранились только четыре строки:<p> </p><p><table border=\"1\" rules=\"all\"><tr><td><b>Область</b></td><td><b>Условие 1 (у &gt;= x+1)</b></td><td><b>Условие 2 (y &lt;= 2−2*x*x)</b></td><td><b>Условие 3 (y &gt;= x*x−5)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><tr><td></td><td></td><td></td><td></td><td>—</td><td></td></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td></td><td>принадлежит</td><td>нет</td></tr><tr></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td></td><td>не принадлежит</td><td>да</td></tr><tr></tr><tr></tr><tr></tr><tr><td></td><td></td><td></td><td>—</td><td></td><td>да</td></tr></table><p> </p><p class=\"left_margin\">Графы протокола содержат следующую информацию.<p> </p><p><b>Область</b> - часть плоскости, которой принадлежит проверяемая точка. (Все возможные области отмечены на рисунке буквами А, В, С, ... S.)<p> </p><p><b>Условие 1, Условие2, Условие 3</b> — результат проверки соответствующего условия (да или нет). Если условие не проверялось, в протокол записывался прочерк.<p> </p><p><b>Вывод</b> — сообщение, которое вывела программа. Если программа ничего не вывела, в протокол записывался прочерк.<p> </p><p><b>Верно</b> - итоговое заключение (да или нет) о правильности результата работы программы при данных значениях х и у.<p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Восстановите уцелевшие строки протокола, заполнив все клетки таблицы. Там, где содержание восстанавливается неоднозначно, запишите любое возможное значение. Например, если для нескольких областей получается одинаковая строка таблицы, укажите в графе «Область» любую из этих областей.<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.ОбластьУсловие 1 (у >= x+1)Условие 2 (y <= 2−2*x*x)Условие 3 (y >= x*x−5)ВыводВерноАВСНКданет——нетMNнет—дапринадлежитнетPQRGнет—нетне принадлежитдаDдада—принадлежитда2. Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FE, D и L. При этом получается такой фрагмент программы (пример на Паскале): if (((у<=х+1) and (у>=х*х-5)) and ((y>=0) or ((y>=2-2*x*x) and (x<=0)))) or ((у<=2-2*х*х) and (у>=0))thenwrite('принадлежит')elsewrite('не принадлежит') Возможны и другие способы доработки программы.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5255\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<p><table border=\"1\" rules=\"all\"><tr><td><b>Область</b></td><td><b>Условие 1 (у &gt;= x+1)</b></td><td><b>Условие 2 (y &lt;= 2−2*x*x)</b></td><td><b>Условие 3 (y &gt;= x*x−5)</b></td><td><b>Вывод</b></td><td><b>Верно</b></td></tr><tr><td>АВСНК</td><td>да</td><td>нет</td><td>—</td><td>—</td><td>нет</td></tr><tr></tr><tr></tr><tr><td>MN</td><td>нет</td><td>—</td><td>да</td><td>принадлежит</td><td>нет</td></tr><tr></tr><tr></tr><tr></tr><tr><td>PQRG</td><td>нет</td><td>—</td><td>нет</td><td>не принадлежит</td><td>да</td></tr><tr></tr><tr></tr><tr></tr><tr><td>D</td><td>да</td><td>да</td><td>—</td><td>принадлежит</td><td>да</td></tr></table><p class=\"left_margin\">2. Для написания правильной программы необходимо разделить требуемую область на части и описать каждую из них. Например, можно выделить области FE, D и L. При этом получается такой фрагмент программы (пример на Паскале): <p>if (((у&lt;=х+1) and (у&gt;=х*х-5)) and ((y&gt;=0) or ((y&gt;=2-2*x*x) and (x&lt;=0)))) or ((у&lt;=2-2*х*х) and (у&gt;=0))<p>then<p>write('принадлежит')<p>else<p>write('не принадлежит') <p class=\"left_margin\">Возможны и другие способы доработки программы.</p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "5255"
        },
        {
            "answer": "Решение.Элементы ответа: 1. ОбластьУсловие 1(x<=30)Условие 2(x<=20)Условие 3(x<=10)Программа выведетОбласть обрабатывается верноAдададане принадлежитДаBдаданетпринадлежитДаCданет------НетDнет---------НетEнет---------Нет 2.\tВозможная доработка (Паскаль): if (х>=10) and (х<=20) or (х>=30) and (х<=40) then write('принадлежит') elsewrite('не принадлежит') Возможны и другие способы доработки.Например: if х>=10 then if х<=20 thenwrite('принадлежит') elseif x>=30 then if x<=40 thenwrite('принадлежит') elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит’) Другой пример: if abs(abs(x-25)-10)<=5 then write('принадлежит') elsewrite('не принадлежит') Обратите внимание! В задаче требовалось выполнить три действия: указать для каждой области, как будет работать программа, что она выведет на экран и правильно ли это (в виде таблицы) и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.1. Верное заполнение предложенной таблицы.2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции. В сложных случаях это действие считается выполненным, если программа выдаёт одно из двух сообщений «принадлежит» или «не принадлежит» для любых чисел х, при этом программа не стала работать хуже, чем раньше, то есть для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ. 3.\tПриведёных трёх ограничений недостаточно для описания двух областей (потеряно условие х<=40). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||х-25|-10|<5), либо использование сложной комбинации каскадных условий. В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, то есть программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего.",
            "parsed": "2019-04-29 21:09:54.875005",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х - действительное число) и определяется принадлежность этой точки заданной области (включая границы). Программист торопился и написал программу неправильно. БэйсикПаскальINPUT х IF х<=30 THEN IF х<=20 THEN IF х<=10 THENPRINT \"не принадлежит\" ELSEPRINT \"принадлежит\"END IF END IF END IF END var х: real; begin readln(х); if х<=30 then if x<=20 then if x<=10 then write('не принадлежит') elsewrite('принадлежит')end.  Си++Алгоритмический язык#include <iostream>using namespace std; int main(){float x; cin >> x; if (x<=30) if (x<=20) if (x<=10) cout << \"He принадлежит\"; elsecout << \"принадлежит\";алг нач вещ х ввод хесли х<=30 то если х<=20 то если х<=10 то вывод ’не принадлежит' иначе вывод 'принадлежит' все все все конPythonx = int(input())if х <= 30:    if x <= 20:        if х <= 10:            print(\"не принадлежит\")        else:            print(\"принадлежит\")  Последовательно выполните следующее.1.\tПерерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D и Е). Точки, лежащие на границах областей (то есть, точки 10, 20, 30 и 40) при заполнении таблицы не рассматриваются. ОбластьУсловие 1(x<=30)Условие 2(x<=20)Условие 3(x<=10)Программа выведетОбласть обрабатывается верноABCDE В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет». 2.\tУкажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948820\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х - действительное число) и определяется принадлежность этой точки заданной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT х <p class=\"left_margin\">IF х&lt;=30 THEN <p class=\"left_margin\">IF х&lt;=20 THEN <p class=\"left_margin\">IF х&lt;=10 THEN<p class=\"left_margin\">PRINT \"не принадлежит\" <p class=\"left_margin\">ELSE<p class=\"left_margin\">PRINT \"принадлежит\"<p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var х: real; <p>begin <p>readln(х); <p>if х&lt;=30 then <p>if x&lt;=20 then <p>if x&lt;=10 then <p>write('не принадлежит') <p>else<p>write('принадлежит')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main()<p>{<p>float x; <p>cin &gt;&gt; x; <p>if (x&lt;=30) if (x&lt;=20) <p>if (x&lt;=10) <p>cout &lt;&lt; \"He принадлежит\"; <p>else<p>cout &lt;&lt; \"принадлежит\";<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг <p>нач <p>вещ х <p>ввод х<p>если х&lt;=30 то <p>если х&lt;=20 то <p>если х&lt;=10 то <p>вывод ’не принадлежит' <p>иначе <p>вывод 'принадлежит' <p>все <p>все <p>все <p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if х &lt;= 30:<p>    if x &lt;= 20:<p>        if х &lt;= 10:<p>            print(\"не принадлежит\")<p>        else:<p>            print(\"принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=7698\" style=\"margin:10px auto;display:block\"/><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1.\tПерерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D и Е). Точки, лежащие на границах областей (то есть, точки 10, 20, 30 и 40) при заполнении таблицы не рассматриваются.<p> </p><p><table align=\"center\" border=\"1\" cellpadding=\"5\" cellspasing=\"10\" width=\"80%\"><tr><td>Область</td><td>Условие 1<br/>(x&lt;=30)</td><td>Условие 2<br/>(x&lt;=20)</td><td>Условие 3<br/>(x&lt;=10)</td><td>Программа<br/> выведет</td><td>Область<br/> обрабатывается<br/> верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>B</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>C</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>E</td><td></td><td></td><td></td><td></td><td></td></tr></table><p> </p><p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><p class=\"left_margin\">2.\tУкажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: 1. ОбластьУсловие 1(x<=30)Условие 2(x<=20)Условие 3(x<=10)Программа выведетОбласть обрабатывается верноAдададане принадлежитДаBдаданетпринадлежитДаCданет------НетDнет---------НетEнет---------Нет 2.\tВозможная доработка (Паскаль): if (х>=10) and (х<=20) or (х>=30) and (х<=40) then write('принадлежит') elsewrite('не принадлежит') Возможны и другие способы доработки.Например: if х>=10 then if х<=20 thenwrite('принадлежит') elseif x>=30 then if x<=40 thenwrite('принадлежит') elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит’) Другой пример: if abs(abs(x-25)-10)<=5 then write('принадлежит') elsewrite('не принадлежит') Обратите внимание! В задаче требовалось выполнить три действия: указать для каждой области, как будет работать программа, что она выведет на экран и правильно ли это (в виде таблицы) и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.1. Верное заполнение предложенной таблицы.2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции. В сложных случаях это действие считается выполненным, если программа выдаёт одно из двух сообщений «принадлежит» или «не принадлежит» для любых чисел х, при этом программа не стала работать хуже, чем раньше, то есть для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ. 3.\tПриведёных трёх ограничений недостаточно для описания двух областей (потеряно условие х<=40). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||х-25|-10|<5), либо использование сложной комбинации каскадных условий. В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, то есть программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5288\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><p class=\"left_margin\">1. <table align=\"center\" border=\"1\" cellpadding=\"5\" cellspasing=\"10\" width=\"80%\"><tr><td>Область</td><td>Условие 1<br/>(x&lt;=30)</td><td>Условие 2<br/>(x&lt;=20)</td><td>Условие 3<br/>(x&lt;=10)</td><td>Программа<br/> выведет</td><td>Область<br/> обрабатывается<br/> верно</td></tr><tr><td>A</td><td>да</td><td>да</td><td>да</td><td>не принадлежит</td><td>Да</td></tr><tr><td>B</td><td>да</td><td>да</td><td>нет</td><td>принадлежит</td><td>Да</td></tr><tr><td>C</td><td>да</td><td>нет</td><td>---</td><td>---</td><td>Нет</td></tr><tr><td>D</td><td>нет</td><td>---</td><td>---</td><td>---</td><td>Нет</td></tr><tr><td>E</td><td>нет</td><td>---</td><td>---</td><td>---</td><td>Нет</td></tr></table><p> </p><p><b>2.\tВозможная доработка (Паскаль):</b><p> </p><p>if (х&gt;=10) and (х&lt;=20) or (х&gt;=30) and (х&lt;=40) then <p>write('принадлежит') <p>else<p>write('не принадлежит')<p> </p><p><b>Возможны и другие способы доработки.</b><p><b>Например:</b><p> </p><p>if х&gt;=10 then <p>if х&lt;=20 then<p>write('принадлежит') <p>else<p>if x&gt;=30 then <p>if x&lt;=40 then<p>write('принадлежит') <p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит’)<p> </p><p><b>Другой пример:</b><p> </p><p>if abs(abs(x-25)-10)&lt;=5 then <p>write('принадлежит') <p>else<p>write('не принадлежит')<p> </p><p><b>Обратите внимание!</b> В задаче требовалось выполнить три действия: указать для каждой области, как будет работать программа, что она выведет на экран и правильно ли это (в виде таблицы) и исправить две ошибки.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.<p class=\"left_margin\">1. Верное заполнение предложенной таблицы.<p class=\"left_margin\">2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции.<p> </p><p class=\"left_margin\">В сложных случаях это действие считается выполненным, если программа выдаёт одно из двух сообщений «принадлежит» или «не принадлежит» для любых чисел х, при этом программа не стала работать хуже, чем раньше, то есть для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ.<p> </p><p class=\"left_margin\">3.\tПриведёных трёх ограничений недостаточно для описания двух областей (потеряно условие х&lt;=40). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||х-25|-10|&lt;5), либо использование сложной комбинации каскадных условий.<p> </p><p class=\"left_margin\">В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, то есть программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "5288"
        },
        {
            "answer": "Решение.Элементы ответа: 1. ОбластьУсловие 1(x<=30)Условие 2(x<=20)Условие 3(x<=10)Программа выведетОбласть обрабатывается верноAдададане принадлежитДаBдаданетпринадлежитДаCданет------НетDнет---------НетEнет---------Нет 2.\tВозможная доработка (Паскаль): if (х>=10) and (х<=20) or (х>=30) and (х<=40) then write('принадлежит') elsewrite('не принадлежит') Возможны и другие способы доработки.Например: if х>=10 then if х<=20 thenwrite('принадлежит') elseif x>=30 then if x<=40 thenwrite('принадлежит') elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит’) Другой пример: if abs(abs(x-25)-10)<=5 then write('принадлежит') elsewrite('не принадлежит') Обратите внимание! В задаче требовалось выполнить три действия: указать для каждой области, как будет работать программа, что она выведет на экран и правильно ли это (в виде таблицы) и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.1. Верное заполнение предложенной таблицы.2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции. В сложных случаях это действие считается выполненным, если программа выдаёт одно из двух сообщений «принадлежит» или «не принадлежит» для любых чисел х, при этом программа не стала работать хуже, чем раньше, то есть для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ. 3.\tПриведёных трёх ограничений недостаточно для описания двух областей (потеряно условие х<=40). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||х-25|-10|<5), либо использование сложной комбинации каскадных условий. В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, то есть программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего.",
            "parsed": "2019-04-29 21:09:55.328327",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х - действительное число) и определяется принадлежность этой точки заданной области (включая границы). Программист торопился и написал программу неправильно. БэйсикПаскаль INPUT х  IF х<=30 THEN  IF х<=20 THEN  IF х<=10 THEN PRINT \"не принадлежит\"  ELSE PRINT \"принадлежит\" END IF  END IF  END IF  END var х: real; begin readln(х); if х<=30 then if x<=20 then if x<=10 then write('не принадлежит') elsewrite('принадлежит')end.  Си++Алгоритмический язык#include <iostream>using namespace std; int main(){float x; cin >> x; if (x<=30) if (x<=20) if (x<=10) cout << \"He принадлежит\"; elsecout << \"принадлежит\";}алг нач вещ х ввод хесли х<=30 то если х<=20 то если х<=10 то вывод ’не принадлежит' иначе вывод 'принадлежит' все все все конPythonx = int(input())if х <= 30:    if x <= 20:        if х <= 10:            print(\"не принадлежит\")        else:            print(\"принадлежит\")  Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D и Е). Точки, лежащие на границах областей (то есть, точки 10, 20, 30 и 40) при заполнении таблицы не рассматриваются. ОбластьУсловие 1(x<=30)Условие 2(x<=20)Условие 3(x<=10)Программа выведетОбласть обрабатывается верноABCDE В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948788\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (х - действительное число) и определяется принадлежность этой точки заданной области (включая границы). Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT х <p> IF х&lt;=30 THEN <p> IF х&lt;=20 THEN <p> IF х&lt;=10 THEN<p> PRINT \"не принадлежит\" <p> ELSE<p> PRINT \"принадлежит\"<p> END IF <p> END IF <p> END IF <p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var х: real; <p>begin <p>readln(х); <p>if х&lt;=30 then <p>if x&lt;=20 then <p>if x&lt;=10 then <p>write('не принадлежит') <p>else<p>write('принадлежит')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main()<p>{<p>float x; <p>cin &gt;&gt; x; <p>if (x&lt;=30) if (x&lt;=20) <p>if (x&lt;=10) <p>cout &lt;&lt; \"He принадлежит\"; <p>else<p>cout &lt;&lt; \"принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг <p>нач <p>вещ х <p>ввод х<p>если х&lt;=30 то <p>если х&lt;=20 то <p>если х&lt;=10 то <p>вывод ’не принадлежит' <p>иначе <p>вывод 'принадлежит' <p>все <p>все <p>все <p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if х &lt;= 30:<p>    if x &lt;= 20:<p>        if х &lt;= 10:<p>            print(\"не принадлежит\")<p>        else:<p>            print(\"принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=7698\" style=\"margin:10px auto;display:block\"/><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (А, В, С, D и Е). Точки, лежащие на границах областей (то есть, точки 10, 20, 30 и 40) при заполнении таблицы не рассматриваются.<p> </p><p><table align=\"center\" border=\"1\" cellpadding=\"5\" cellspasing=\"10\" width=\"80%\"><tr><td>Область</td><td>Условие 1<br/>(x&lt;=30)</td><td>Условие 2<br/>(x&lt;=20)</td><td>Условие 3<br/>(x&lt;=10)</td><td>Программа<br/> выведет</td><td>Область<br/> обрабатывается<br/> верно</td></tr><tr><td>A</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>B</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>C</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>E</td><td></td><td></td><td></td><td></td><td></td></tr></table><p> </p><p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведет себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: 1. ОбластьУсловие 1(x<=30)Условие 2(x<=20)Условие 3(x<=10)Программа выведетОбласть обрабатывается верноAдададане принадлежитДаBдаданетпринадлежитДаCданет------НетDнет---------НетEнет---------Нет 2.\tВозможная доработка (Паскаль): if (х>=10) and (х<=20) or (х>=30) and (х<=40) then write('принадлежит') elsewrite('не принадлежит') Возможны и другие способы доработки.Например: if х>=10 then if х<=20 thenwrite('принадлежит') elseif x>=30 then if x<=40 thenwrite('принадлежит') elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит’) Другой пример: if abs(abs(x-25)-10)<=5 then write('принадлежит') elsewrite('не принадлежит') Обратите внимание! В задаче требовалось выполнить три действия: указать для каждой области, как будет работать программа, что она выведет на экран и правильно ли это (в виде таблицы) и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.1. Верное заполнение предложенной таблицы.2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции. В сложных случаях это действие считается выполненным, если программа выдаёт одно из двух сообщений «принадлежит» или «не принадлежит» для любых чисел х, при этом программа не стала работать хуже, чем раньше, то есть для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ. 3.\tПриведёных трёх ограничений недостаточно для описания двух областей (потеряно условие х<=40). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||х-25|-10|<5), либо использование сложной комбинации каскадных условий. В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, то есть программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5320\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><p class=\"left_margin\">1. <table align=\"center\" border=\"1\" cellpadding=\"5\" cellspasing=\"10\" width=\"80%\"><tr><td>Область</td><td>Условие 1<br/>(x&lt;=30)</td><td>Условие 2<br/>(x&lt;=20)</td><td>Условие 3<br/>(x&lt;=10)</td><td>Программа<br/> выведет</td><td>Область<br/> обрабатывается<br/> верно</td></tr><tr><td>A</td><td>да</td><td>да</td><td>да</td><td>не принадлежит</td><td>Да</td></tr><tr><td>B</td><td>да</td><td>да</td><td>нет</td><td>принадлежит</td><td>Да</td></tr><tr><td>C</td><td>да</td><td>нет</td><td>---</td><td>---</td><td>Нет</td></tr><tr><td>D</td><td>нет</td><td>---</td><td>---</td><td>---</td><td>Нет</td></tr><tr><td>E</td><td>нет</td><td>---</td><td>---</td><td>---</td><td>Нет</td></tr></table><p> </p><p><b>2.\tВозможная доработка (Паскаль):</b><p> </p><p>if (х&gt;=10) and (х&lt;=20) or (х&gt;=30) and (х&lt;=40) then <p>write('принадлежит') <p>else<p>write('не принадлежит')<p> </p><p><b>Возможны и другие способы доработки.</b><p><b>Например:</b><p> </p><p>if х&gt;=10 then <p>if х&lt;=20 then<p>write('принадлежит') <p>else<p>if x&gt;=30 then <p>if x&lt;=40 then<p>write('принадлежит') <p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит’)<p> </p><p><b>Другой пример:</b><p> </p><p>if abs(abs(x-25)-10)&lt;=5 then <p>write('принадлежит') <p>else<p>write('не принадлежит')<p> </p><p><b>Обратите внимание!</b> В задаче требовалось выполнить три действия: указать для каждой области, как будет работать программа, что она выведет на экран и правильно ли это (в виде таблицы) и исправить две ошибки.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.<p class=\"left_margin\">1. Верное заполнение предложенной таблицы.<p class=\"left_margin\">2. Неправильное использование условного оператора, в результате чего при невыполнении первого или второго условия программа не выдавала ничего (отсутствуют случаи ELSE). Исправлением этой ошибки может быть либо добавление случая ELSE к каждому условию IF, либо объединение всех условий IF в одно при помощи конъюнкции.<p> </p><p class=\"left_margin\">В сложных случаях это действие считается выполненным, если программа выдаёт одно из двух сообщений «принадлежит» или «не принадлежит» для любых чисел х, при этом программа не стала работать хуже, чем раньше, то есть для всех точек, для которых программа ранее выдавала верный ответ, доработанная программа также должна выдавать верный ответ.<p> </p><p class=\"left_margin\">3.\tПриведёных трёх ограничений недостаточно для описания двух областей (потеряно условие х&lt;=40). Кроме того, необходимо учесть, что области не соединены. Исправлением этой ошибки может быть разбиение области на две части и использование дизъюнкции, либо использование сложной (для выведения) математической конструкции (||х-25|-10|&lt;5), либо использование сложной комбинации каскадных условий.<p> </p><p class=\"left_margin\">В сложных случаях это действие считается выполненным, если верно определены заштрихованные области, то есть программа выводит сообщение «принадлежит» для всех точек закрашенных областей, и только для них, для точек вне заштрихованных областей программа выводит «не принадлежит» или не выводит ничего.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "5320"
        },
        {
            "answer": "Решение.1. Программа выведет число 4.2. Программа работает верно для любого числа, начинающегося с 1, в том числе для 1.(Достаточно указать любое такое число).3. В качестве ответа для остальных чисел программа выдаёт число на 1 большее, чем нужно. Возможные варианты исправления для языка Паскаль: 1) исправление условия продолжения цикла на while (N > 9) do2) исправление инициализации на sum := 0;, а условие цикла на  while (N >= 1) do или while (N > 0) do. При этом замена на while (N >= 0) do корректной не является3) исправление условия продолжения цикла на while (N >= 1) do или while (N > 0) do и вывод значения sum − 1.",
            "parsed": "2019-04-29 21:10:00.061215",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число N, не превосходящее 109, и выводится количество цифр этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БейсикПаскальDIM N AS LONGINPUT Nsum = 1WHILE N > 1N = N \\ 10sum = sum + 1WENDPRINT sumENDvar N: longint;sum: integer;beginreadln(N);sum := 1;while N > 1 dobeginN := N div 10;sum := sum + 1;end;writeln(sum);end.Си++Алгоритмический#include <iostream>using namespace std;int main(){long int N;int sum;cin >> N;sum = 1;while (N > 1){N = N /10;sum = sum + 1;}cout « sum « endl;}алгначцел N, sumввод Nsum := 1нц пока N > 1N := div(N, 10)sum := sum + 1кцвывод sumконPythonn = int(input())sum = 1while n > 1:    n //= 10    sum += 1print(sum)   Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 938.2. Укажите одно число для которого эта программа будет работать верно.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Укажите все строки (одну или более), содержащие ошибки, и для каждой такой строки приведите правильный вариант. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948736\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число <i>N</i>, не превосходящее 10<sup>9</sup>, и выводится количество цифр этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table align=\"center\" border=\"\" width=\"60%\"><p><tr><p><th><b>Бейсик</b></th><p><th><b>Паскаль</b></th><p></p></p></p></tr><p><tr><p><td valign=\"top\"><div class=\"source_code lang_basic\"><p class=\"left_margin\">DIM N AS LONG<p class=\"left_margin\">INPUT N<p>sum = 1<p class=\"left_margin\">WHILE N &gt; 1<p class=\"left_margin\">N = N \\ 10<p>sum = sum + 1<p class=\"left_margin\">WEND<p class=\"left_margin\">PRINT sum<p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></div></td><p><td valign=\"top\"><div class=\"source_code lang_pascal\"><p>var N: longint;<p>sum: integer;<p>begin<p>readln(N);<p>sum := 1;<p>while N &gt; 1 do<p>begin<p class=\"left_margin\">N := N div 10;<p>sum := sum + 1;<p>end;<p>writeln(sum);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></p></tr><p><tr><p><th><b>Си++</b></th><p><th><b>Алгоритмический</b></th><p></p></p></p></tr><p><tr><p><td valign=\"top\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>long int N;<p>int sum;<p>cin &gt;&gt; N;<p>sum = 1;<p>while (N &gt; 1)<p>{<p class=\"left_margin\">N = N /10;<p>sum = sum + 1;<p>}<p>cout « sum « endl;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td valign=\"top\"><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел N, sum<p>ввод N<p>sum := 1<p>нц пока N &gt; 1<p class=\"left_margin\">N := div(N, 10)<p>sum := sum + 1<p>кц<p>вывод sum<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><p></p></p></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>sum = 1<p>while n &gt; 1:<p>    n //= 10<p>    sum += 1<p>print(sum)<p> </p></p></p></p></p></p></p></div></td></tr></p></p></p></p></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 938.<p class=\"left_margin\">2. Укажите одно число для которого эта программа будет работать верно.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Укажите все строки (одну или более), содержащие ошибки, и для каждой такой строки приведите правильный вариант. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. Программа выведет число 4.2. Программа работает верно для любого числа, начинающегося с 1, в том числе для 1.(Достаточно указать любое такое число).3. В качестве ответа для остальных чисел программа выдаёт число на 1 большее, чем нужно. Возможные варианты исправления для языка Паскаль: 1) исправление условия продолжения цикла на while (N > 9) do2) исправление инициализации на sum := 0;, а условие цикла на  while (N >= 1) do или while (N > 0) do. При этом замена на while (N >= 0) do корректной не является3) исправление условия продолжения цикла на while (N >= 1) do или while (N > 0) do и вывод значения sum − 1.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5372\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. Программа выведет число 4.<p class=\"left_margin\">2. Программа работает верно для любого числа, начинающегося с 1, в том числе для 1.<p class=\"left_margin\">(Достаточно указать любое такое число).<p class=\"left_margin\">3. В качестве ответа для остальных чисел программа выдаёт число на 1 большее, чем нужно. Возможные варианты исправления для языка Паскаль:<p> </p><p class=\"left_margin\">1) исправление условия продолжения цикла на while (N &gt; 9) do<p class=\"left_margin\">2) исправление инициализации на sum := 0;, а условие цикла на  while (N &gt;= 1) do или while (N &gt; 0) do. При этом замена на while (N &gt;= 0) do корректной не является<p class=\"left_margin\">3) исправление условия продолжения цикла на while (N &gt;= 1) do или while (N &gt; 0) do и вывод значения sum − 1.</p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 30.05.2013. Ос­нов­ная волна. Дальний Восток. Ва­ри­ант 1.",
            "task_id": "5372"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках. 1.\tПрограмма выведет число 12. 2.\tПервая ошибка. Неверная инициализация ответа (переменная product). В результате младшая цифра учитывается два раза. Строка с ошибкой: product := N mod 10. Исправление: product := 1; 3.\tВторая ошибка. Неверное условие окончания цикла. Программа не будет рассматривать старшую цифру числа. Строка с ошибкой: «while N >= 10». Возможные варианты исправления: «while N >= 1» или «while N > 0». При этом замены на «while N > 1» или «while N >= 0» корректными не являются. В качестве ещё одного возможного варианта исправления этой ошибки является вывод значения «product*N» а не просто «product»(так как после окончания цикла в переменной N останется только одна цифра) Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значении, и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).3.\tУказана и верно исправлена ошибка в условии окончания цикла.",
            "parsed": "2019-04-29 21:10:00.497626",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число N, не превосходящее 109, и выводится произведение цифр этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БэйсикПаскаль DIM N AS LONG DIM product AS LONG INPUT N product = N mod 10  WHILE N >= 10    digit = N MOD 10     product = product*digit    N = N \\ 10 WEND PRINT product  END var N, product: longint;    digit: integer; begin    readln(N);    product := N mod 10;     while N >= 10 do    begin        digit := N mod 10;        product := product*digit;        N := N div 10;    end;    writeln(product);end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main() {    long int N, product;     int digit;     cin >> N;    product = N % 10;    while (N >= 10)    {        digit = N % 10;        product = product*digit;        N = N / 10;    }    cout << product;}алгнач    цел N, digit, product     ввод N    product := mod(N, 10)    нц пока N >= 10        digit := mod(N, 10)        product := product*digit        N := div(N, 10)    кц    вывод productконPythonn = int(input())product = n % 10while n >= 10:    digit = n % 10    product = product*digit    n //= 10print(product)  Последовательно выполните следующее.1.\tНапишите, что выведет эта программа при вводе числа 532.2.\tНайдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:1)\tвыпишите строку, в которой сделана ошибка;2)\tукажите, как исправить ошибку, — приведите правильный вариант строки. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949152\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число <i>N</i>, не превосходящее 10<sup>9</sup>, и выводится произведение цифр этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N AS LONG<p> DIM product AS LONG<p> INPUT N<p> product = N mod 10 <p> WHILE N &gt;= 10<p>    digit = N MOD 10 <p>    product = product*digit<p>    N = N \\ 10<p> WEND<p> PRINT product <p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var N, product: longint;<p>    digit: integer; <p>begin<p>    readln(N);<p>    product := N mod 10; <p>    while N &gt;= 10 do<p>    begin<p>        digit := N mod 10;<p>        product := product*digit;<p>        N := N div 10;<p>    end;<p>    writeln(product);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main() <p>{<p>    long int N, product; <p>    int digit; <p>    cin &gt;&gt; N;<p>    product = N % 10;<p>    while (N &gt;= 10)<p>    {<p>        digit = N % 10;<p>        product = product*digit;<p>        N = N / 10;<p>    }<p>    cout &lt;&lt; product;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, product <p>    ввод N<p>    product := mod(N, 10)<p>    нц пока N &gt;= 10<p>        digit := mod(N, 10)<p>        product := product*digit<p>        N := div(N, 10)<p>    кц<p>    вывод product<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>product = n % 10<p>while n &gt;= 10:<p>    digit = n % 10<p>    product = product*digit<p>    n //= 10<p>print(product)<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1.\tНапишите, что выведет эта программа при вводе числа 532.<p class=\"left_margin\">2.\tНайдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:<p class=\"left_margin\">1)\tвыпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2)\tукажите, как исправить ошибку, — приведите правильный вариант строки.<p> </p><p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках. 1.\tПрограмма выведет число 12. 2.\tПервая ошибка. Неверная инициализация ответа (переменная product). В результате младшая цифра учитывается два раза. Строка с ошибкой: product := N mod 10. Исправление: product := 1; 3.\tВторая ошибка. Неверное условие окончания цикла. Программа не будет рассматривать старшую цифру числа. Строка с ошибкой: «while N >= 10». Возможные варианты исправления: «while N >= 1» или «while N > 0». При этом замены на «while N > 1» или «while N >= 0» корректными не являются. В качестве ещё одного возможного варианта исправления этой ошибки является вывод значения «product*N» а не просто «product»(так как после окончания цикла в переменной N останется только одна цифра) Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значении, и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).3.\tУказана и верно исправлена ошибка в условии окончания цикла.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5468\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.<p> </p><p class=\"left_margin\">1.\tПрограмма выведет число 12.<p> </p><p class=\"left_margin\">2.\tПервая ошибка. Неверная инициализация ответа (переменная product). В результате младшая цифра учитывается два раза. Строка с ошибкой: product := N mod 10. Исправление: product := 1;<p> </p><p class=\"left_margin\">3.\tВторая ошибка. Неверное условие окончания цикла. Программа не будет рассматривать старшую цифру числа. Строка с ошибкой: «while N &gt;= 10». Возможные варианты исправления: «while N &gt;= 1» или «while N &gt; 0». При этом замены на «while N &gt; 1» или «while N &gt;= 0» корректными не являются. В качестве ещё одного возможного варианта исправления этой ошибки является вывод значения «product*N» а не просто «product»(так как после окончания цикла в переменной N останется только одна цифра)<p> </p><p><b>Указания по оцениванию.</b><p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значении, и исправить две ошибки.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).<p class=\"left_margin\">1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.<p class=\"left_margin\">2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).<p class=\"left_margin\">3.\tУказана и верно исправлена ошибка в условии окончания цикла.</p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 30.05.2013. Ос­нов­ная волна. Сибирь. Ва­ри­ант 1.",
            "task_id": "5468"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1.\tПрограмма выведет число 9.2.\tПервая ошибка. Неверная инициализация ответа (переменнаяmax_digit). Строка с ошибкой: max_digit := 9; Возможные варианты исправления: max_digit := 0;Возможны и другие исправления инициализации, например на отрицательное чисто, в том числе -maxint.3.\tВторая ошибка. Неверное условие продолжения цикла. Программа не будет рассматривать старшую цифру числа.Строка с ошибкой: while N > 9 do.Возможные варианты исправления: while (N >= 1) do или while (N > 0) do При этом замены на while (N > 1) do или while (N >= 0) do корректными не являются.  Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значений. и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).3.\tУказано на неверное условие продолжения цикла, и оно направлено на верное.Каждый из п. 2 и 3 считается выполненным, если:а)\tправильно указана строка с ошибкой.б)\tуказан такой новый вариант строки, что при исправлении второй ошибки получается правильная программа.",
            "parsed": "2019-04-29 21:10:00.823371",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число N, не превосходящее 109, и выводится максимальная цифра этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БэйсикПаскаль DIM N AS LONG INPUT N max_digit = 9 WHILE N > 9    digit = N MOD 10    IF max_digit < digit THEN        max_digit = digit    END IF        N = N \\ 10 WEND PRINT max digit END var N: longint;    digit, max_digit: integer;begin    readln(N);    max_digit := 9;    while N > 9 do    begin        digit := N mod 10;        if max_digit < digit then            max_digit := digit;        N := N div 10;    end;    writeln(max_digit);end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main(){    long int N;    int digit, max_digit;    cin >> N;    max_digit = 9;    while (N > 9)    {        digit = N % 10;        if (max_digit < digit)            max_digit = digit;        N = N /10;    }    cout « max_digit « endl;}алгнач    цел N, digit, max_digit    ввод N    max_digit := 9    нц пока N > 9         digit := mod(N, 10)        если max_digit < digit то            max_digit := digit        все    N := div(N, 10)    кц    вывод max_digitконPythonn = int(input())max_digit = 9while n > 9:    digit = n % 10    if max_digit < digit:        max_digit = digit    n //= 10;print(max_digit)  Последовательно выполните следующее.1.\tНапишите, что выведет эта программа при вводе числа 738.2.\tНайдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:1)\tвыпишите строку, в которой сделана ошибка;2)\tукажите, как исправить ошибку, — приведите правильный вариант строки.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949120\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число <i>N</i>, не превосходящее 10<sup>9</sup>, и выводится максимальная цифра этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N AS LONG<p> INPUT N<p> max_digit = 9<p> WHILE N &gt; 9<p>    digit = N MOD 10<p>    IF max_digit &lt; digit THEN<p>        max_digit = digit<p>    END IF<p>        N = N \\ 10<p> WEND<p> PRINT max digit<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var N: longint;<p>    digit, max_digit: integer;<p>begin<p>    readln(N);<p>    max_digit := 9;<p>    while N &gt; 9 do<p>    begin<p>        digit := N mod 10;<p>        if max_digit &lt; digit then<p>            max_digit := digit;<p>        N := N div 10;<p>    end;<p>    writeln(max_digit);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>    long int N;<p>    int digit, max_digit;<p>    cin &gt;&gt; N;<p>    max_digit = 9;<p>    while (N &gt; 9)<p>    {<p>        digit = N % 10;<p>        if (max_digit &lt; digit)<p>            max_digit = digit;<p>        N = N /10;<p>    }<p>    cout « max_digit « endl;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, max_digit<p>    ввод N<p>    max_digit := 9<p>    нц пока N &gt; 9<p>         digit := mod(N, 10)<p>        если max_digit &lt; digit то<p>            max_digit := digit<p>        все<p>    N := div(N, 10)<p>    кц<p>    вывод max_digit<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>max_digit = 9<p>while n &gt; 9:<p>    digit = n % 10<p>    if max_digit &lt; digit:<p>        max_digit = digit<p>    n //= 10;<p>print(max_digit)<p> </p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1.\tНапишите, что выведет эта программа при вводе числа 738.<p class=\"left_margin\">2.\tНайдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:<p class=\"left_margin\">1)\tвыпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2)\tукажите, как исправить ошибку, — приведите правильный вариант строки.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1.\tПрограмма выведет число 9.2.\tПервая ошибка. Неверная инициализация ответа (переменнаяmax_digit). Строка с ошибкой: max_digit := 9; Возможные варианты исправления: max_digit := 0;Возможны и другие исправления инициализации, например на отрицательное чисто, в том числе -maxint.3.\tВторая ошибка. Неверное условие продолжения цикла. Программа не будет рассматривать старшую цифру числа.Строка с ошибкой: while N > 9 do.Возможные варианты исправления: while (N >= 1) do или while (N > 0) do При этом замены на while (N > 1) do или while (N >= 0) do корректными не являются.  Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значений. и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).3.\tУказано на неверное условие продолжения цикла, и оно направлено на верное.Каждый из п. 2 и 3 считается выполненным, если:а)\tправильно указана строка с ошибкой.б)\tуказан такой новый вариант строки, что при исправлении второй ошибки получается правильная программа.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5500\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.<p class=\"left_margin\">1.\tПрограмма выведет число 9.<p class=\"left_margin\">2.\tПервая ошибка. Неверная инициализация ответа (переменная<p>max_digit). Строка с ошибкой: max_digit := 9; Возможные варианты исправления: max_digit := 0;<p class=\"left_margin\">Возможны и другие исправления инициализации, например на отрицательное чисто, в том числе -maxint.<p class=\"left_margin\">3.\tВторая ошибка. Неверное условие продолжения цикла. Программа не будет рассматривать старшую цифру числа.<p class=\"left_margin\">Строка с ошибкой: while N &gt; 9 do.<p class=\"left_margin\">Возможные варианты исправления: while (N &gt;= 1) do или while (N &gt; 0) do При этом замены на while (N &gt; 1) do или while (N &gt;= 0) do корректными не являются.<p> </p><p> </p><p><b>Указания по оцениванию.</b><p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значений. и исправить две ошибки.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).<p class=\"left_margin\">1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.<p class=\"left_margin\">2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).<p class=\"left_margin\">3.\tУказано на неверное условие продолжения цикла, и оно направлено на верное.<p class=\"left_margin\">Каждый из п. 2 и 3 считается выполненным, если:<p class=\"left_margin\">а)\tправильно указана строка с ошибкой.<p class=\"left_margin\">б)\tуказан такой новый вариант строки, что при исправлении второй ошибки получается правильная программа.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 30.05.2013. Ос­нов­ная волна. Урал. Ва­ри­ант 1.",
            "task_id": "5500"
        },
        {
            "answer": "Решение.1.\tПрограмма выведет число 7 (как сумму чисел 2 и 5). 2.\tВ качестве ответа для остальных чисел программа выдаёт сумму всех цифр, кроме старшей. Возможный (не единственный) вариант исправления для языка Паскаль: исправление условия продолжения цикла на while (N >= 1) do или while (N > 0) do. При этом замена на while (N >= 0) do  корректной не является. 3.\tПрограмма работает верно для всех чисел, начинающихся на 9, в том числе для 9. [Достаточно указать любое такое число.] Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказано число, при котором программа работает верно.3.\tУказаны все строки (одна или более), в которые нужно внести исправления, и эти исправления внесены, при этом получена верно работающая программа.При выполнении действия 3 верное указание на ошибку при неверном её исправлении не засчитывается.Обратите внимание! Выбор ошибочных строк может быть выполнен не единственным способом. В работе (во фрагментах программ) допускается наличие отдельных синтаксических ошибок, не искажающих замысла автора решения.",
            "parsed": "2019-04-29 21:10:01.198356",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число N, не превосходящее 109, и выводится сумма цифр этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БэйсикПаскаль DIM N AS LONG INPUT N sum = 0 WHILE N >= 9    digit = N MOD 10    sum = sum + digit    N = N \\ 10 WEND PRINT sum  END var N: longint;    digit, sum: integer; begin    readln(N);    sum := 0;    while N >= 9 do    begin        digit := N mod 10;        sum := sum + digit;        N := N div 10;    end;    writeln(sum);end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main() {    long int N;     int digit, sum;    cin >> N;    sum = 0;    while (N >= 9)    {        digit = N % 10;        sum = sum + digit;        N = N / 10;    }    cout « sum « endl;} алгнач    цел N, digit, sum    ввод N    sum := 0    нц пока N >= 9        digit := mod(N, 10)        sum := sum + digit        N := div(N, 10)    кц    вывод sumконPythonn = int(input())sum = 0while n >= 9:    digit = n % 10    sum += digit    n //=10;print(sum)   Последовательно выполните следующее.1.\tНапишите, что выведет эта программа при вводе числа 352.2.\tНайдите все ошибки в этой программе (их может быть одна или несколько). Укажите все строки (одну или более), содержащие ошибки, и для каждой такой строки приведите правильный вариант. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.3.     Укажите одно число для которого эта программа будет работать верно.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body949088\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число <i>N</i>, не превосходящее 10<sup>9</sup>, и выводится сумма цифр этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N AS LONG<p> INPUT N<p> sum = 0<p> WHILE N &gt;= 9<p>    digit = N MOD 10<p>    sum = sum + digit<p>    N = N \\ 10<p> WEND<p> PRINT sum <p> END<p> </p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var N: longint;<p>    digit, sum: integer; <p>begin<p>    readln(N);<p>    sum := 0;<p>    while N &gt;= 9 do<p>    begin<p>        digit := N mod 10;<p>        sum := sum + digit;<p>        N := N div 10;<p>    end;<p>    writeln(sum);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main() <p>{<p>    long int N; <p>    int digit, sum;<p>    cin &gt;&gt; N;<p>    sum = 0;<p>    while (N &gt;= 9)<p>    {<p>        digit = N % 10;<p>        sum = sum + digit;<p>        N = N / 10;<p>    }<p>    cout « sum « endl;<p>}<p> </p><p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, sum<p>    ввод N<p>    sum := 0<p>    нц пока N &gt;= 9<p>        digit := mod(N, 10)<p>        sum := sum + digit<p>        N := div(N, 10)<p>    кц<p>    вывод sum<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>sum = 0<p>while n &gt;= 9:<p>    digit = n % 10<p>    sum += digit<p>    n //=10;<p>print(sum)<p> </p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1.\tНапишите, что выведет эта программа при вводе числа 352.<p class=\"left_margin\">2.\tНайдите все ошибки в этой программе (их может быть одна или несколько). Укажите все строки (одну или более), содержащие ошибки, и для каждой такой строки приведите правильный вариант. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.<p class=\"left_margin\">3.     Укажите одно число для которого эта программа будет работать верно.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.\tПрограмма выведет число 7 (как сумму чисел 2 и 5). 2.\tВ качестве ответа для остальных чисел программа выдаёт сумму всех цифр, кроме старшей. Возможный (не единственный) вариант исправления для языка Паскаль: исправление условия продолжения цикла на while (N >= 1) do или while (N > 0) do. При этом замена на while (N >= 0) do  корректной не является. 3.\tПрограмма работает верно для всех чисел, начинающихся на 9, в том числе для 9. [Достаточно указать любое такое число.] Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказано число, при котором программа работает верно.3.\tУказаны все строки (одна или более), в которые нужно внести исправления, и эти исправления внесены, при этом получена верно работающая программа.При выполнении действия 3 верное указание на ошибку при неверном её исправлении не засчитывается.Обратите внимание! Выбор ошибочных строк может быть выполнен не единственным способом. В работе (во фрагментах программ) допускается наличие отдельных синтаксических ошибок, не искажающих замысла автора решения.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5532\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.\tПрограмма выведет число 7 (как сумму чисел 2 и 5).<p> </p><p class=\"left_margin\">2.\tВ качестве ответа для остальных чисел программа выдаёт сумму всех цифр, кроме старшей. Возможный (не единственный) вариант исправления для языка Паскаль: исправление условия продолжения цикла на while (N &gt;= 1) do или while (N &gt; 0) do. При этом замена на while (N &gt;= 0) do  корректной не является.<p> </p><p class=\"left_margin\">3.\tПрограмма работает верно для всех чисел, начинающихся на 9, в том числе для 9. [Достаточно указать любое такое число.]<p> </p><p class=\"left_margin\">Указания по оцениванию.<p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить три действия.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия.<p class=\"left_margin\">1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.<p class=\"left_margin\">2.\tУказано число, при котором программа работает верно.<p class=\"left_margin\">3.\tУказаны все строки (одна или более), в которые нужно внести исправления, и эти исправления внесены, при этом получена верно работающая программа.<p class=\"left_margin\">При выполнении действия 3 верное указание на ошибку при неверном её исправлении не засчитывается.<p class=\"left_margin\">Обратите внимание! Выбор ошибочных строк может быть выполнен не единственным способом. В работе (во фрагментах программ) допускается наличие отдельных синтаксических ошибок, не искажающих замысла автора решения.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 30.05.2013. Ос­нов­ная волна. Даль­ний Восток. Ва­ри­ант 3.",
            "task_id": "5532"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1.\tПрограмма выведет число 10.2.\tПервая ошибка. Неверное инициализация переменной max_digit: max_digit:=10; Исправленная строка: max_digit:=0; Вторая ошибка. Неверное условие выхода из цикла: while N >= 10 do Исправленная строка: while N > 0 do   Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значении, и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).3.\tУказана и верно исправлена ошибка вывода переменной digit вместо product.",
            "parsed": "2019-04-29 21:10:04.614156",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число N, не превосходящее 109, и выводится максимальная цифра этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БэйсикПаскаль DIM N AS LONG INPUT Nmax_digit = 10 WHILE N >= 10    digit = N MOD 10    IF max_digit < digit THEN        max_digit = digit    END IF        N = N \\ 10 WEND PRINT max_digit END var N: longint;    digit, max_digit: integer;begin    readln(N);    max_digit := 10;    while N >= 10 do    begin        digit := N mod 10;        if max_digit < digit then            max_digit := digit;        N := N div 10;    end;    writeln(max_digit);end.  Си++Алгоритмический язык#include <iostream>using namespace std;int main (){    long int N;    int digit, max_digit;    cin >> N;    max digit = 10;    while (N >= 10)    {        digit = N % 10;        if (max_digit < digit)            max_digit = digit;        N = N / 10;    }    cout « max_digit « endl;} алгнач    цел N, digit, max_digit    ввод N    max_digit := 10    нц пока N >= 10        digit := mod(N, 10)        если max_digit < digit то            max_digit := digit        все        N := div(N, 10)    кц    вывод max_digitконPythonn = int(input())max_digit = 10while n >= 10:    digit = n % 10    if max_digit < digit:        max_digit = digit    n //= 10print(max_digit) Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 528.2. Найдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:1)\tвыпишите строку, в которой сделана ошибка;2)\tукажите, как исправить ошибку, — приведите правильный вариант строки. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948416\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число <i>N</i>, не превосходящее 10<sup>9</sup>, и выводится максимальная цифра этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"70%\"><tr><th width=\"50%\"><b>Бэйсик</b></th><th width=\"50%\"><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N AS LONG<p> INPUT N<p>max_digit = 10<p> WHILE N &gt;= 10<p>    digit = N MOD 10<p>    IF max_digit &lt; digit THEN<p>        max_digit = digit<p>    END IF<p>        N = N \\ 10<p> WEND<p> PRINT max_digit<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var N: longint;<p>    digit, max_digit: integer;<p>begin<p>    readln(N);<p>    max_digit := 10;<p>    while N &gt;= 10 do<p>    begin<p>        digit := N mod 10;<p>        if max_digit &lt; digit then<p>            max_digit := digit;<p>        N := N div 10;<p>    end;<p>    writeln(max_digit);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main ()<p>{<p>    long int N;<p>    int digit, max_digit;<p>    cin &gt;&gt; N;<p>    max digit = 10;<p>    while (N &gt;= 10)<p>    {<p>        digit = N % 10;<p>        if (max_digit &lt; digit)<p>            max_digit = digit;<p>        N = N / 10;<p>    }<p>    cout « max_digit « endl;<p>}<p> </p><p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, max_digit<p>    ввод N<p>    max_digit := 10<p>    нц пока N &gt;= 10<p>        digit := mod(N, 10)<p>        если max_digit &lt; digit то<p>            max_digit := digit<p>        все<p>        N := div(N, 10)<p>    кц<p>    вывод max_digit<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>max_digit = 10<p>while n &gt;= 10:<p>    digit = n % 10<p>    if max_digit &lt; digit:<p>        max_digit = digit<p>    n //= 10<p>print(max_digit)<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 528.<p class=\"left_margin\">2. Найдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:<p class=\"left_margin\">1)\tвыпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2)\tукажите, как исправить ошибку, — приведите правильный вариант строки.<p> </p><p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1.\tПрограмма выведет число 10.2.\tПервая ошибка. Неверное инициализация переменной max_digit: max_digit:=10; Исправленная строка: max_digit:=0; Вторая ошибка. Неверное условие выхода из цикла: while N >= 10 do Исправленная строка: while N > 0 do   Указания по оцениванию.Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значении, и исправить две ошибки.Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).3.\tУказана и верно исправлена ошибка вывода переменной digit вместо product.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol5692\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.<p class=\"left_margin\">1.\tПрограмма выведет число 10.<p class=\"left_margin\">2.\tПервая ошибка. Неверное инициализация переменной max_digit:<p> </p><p>max_digit:=10;<p> </p><p class=\"left_margin\">Исправленная строка:<p> </p><p>max_digit:=0;<p> </p><p class=\"left_margin\">Вторая ошибка. Неверное условие выхода из цикла:<p> </p><p>while N &gt;= 10 do<p> </p><p class=\"left_margin\">Исправленная строка:<p> </p><p>while N &gt; 0 do<p> </p><p> </p><p> </p><p><b>Указания по оцениванию.<p></p></b><p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить три действия: указать, что выведет программа при конкретном входном значении, и исправить две ошибки.<p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение каждого действия (ниже указано, какое действие считается выполненным).<p class=\"left_margin\">1.\tВерно указано, что именно выведет программа при указанных в условии входных данных.<p class=\"left_margin\">2.\tУказана и верно исправлена ошибка инициализации (не обязательно с упоминанием этого термина).<p class=\"left_margin\">3.\tУказана и верно исправлена ошибка вывода переменной digit вместо product.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 30.05.2013. Ос­нов­ная волна. Сибирь. Ва­ри­ант 5.",
            "task_id": "5692"
        },
        {
            "answer": "Решение.Содержание верного ответа  (допускаются иные формулировки ответа, не искажающие его смысла)Решение  использует  запись  программы  на  Паскале.  Допускается использование программы на трёх других языках. 1. Программа выведет число 9. 2. Первая  ошибка.  Неверная  инициализация  ответа (переменная max_digit). Строка с ошибкой: max_digit := 9;Возможные варианты исправления:max_digit := 0;Возможны и другие исправления инициализации, например на отрицательное число, в том числе -maxint. 3. Вторая ошибка. Неверное условие продолжения цикла. Программа не будет рассматривать старшую цифру числа. Строка с ошибкой: while N >= 10 doВозможные варианты исправления:while (N >= 1) doилиwhile (N > 0) doПри этом замены на while (N > 1) do или while (N >= 0) doкорректными не являются Обратите внимание! В задаче требовалось выполнить три действия:  указать, что выведет программа при конкретном входном значении,  и исправить две ошибки. Баллы за данное задание начисляются как сумма баллов за верное выполнение  каждого  действия (ниже  указано,  какое  действие считается выполненным). 1. Верно указано, что именно выведет программа при указанных в условии входных данных. 2. Указана  и  верно  исправлена  ошибка  инициализации (не обязательно с упоминанием этого термина). 3. Указано  на  неверное  условие  продолжения  цикла,  и  оно исправлено на верное. Каждый из п. 2 и 3 считается выполненным, если: а) правильно указана строка с ошибкой;б)  указан  такой  новый  вариант  строки,  что  при  исправлении второй ошибки получается правильная программа",
            "parsed": "2019-04-29 21:10:01.620043",
            "question": "Требовалось  написать  программу,  при  выполнении  которой  с  клавиатуры считывается  натуральное  число N, не  превосходящее 109,  и  выводится максимальная  цифра  этого  числа.  Программист  торопился  и  написал программу  неправильно. (Ниже  для  Вашего  удобства  программа представлена на четырёх языках программирования.)   БейсикПаскаль DIM N AS LONG  INPUT N  max_digit = 9  WHILE N >= 10     digit = N MOD 10     IF digit > max_digit THEN         max_digit = digit     END IF     N = N \\ 10  WEND  PRINT max_digit  ENDvar N: longint;     digit, max_digit: integer; begin     readln(N);     max_digit := 9;     while N >= 10 do     begin         digit := N mod 10;         if digit > max_digit then            max_digit := digit;         N := N div 10;     end;     writeln(max_digit); end.Си++Алгоритмический#include <iostream>using namespace std;int main() {     long int N;     int digit, max_digit;     cin >> N;     max_digit = 9;     while (N >= 10)     {         digit = N % 10;         if (digit > max_digit)             max_digit = digit;         N = N /10;     }     cout « max_digit « endl; }алг нач    цел N, digit, max_digit     ввод N     max_digit := 9     нц пока N >= 10         digit := mod(N, 10)         если digit > max_digit то            max_digit := digit         все        N := div(N, 10)     кц    вывод max_digit конPythonn = int(input())max_digit = 9while n >= 10:     digit = n % 10    if digit > max_digit:        max_digit = digit    n //= 10print(max_digit)  Последовательно выполните следующее. 1.  Напишите, что выведет эта  программа при вводе числа 423. 2.  Найдите  все  ошибки  в  этой  программе (их  может  быть  одна  или несколько). Для каждой ошибки: 1) выпишите строку, в которой сделана ошибка; 2) укажите,  как  исправить  ошибку, —  приведите  правильный  вариант строки. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не  написать  свою,  возможно,  использующую  другой  алгоритм  решения.  Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948610\" width=\"100%\"><p class=\"left_margin\">Требовалось  написать  программу,  при  выполнении  которой  с  клавиатуры считывается  натуральное  число N, не  превосходящее 10<sup>9</sup>,  и  выводится максимальная  цифра  этого  числа.  Программист  торопился  и  написал программу  неправильно. (Ниже  для  Вашего  удобства  программа представлена на четырёх языках программирования.) <p> </p><p> </p><center><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><p><div class=\"source_code lang_basic\"><p> DIM N AS LONG <p> INPUT N <p> max_digit = 9 <p> WHILE N &gt;= 10 <p>    digit = N MOD 10 <p>    IF digit &gt; max_digit THEN <p>        max_digit = digit <p>    END IF <p>    N = N \\ 10 <p> WEND <p> PRINT max_digit <p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_pascal\"><p>var N: longint; <p>    digit, max_digit: integer; <p>begin <p>    readln(N); <p>    max_digit := 9; <p>    while N &gt;= 10 do <p>    begin <p>        digit := N mod 10; <p>        if digit &gt; max_digit then<p>            max_digit := digit; <p>        N := N div 10; <p>    end; <p>    writeln(max_digit); <p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main() <p>{ <p>    long int N; <p>    int digit, max_digit; <p>    cin &gt;&gt; N; <p>    max_digit = 9; <p>    while (N &gt;= 10) <p>    { <p>        digit = N % 10; <p>        if (digit &gt; max_digit) <p>            max_digit = digit; <p>        N = N /10; <p>    } <p>    cout « max_digit « endl; <p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг <p>нач<p>    цел N, digit, max_digit <p>    ввод N <p>    max_digit := 9 <p>    нц пока N &gt;= 10 <p>        digit := mod(N, 10) <p>        если digit &gt; max_digit то<p>            max_digit := digit <p>        все<p>        N := div(N, 10) <p>    кц<p>    вывод max_digit <p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>max_digit = 9<p>while n &gt;= 10: <p>    digit = n % 10<p>    if digit &gt; max_digit:<p>        max_digit = digit<p>    n //= 10<p>print(max_digit)<p></p></p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее. <p class=\"left_margin\">1.  Напишите, что выведет эта  программа при вводе числа 423. <p class=\"left_margin\">2.  Найдите  все  ошибки  в  этой  программе (их  может  быть  одна  или несколько). Для каждой ошибки: <p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка; <p class=\"left_margin\">2) укажите,  как  исправить  ошибку, —  приведите  правильный  вариант строки. <p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не  написать  свою,  возможно,  использующую  другой  алгоритм  решения.  Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Содержание верного ответа  (допускаются иные формулировки ответа, не искажающие его смысла)Решение  использует  запись  программы  на  Паскале.  Допускается использование программы на трёх других языках. 1. Программа выведет число 9. 2. Первая  ошибка.  Неверная  инициализация  ответа (переменная max_digit). Строка с ошибкой: max_digit := 9;Возможные варианты исправления:max_digit := 0;Возможны и другие исправления инициализации, например на отрицательное число, в том числе -maxint. 3. Вторая ошибка. Неверное условие продолжения цикла. Программа не будет рассматривать старшую цифру числа. Строка с ошибкой: while N >= 10 doВозможные варианты исправления:while (N >= 1) doилиwhile (N > 0) doПри этом замены на while (N > 1) do или while (N >= 0) doкорректными не являются Обратите внимание! В задаче требовалось выполнить три действия:  указать, что выведет программа при конкретном входном значении,  и исправить две ошибки. Баллы за данное задание начисляются как сумма баллов за верное выполнение  каждого  действия (ниже  указано,  какое  действие считается выполненным). 1. Верно указано, что именно выведет программа при указанных в условии входных данных. 2. Указана  и  верно  исправлена  ошибка  инициализации (не обязательно с упоминанием этого термина). 3. Указано  на  неверное  условие  продолжения  цикла,  и  оно исправлено на верное. Каждый из п. 2 и 3 считается выполненным, если: а) правильно указана строка с ошибкой;б)  указан  такой  новый  вариант  строки,  что  при  исправлении второй ошибки получается правильная программа",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6014\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><b>Содержание верного ответа </b> (допускаются иные формулировки ответа, не искажающие его смысла)<p class=\"left_margin\">Решение  использует  запись  программы  на  Паскале.  Допускается использование программы на трёх других языках. <p class=\"left_margin\">1. Программа выведет число 9. <p class=\"left_margin\">2. Первая  ошибка.  Неверная  инициализация  ответа (переменная max_digit). <p class=\"left_margin\">Строка с ошибкой: <p>max_digit := 9;<p class=\"left_margin\">Возможные варианты исправления:<p>max_digit := 0;<p class=\"left_margin\">Возможны и другие исправления инициализации, например на отрицательное число, в том числе -maxint. <p class=\"left_margin\">3. Вторая ошибка. Неверное условие продолжения цикла. <p class=\"left_margin\">Программа не будет рассматривать старшую цифру числа. <p class=\"left_margin\">Строка с ошибкой: <p>while N &gt;= 10 do<p class=\"left_margin\">Возможные варианты исправления:<p>while (N &gt;= 1) do<p>или<p>while (N &gt; 0) do<p class=\"left_margin\">При этом замены на <p>while (N &gt; 1) do или while (N &gt;= 0) do<p>корректными не являются<p> </p><p class=\"left_margin\">Обратите внимание! В задаче требовалось выполнить три действия:  указать, что выведет программа при конкретном входном значении,  и исправить две ошибки. <p class=\"left_margin\">Баллы за данное задание начисляются как сумма баллов за верное выполнение  каждого  действия (ниже  указано,  какое  действие считается выполненным). <p class=\"left_margin\">1. Верно указано, что именно выведет программа при указанных в условии входных данных. <p class=\"left_margin\">2. Указана  и  верно  исправлена  ошибка  инициализации (не обязательно с упоминанием этого термина). <p class=\"left_margin\">3. Указано  на  неверное  условие  продолжения  цикла,  и  оно исправлено на верное. <p class=\"left_margin\">Каждый из п. 2 и 3 считается выполненным, если: <p class=\"left_margin\">а) правильно указана строка с ошибкой;<p class=\"left_margin\">б)  указан  такой  новый  вариант  строки,  что  при  исправлении второй ошибки получается правильная программа</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Демонстрационная версия ЕГЭ—2014 по информатике.\n",
            "task_id": "6014"
        },
        {
            "answer": "Решение.1.\tПри вводе числа 1984 программа выведет 8.  Комментарий для экспертов. Приведённая программа вместо подсчёта суммы чётных цифр запоминает очередную чётную цифру, забывая при этом предыдущие. Поскольку цифры в записи числа обрабатываются с конца (справа налево), программа запоминает и выводит первую чётную цифру в десятичной записи или 0, если чётных цифр нет. 2.\tПримеры чисел, для которых программа даёт верный ответ: 1975, 1961, 30051,2013. Комментарий для экспертов. Программа выдает верный ответ в следующих случаях: 1.\tВ числе вообще нет чётных цифр.2.\tВ числе ровно одна чётная цифра.3.\tВсе чётные цифры числа-нули.4.\tВ числе есть нули и ровно одна ненулевая чётная цифра, причём все нули расположены правее ненулевой четной цифры. 3.\tОшибка содержится ровно в одной строке программы: вместо присваивания переменной s значения найденной чётной цифры нужно увеличить s на значение этой цифры. БейсикПаскальСтрока с ошибкой:S = N MOD 10 Возможные варианты исправления:S = S + N MOD 10 S = N MOD 10 + SСтрока с ошибкой:S := N mod 10; Возможные варианты исправления:s := s + N mod 10; s := N mod 10 + s;Точка с запятой в конце строки не обязательна. СиАлгоритмическийСтрока с ошибкой:S = N % 10; Возможные варианты исправления:s = s + N % 10; s = N % 10 + s; s += N % 10; Строка с ошибкой:s := mod(N,10) Возможные варианты исправления:s := s + mod(N,10) s := mod(N,10) + s В любом варианте допустимы избыточные скобки, не изменяющие правильный порядок действий.Некоторые строки программы могут показаться ошибочными, но в действительности ошибок не содержат. В первую очередь, к ним относятся строки с условиями.Условие цикла (N > 1) может показаться неправильным. Действительно в стандартной схеме решения подобных задач используется условие N>0. Условие N > 1 приводит к тому, что, если старшая цифра числа равна 1, она не будет обрабатываться. Однако, поскольку 1 — нечётная цифра, ее обработка никак не влияет на результат, поэтому в данном случае такое условие допустимо.Проверка чётности (N mod 2 = 0) может показаться неправильной, так как проверяется чётность не последней цифры, а числа в целом. Для проверки последней цифры следовало бы написать N mod 10 mod 2 = 0. Однако известно, что чётность числа всегда совпадает с чётностью его последней цифры, поэтому приведённая в программе проверка не может считаться ошибкой.",
            "parsed": "2019-04-29 21:10:02.030925",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число N, не превосходящее 109, и выводится сумма чётных цифр в десятичной записи этого числа или 0, если чётных цифр в записи нет. Ученик написал такую программу:  БейсикПаскаль DIM N AS LONG  INPUT N  S = 0  WHILE N > 1  IF N MOD 2 = 0  S = N MOD 10   END IF   N = N \\ 10  WEND  PRINT S  END var N: longint;   s: integer;  begin  readln(N);  s := 0;  while N > 1 do begin  if N mod 2 = 0 then begin  s := N mod 10;  end;  N := N div 10;  end;   write(s);  end.Си++Алгоритмический язык #include <iostream>using namespace std;  int main()  {  long int N;  int s;  cin >> N;  s = 0;  while (N > 1) {  if (N%2 == 0) {   s = N % 10;  }  N = N / 10;  }  cout « s « endl; } алг нач цел N, s  ввод N   s := 0  нц пока N > 1  если mod(N,2) = 0 то  s := mod(N,10)  все N := div(N,10)  кц вывод s  конPythonN = int(input())s = 0while N > 1:     if N % 2 == 0:        s = N % 10     N //= 10  print(s)  Последовательно выполните следующее.  1. Напишите, что выведет эта программа при вводе числа 1984.2.Приведите пример числа, при вводе которого программа выдаст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947915\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число <i>N</i>, не превосходящее 10<sup>9</sup>, и выводится сумма чётных цифр в десятичной записи этого числа или 0, если чётных цифр в записи нет. Ученик написал такую программу: <p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><p><div class=\"source_code lang_basic\"><p> DIM N AS LONG <p> INPUT N <p> S = 0 <p> WHILE N &gt; 1 <p> IF N MOD 2 = 0 <p> S = N MOD 10 <p>  END IF <p>  N = N \\ 10 <p> WEND <p> PRINT S <p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_pascal\"><p> var N: longint;  <p> s: integer; <p> begin <p> readln(N); <p> s := 0; <p> while N &gt; 1 do begin <p> if N mod 2 = 0 then begin <p> s := N mod 10; <p> end; <p> N := N div 10; <p> end;  <p> write(s); <p> end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p> #include &lt;iostream&gt;<p>using namespace std; <p> int main() <p> { <p> long int N; <p> int s; <p> cin &gt;&gt; N; <p> s = 0; <p> while (N &gt; 1) { <p> if (N%2 == 0) { <p>  s = N % 10; <p> } <p> N = N / 10; <p> } <p> cout « s « endl; <p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p> алг<p> нач<p> цел N, s <p> ввод N  <p> s := 0 <p> нц пока N &gt; 1 <p> если mod(N,2) = 0 то <p> s := mod(N,10) <p> все<p> N := div(N,10) <p> кц<p> вывод s <p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p class=\"left_margin\">N = int(input())<p>s = 0<p>while N &gt; 1: <p>    if N % 2 == 0:<p>        s = N % 10 <p>    N //= 10  <p>print(s)<p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее. <p> </p><p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1984.<p class=\"left_margin\">2.Приведите пример числа, при вводе которого программа выдаст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p> </p><p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.\tПри вводе числа 1984 программа выведет 8.  Комментарий для экспертов. Приведённая программа вместо подсчёта суммы чётных цифр запоминает очередную чётную цифру, забывая при этом предыдущие. Поскольку цифры в записи числа обрабатываются с конца (справа налево), программа запоминает и выводит первую чётную цифру в десятичной записи или 0, если чётных цифр нет. 2.\tПримеры чисел, для которых программа даёт верный ответ: 1975, 1961, 30051,2013. Комментарий для экспертов. Программа выдает верный ответ в следующих случаях: 1.\tВ числе вообще нет чётных цифр.2.\tВ числе ровно одна чётная цифра.3.\tВсе чётные цифры числа-нули.4.\tВ числе есть нули и ровно одна ненулевая чётная цифра, причём все нули расположены правее ненулевой четной цифры. 3.\tОшибка содержится ровно в одной строке программы: вместо присваивания переменной s значения найденной чётной цифры нужно увеличить s на значение этой цифры. БейсикПаскальСтрока с ошибкой:S = N MOD 10 Возможные варианты исправления:S = S + N MOD 10 S = N MOD 10 + SСтрока с ошибкой:S := N mod 10; Возможные варианты исправления:s := s + N mod 10; s := N mod 10 + s;Точка с запятой в конце строки не обязательна. СиАлгоритмическийСтрока с ошибкой:S = N % 10; Возможные варианты исправления:s = s + N % 10; s = N % 10 + s; s += N % 10; Строка с ошибкой:s := mod(N,10) Возможные варианты исправления:s := s + mod(N,10) s := mod(N,10) + s В любом варианте допустимы избыточные скобки, не изменяющие правильный порядок действий.Некоторые строки программы могут показаться ошибочными, но в действительности ошибок не содержат. В первую очередь, к ним относятся строки с условиями.Условие цикла (N > 1) может показаться неправильным. Действительно в стандартной схеме решения подобных задач используется условие N>0. Условие N > 1 приводит к тому, что, если старшая цифра числа равна 1, она не будет обрабатываться. Однако, поскольку 1 — нечётная цифра, ее обработка никак не влияет на результат, поэтому в данном случае такое условие допустимо.Проверка чётности (N mod 2 = 0) может показаться неправильной, так как проверяется чётность не последней цифры, а числа в целом. Для проверки последней цифры следовало бы написать N mod 10 mod 2 = 0. Однако известно, что чётность числа всегда совпадает с чётностью его последней цифры, поэтому приведённая в программе проверка не может считаться ошибкой.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6199\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.\tПри вводе числа 1984 программа выведет 8. <p> </p><p><i>Комментарий для экспертов.</i> Приведённая программа вместо подсчёта суммы чётных цифр запоминает очередную чётную цифру, забывая при этом предыдущие. Поскольку цифры в записи числа обрабатываются с конца (справа налево), программа запоминает и выводит первую чётную цифру в десятичной записи или 0, если чётных цифр нет.<p> </p><p class=\"left_margin\">2.\tПримеры чисел, для которых программа даёт верный ответ: 1975, 1961, 30051,2013.<p> </p><p><i>Комментарий для экспертов.</i> Программа выдает верный ответ в следующих случаях:<p> </p><p class=\"left_margin\">1.\tВ числе вообще нет чётных цифр.<p class=\"left_margin\">2.\tВ числе ровно одна чётная цифра.<p class=\"left_margin\">3.\tВсе чётные цифры числа-нули.<p class=\"left_margin\">4.\tВ числе есть нули и ровно одна ненулевая чётная цифра, причём все нули расположены правее ненулевой четной цифры.<p> </p><p class=\"left_margin\">3.\tОшибка содержится ровно в одной строке программы: вместо присваивания переменной <i>s</i> значения найденной чётной цифры нужно увеличить <i>s</i> на значение этой цифры.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><td><b>Бейсик</b></td><td><b>Паскаль</b></td></tr><tr><td><p class=\"left_margin\">Строка с ошибкой:<p class=\"left_margin\">S = N MOD 10<p> </p><p class=\"left_margin\">Возможные варианты исправления:<p class=\"left_margin\">S = S + N MOD 10 <p class=\"left_margin\">S = N MOD 10 + S<p></p></p></p></p></p></p></td><td><p class=\"left_margin\">Строка с ошибкой:<p class=\"left_margin\">S := N mod 10;<p> </p><p class=\"left_margin\">Возможные варианты исправления:<p>s := s + N mod 10; <p>s := N mod 10 + s;<p class=\"left_margin\">Точка с запятой в конце строки не обязательна. <p></p></p></p></p></p></p></p></td></tr><tr><td><b>Си</b></td><td><b>Алгоритмический</b></td></tr><tr><td><p class=\"left_margin\">Строка с ошибкой:<p class=\"left_margin\">S = N % 10;<p> </p><p class=\"left_margin\">Возможные варианты исправления:<p>s = s + N % 10; <p>s = N % 10 + s; <p>s += N % 10; <p></p></p></p></p></p></p></p></td><td><p class=\"left_margin\">Строка с ошибкой:<p>s := mod(N,10)<p> </p><p class=\"left_margin\">Возможные варианты исправления:<p>s := s + mod(N,10) <p>s := mod(N,10) + s<p></p></p></p></p></p></p></td></tr></table><p> </p></p></center><p class=\"left_margin\">В любом варианте допустимы избыточные скобки, не изменяющие правильный порядок действий.<p class=\"left_margin\">Некоторые строки программы могут показаться ошибочными, но в действительности ошибок не содержат. В первую очередь, к ним относятся строки с условиями.<p class=\"left_margin\">Условие цикла (N &gt; 1) может показаться неправильным. Действительно в стандартной схеме решения подобных задач используется условие N&gt;0. Условие N &gt; 1 приводит к тому, что, если старшая цифра числа равна 1, она не будет обрабатываться. Однако, поскольку 1 — нечётная цифра, ее обработка никак не влияет на результат, поэтому в данном случае такое условие допустимо.<p class=\"left_margin\">Проверка чётности (N mod 2 = 0) может показаться неправильной, так как проверяется чётность не последней цифры, а числа в целом. Для проверки последней цифры следовало бы написать N mod 10 mod 2 = 0. Однако известно, что чётность числа всегда совпадает с чётностью его последней цифры, поэтому приведённая в программе проверка не может считаться ошибкой.</p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "6199"
        },
        {
            "answer": "Решение.Элементы ответа: ОбластьУсловие 1 (y<=1)Условие 2 (y>=x)Условие 3 (x>=–1)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верно A нет————нетBнет————нетCнет————нетDда да нет——нетEда да данетне принадлежитнетFда да дадапринадлежитдаGда да данетне принадлежитдаHда нет———нетIда нет———нетJда нет———нетKда да данетне принадлежитда Возможная доработка (Паскаль, объединение двух пересекающихся областей): if (x*x+y*y<=1) and (y>=x) or (y>=x+1) and (x>=-1) and (y<=1) then write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от окружности):  if ((x*x+y*y<=1) && (y>=x) ||  (x*x+y*y>=1) && (x>=-1) && (x<=0) && (y>=0) &&  (y<=1)) cout << \"принадлежит\"; else  cout << \"не принадлежит\"; Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:15.449752",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.БейсикПаскаль INPUT x, y IF y<=1 THEN IF y>=x THEN IF x>=-1 THEN IF x*x+y*y<=1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END IF END var x,y: real; begin readln(x,y); if y<=1 then if y>=x then if x>=-1 then if x*x+y*y<=1 then write('принадлежит') else write('не принадлежит'); end.Си++Алгоритмический #include <iostream>using namespace std; int main() { float x,y; cin >> x >> y; if (y<=1) if (y>=x) if (x>=-1) if (x*x+y*y<=1) cout << \"принадлежит\"; else cout << \"не принадлежит\"; } алг нач вещ x,y ввод x,y если y<=1 то если y>=x то если x>=-1 то если x*x+y*y<=1 то вывод 'принадлежит' иначе вывод 'не принадлежит' все все все все конPythonx,y = float(input())if y<=1:    if y>=x:        if x>=-1:            if x*x+y*y<=1:                print(\"принадлежит\")            else:                print(\"не принадлежит\")  Последовательно выполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет». ОбластьУсловие1 (y<=1)Условие 2 (y>=x)Условие 3 (x>=−1)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAВСDЕFGНIJK 2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947832\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.<img src=\"/get_file?id=11230\" style=\"margin:10px auto;display:block\"/><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x, y<p> IF y&lt;=1 THEN<p> IF y&gt;=x THEN<p> IF x&gt;=-1 THEN<p> IF x*x+y*y&lt;=1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> END IF<p> END IF<p> END IF<p> END IF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p> var x,y: real;<p> begin<p> readln(x,y);<p> if y&lt;=1 then<p> if y&gt;=x then<p> if x&gt;=-1 then<p> if x*x+y*y&lt;=1 then<p> write('принадлежит')<p> else<p> write('не принадлежит');<p> end.<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"><p> #include &lt;iostream&gt;<p>using namespace std;<p> int main()<p> {<p> float x,y;<p> cin &gt;&gt; x &gt;&gt; y;<p> if (y&lt;=1)<p> if (y&gt;=x)<p> if (x&gt;=-1)<p> if (x*x+y*y&lt;=1)<p> cout &lt;&lt; \"принадлежит\";<p> else<p> cout &lt;&lt; \"не принадлежит\";<p> }<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><td><p><div class=\"source_code lang_alg\"><p> алг<p> нач<p> вещ x,y<p> ввод x,y<p> если y&lt;=1 то<p> если y&gt;=x то<p> если x&gt;=-1 то<p> если x*x+y*y&lt;=1 то<p> вывод 'принадлежит'<p> иначе<p> вывод 'не принадлежит'<p> все<p> все<p> все<p> все<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></p></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=1:<p>    if y&gt;=x:<p>        if x&gt;=-1:<p>            if x*x+y*y&lt;=1:<p>                print(\"принадлежит\")<p>            else:<p>                print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=11231\" style=\"float:right;margin:10px\"/><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"70\">Область</td><td style=\"text-align:center\" width=\"220\">Условие1 (y&lt;=1)</td><td style=\"text-align:center\" width=\"220\">Условие 2 (y&gt;=x)</td><td style=\"text-align:center\" width=\"70\">Условие 3 <p class=\"left_margin\">(x&gt;=−1)</p></td><td style=\"text-align:center\" width=\"220\">Условие 4 (x*x+y*y&lt;=1)</td><td width=\"90\">Программа <p>выведет</p></td><td style=\"text-align:center\" width=\"250\">Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td style=\"text-align:center\" width=\"220\">A</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">В</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">С</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">D</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">Е</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">F</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">G</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">Н</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">I</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">J</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">K</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr></table><p> </p></p></center><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: ОбластьУсловие 1 (y<=1)Условие 2 (y>=x)Условие 3 (x>=–1)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верно A нет————нетBнет————нетCнет————нетDда да нет——нетEда да данетне принадлежитнетFда да дадапринадлежитдаGда да данетне принадлежитдаHда нет———нетIда нет———нетJда нет———нетKда да данетне принадлежитда Возможная доработка (Паскаль, объединение двух пересекающихся областей): if (x*x+y*y<=1) and (y>=x) or (y>=x+1) and (x>=-1) and (y<=1) then write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от окружности):  if ((x*x+y*y<=1) && (y>=x) ||  (x*x+y*y>=1) && (x>=-1) && (x<=0) && (y>=0) &&  (y<=1)) cout << \"принадлежит\"; else  cout << \"не принадлежит\"; Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6276\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><center><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\" width=\"70\">Область</td><td style=\"text-align:center\">Условие 1 (y&lt;=1)</td><td style=\"text-align:center\">Условие 2 (y&gt;=x)</td><td style=\"text-align:center\">Условие 3 (x&gt;=–1)</td><td style=\"text-align:center\">Условие 4 (x*x+y*y&lt;=1)</td><td style=\"text-align:center\" width=\"80\">Программа выведет</td><td style=\"text-align:center\">Область обрабатывается верно </td></tr><tr><td style=\"text-align:center\">A <p></p></td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">H</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">J</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">K</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">да</td></tr></table><p> </p></p></center><p class=\"left_margin\">Возможная доработка (Паскаль, объединение двух пересекающихся областей):<p> </p><p>if (x*x+y*y&lt;=1) and (y&gt;=x) or (y&gt;=x+1) and (x&gt;=-1) and (y&lt;=1) then <p>write('принадлежит') <p>else  write('не принадлежит') <p> </p><p class=\"left_margin\">Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от окружности): <p> </p><p>if ((x*x+y*y&lt;=1) &amp;&amp; (y&gt;=x) ||  (x*x+y*y&gt;=1) &amp;&amp; (x&gt;=-1) &amp;&amp; (x&lt;=0) &amp;&amp; (y&gt;=0) &amp;&amp;  (y&lt;=1)) <p>cout &lt;&lt; \"принадлежит\"; <p>else  cout &lt;&lt; \"не принадлежит\";<p> </p><p class=\"left_margin\">Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 08.07.2013. Вторая волна. Ва­ри­ант 501.",
            "task_id": "6276"
        },
        {
            "answer": "Решение.Элементы ответа: ОбластьУсловие1 (y<=1)Условие 2 (y>=0)Условие 3 (x>=−1)Условие 4 (y>=x*x)Программа выведетОбласть обрабатывается верноA нет————нетBнет————нетCнет————нетDнет————нетEда да нет——нетFда да дадапринадлежитдаGда да данетне принадлежитдаHда нет———нетIда нет———нетJдададанетне принадлежитнет Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0): if (y>=x*x) and (y<=1) and (x>=0) or  (x<=0) and (x>=-1) and (y>=0) and (y<=1) then  write('принадлежит') else  write('не принадлежит') Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от параболы):  if((y>=x*x) && (y<=1) || (y<=x*x) && (x>=-1) && (y>=0))  cout << \"принадлежит\"; else cout << \"не принадлежит\";  Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим). Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:28.284144",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования. БейсикПаскальINPUT x, y IF y<=1 THEN IF y>=0 THEN IF x>=-1 THEN IF y>=x*x THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END IF ENDvar x,y: real; begin readln(x,y); if y<=1 then if y>=0 then if x>=-1 then if y>=x*x then write('принадлежит') else write('не принадлежит'); end.Си++Алгоритмический#include <iostream>using namespace std; int main(){ float x,y; cin >> x >> y; if (y<=1) if (y>=0) if (x>=-1) if (y>=x*x) cout << \"принадлежит\"; else cout << \"не принадлежит\";}алг нач вещ x,y ввод x,y если y<=1 то если y>=0 то если x>=-1 то если y>=x*x то вывод 'принадлежит' иначе вывод 'не принадлежит' все все все все конPythonx,y = float(input()), float(input())if y<=1:    if y>=0:        if x>=-1:            if y>=x*x:                print(\"принадлежит\")        else:                print(\"не принадлежит\")  Последовательно выполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет». ОбластьУсловие1 (y<=1)Условие 2 (y>=0)Условие 3 (x>=−1)Условие 4 (y>=x*x)Программа выведетОбласть обрабатывается верноAВСDЕFGНIJ 2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947792\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.<img src=\"/get_file?id=11248\" style=\"margin:10px auto;display:block\"/><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT x, y <p class=\"left_margin\">IF y&lt;=1 THEN <p class=\"left_margin\">IF y&gt;=0 THEN <p class=\"left_margin\">IF x&gt;=-1 THEN <p class=\"left_margin\">IF y&gt;=x*x THEN <p class=\"left_margin\">PRINT \"принадлежит\" <p class=\"left_margin\">ELSE <p class=\"left_margin\">PRINT \"не принадлежит\" <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><td><div class=\"source_code lang_pascal\"><p>var x,y: real; <p>begin <p>readln(x,y); <p>if y&lt;=1 then <p>if y&gt;=0 then <p>if x&gt;=-1 then <p>if y&gt;=x*x then <p>write('принадлежит') <p>else <p>write('не принадлежит'); <p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main()<p>{<p> float x,y;<p> cin &gt;&gt; x &gt;&gt; y;<p> if (y&lt;=1)<p> if (y&gt;=0)<p> if (x&gt;=-1)<p> if (y&gt;=x*x)<p> cout &lt;&lt; \"принадлежит\";<p> else<p> cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><td><div class=\"source_code lang_alg\"><p>алг <p>нач <p>вещ x,y <p>ввод x,y <p>если y&lt;=1 то <p>если y&gt;=0 то <p>если x&gt;=-1 то <p>если y&gt;=x*x то <p>вывод 'принадлежит' <p>иначе <p>вывод 'не принадлежит' <p>все <p>все <p>все <p>все <p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input()), float(input())<p>if y&lt;=1:<p>    if y&gt;=0:<p>        if x&gt;=-1:<p>            if y&gt;=x*x:<p>                print(\"принадлежит\")<p>        else:<p>                print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p><img src=\"/get_file?id=13675\" style=\"float:right;margin:10px\" width=\"200\"/><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"100\">Область</td><td style=\"text-align:center\" width=\"220\">Условие1 (y&lt;=1)</td><td style=\"text-align:center\" width=\"220\">Условие 2 (y&gt;=0)</td><td style=\"text-align:center\" width=\"220\">Условие 3 <p class=\"left_margin\">(x&gt;=−1)</p></td><td style=\"text-align:center\" width=\"220\">Условие 4 (y&gt;=x*x)</td><td style=\"text-align:center\" width=\"220\">Программа <p>выведет</p></td><td style=\"text-align:center\" width=\"240\">Область обрабатывается <p>верно</p></td></tr><tr><td style=\"text-align:center\" width=\"220\">A</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">В</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">С</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">D</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">Е</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">F</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">G</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">Н</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">I</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">J</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr></table><p> </p></p></center><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: ОбластьУсловие1 (y<=1)Условие 2 (y>=0)Условие 3 (x>=−1)Условие 4 (y>=x*x)Программа выведетОбласть обрабатывается верноA нет————нетBнет————нетCнет————нетDнет————нетEда да нет——нетFда да дадапринадлежитдаGда да данетне принадлежитдаHда нет———нетIда нет———нетJдададанетне принадлежитнет Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0): if (y>=x*x) and (y<=1) and (x>=0) or  (x<=0) and (x>=-1) and (y>=0) and (y<=1) then  write('принадлежит') else  write('не принадлежит') Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от параболы):  if((y>=x*x) && (y<=1) || (y<=x*x) && (x>=-1) && (y>=0))  cout << \"принадлежит\"; else cout << \"не принадлежит\";  Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим). Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6316\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\">Условие1 (y&lt;=1)</td><td style=\"text-align:center\">Условие 2 (y&gt;=0)</td><td style=\"text-align:center\" width=\"100\">Условие 3 <p class=\"left_margin\">(x&gt;=−1)</p></td><td style=\"text-align:center\">Условие 4 (y&gt;=x*x)</td><td style=\"text-align:center\">Программа<p> выведет</p></td><td style=\"text-align:center\">Область обрабатывается верно</td></tr><tr><td style=\"text-align:center\">A <p></p></td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">H</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><p><tr><p><td style=\"text-align:center\">J</td><p><td style=\"text-align:center\">да</td><p><td style=\"text-align:center\">да</td><p><td style=\"text-align:center\">да</td><p><td style=\"text-align:center\">нет</td><p><td style=\"text-align:center\">не принадлежит</td><p><td style=\"text-align:center\">нет</td><p></p></p></p></p></p></p></p></p></tr></p></table><p> </p></p></center><p class=\"left_margin\">Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0):<p> </p><p>if (y&gt;=x*x) and (y&lt;=1) and (x&gt;=0) or  (x&lt;=0) and (x&gt;=-1) and (y&gt;=0) and (y&lt;=1) then <p> write('принадлежит') <p>else  write('не принадлежит')<p> </p><p class=\"left_margin\">Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от параболы): <p> </p><p>if((y&gt;=x*x) &amp;&amp; (y&lt;=1) || (y&lt;=x*x) &amp;&amp; (x&gt;=-1) &amp;&amp; (y&gt;=0)) <p> cout &lt;&lt; \"принадлежит\"; <p>else <p>cout &lt;&lt; \"не принадлежит\"; <p> </p><p class=\"left_margin\">Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x&gt;=0 или x&lt;=0) может быть строгим). Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 08.07.2013. Вторая волна. Ва­ри­ант 502.",
            "task_id": "6316"
        },
        {
            "answer": "Решение.Элементы ответа: ОбластьУсловие1 (x>=–1)Условие 2 (y>=–1) Условие 3 (y<=1)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноA нет————нетBдаданет——нетCнет————нетDдададанетне принадлежитнетEда да дадапринадлежитдаFда да данетне принадлежитдаGда да данетне принадлежитнетHнет ————нетIда нет———нет Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0): if (x*x+y*y<=1) and (x>=0) or  (x<=0) and (x>=-1) and (y<=1) and (y>=-1) then  write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, объединение двух пересекающихся областей):  if((x*x+y*y<=1) ||  (x>=-1) && (x<=0) && (fabs(y)<=1)) cout << \"принадлежит\"; else  cout << \"не принадлежит\";  Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:15.881298",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования. БейсикПаскальINPUT x, y IF x>=-1 THEN IF y>=-1 THEN IF y<=1 THEN IF x*x+y*y<=1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END IF ENDvar x,y: real; begin readln(x,y); if x>=-1 then if y>=-1 then if y<=1 then if x*x+y*y<=1 then write('принадлежит') else write('не принадлежит'); endСи++Алгоритмический#include <iostream>using namespace std; int main() { float x,y; cin >> x >> y; if (x>=-1) if (y>=-1) if (y<=1) if (x*x+y*y<=1) cout << \"принадлежит\"; else cout << \"не принадлежит\"; } алг нач вещ x,y ввод x,y если x>=-1 то если y>=-1 то если y<=1 то если x*x+y*y<=1 то вывод 'принадлежит' иначе вывод 'не принадлежит' все все все все кон Pythonx,y = float(input())if x>=-1:    if y>=-1:        if y<=1:            if x*x+y*y<=1:                print(\"принадлежит\")            else:                print(\"не принадлежит\")  Последовательно выполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет». ОбластьУсловие1 (x>=–1)Условие 2 (y>=–1)Условие 3 (y<=1)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAВСDЕFGНI 2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947760\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.<img src=\"/get_file?id=11352\" style=\"margin:10px auto;display:block\"/><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT x, y <p class=\"left_margin\">IF x&gt;=-1 THEN <p class=\"left_margin\">IF y&gt;=-1 THEN <p class=\"left_margin\">IF y&lt;=1 THEN <p class=\"left_margin\">IF x*x+y*y&lt;=1 THEN <p class=\"left_margin\">PRINT \"принадлежит\" <p class=\"left_margin\">ELSE <p class=\"left_margin\">PRINT \"не принадлежит\" <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var x,y: real; <p>begin <p>readln(x,y); <p>if x&gt;=-1 then <p>if y&gt;=-1 then <p>if y&lt;=1 then <p>if x*x+y*y&lt;=1 then <p>write('принадлежит') <p>else <p>write('не принадлежит'); <p>end<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main() <p>{ <p>float x,y; <p>cin &gt;&gt; x &gt;&gt; y; <p>if (x&gt;=-1) <p>if (y&gt;=-1) <p>if (y&lt;=1) <p>if (x*x+y*y&lt;=1) <p>cout &lt;&lt; \"принадлежит\"; <p>else <p>cout &lt;&lt; \"не принадлежит\"; <p>} <p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг <p>нач <p>вещ x,y <p>ввод x,y <p>если x&gt;=-1 то <p>если y&gt;=-1 то <p>если y&lt;=1 то <p>если x*x+y*y&lt;=1 то <p>вывод 'принадлежит' <p>иначе <p>вывод 'не принадлежит' <p>все <p>все <p>все <p>все <p>кон <p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if x&gt;=-1:<p>    if y&gt;=-1:<p>        if y&lt;=1:<p>            if x*x+y*y&lt;=1:<p>                print(\"принадлежит\")<p>            else:<p>                print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=11353\" style=\"float:right;margin:10px\"/><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\">Условие1 (x&gt;=–1)</td><td style=\"text-align:center\">Условие 2 (y&gt;=–1)</td><td style=\"text-align:center\" width=\"80\">Условие 3 <p class=\"left_margin\">(y&lt;=1)</p></td><td style=\"text-align:center\">Условие 4 (x*x+y*y&lt;=1)</td><td style=\"text-align:center\" width=\"80\">Программа<p> выведет</p></td><td style=\"text-align:center\">Область <p>обрабатывается верно</p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">В</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">С</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">Е</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">Н</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><p><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><p></p></p></table><p> </p></p></center><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: ОбластьУсловие1 (x>=–1)Условие 2 (y>=–1) Условие 3 (y<=1)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноA нет————нетBдаданет——нетCнет————нетDдададанетне принадлежитнетEда да дадапринадлежитдаFда да данетне принадлежитдаGда да данетне принадлежитнетHнет ————нетIда нет———нет Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0): if (x*x+y*y<=1) and (x>=0) or  (x<=0) and (x>=-1) and (y<=1) and (y>=-1) then  write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, объединение двух пересекающихся областей):  if((x*x+y*y<=1) ||  (x>=-1) && (x<=0) && (fabs(y)<=1)) cout << \"принадлежит\"; else  cout << \"не принадлежит\";  Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6348\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\">Условие1 (x&gt;=–1)</td><td style=\"text-align:center\">Условие 2 (y&gt;=–1) <p></p></td><td style=\"text-align:center\" width=\"80\">Условие 3 <p class=\"left_margin\">(y&lt;=1)</p></td><td style=\"text-align:center\">Условие 4 (x*x+y*y&lt;=1)</td><td style=\"text-align:center\">Программа<p> выведет</p></td><td style=\"text-align:center\" width=\"100\">Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A <p></p></td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">H</td><td style=\"text-align:center\">нет </td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\">да </td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr></table><p> </p></p></center><p class=\"left_margin\">Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0):<p> </p><p>if (x*x+y*y&lt;=1) and (x&gt;=0) or  (x&lt;=0) and (x&gt;=-1) and (y&lt;=1) and (y&gt;=-1) then <p> write('принадлежит') <p>else  write('не принадлежит') <p> </p><p class=\"left_margin\">Возможная доработка (Си, объединение двух пересекающихся областей): <p> </p><p>if((x*x+y*y&lt;=1) ||  (x&gt;=-1) &amp;&amp; (x&lt;=0) &amp;&amp; (fabs(y)&lt;=1)) <p>cout &lt;&lt; \"принадлежит\"; <p>else  <p>cout &lt;&lt; \"не принадлежит\"; <p> </p><p class=\"left_margin\">Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x&gt;=0 или x&lt;=0) может быть строгим) Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 08.07.2013. Вторая волна. Ва­ри­ант 601.",
            "task_id": "6348"
        },
        {
            "answer": "Решение.Элементы ответа: ОбластьУсловие1 (y>=–1)Условие 2 (y<=x)Условие 3(y<=0)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAданет———нетВдаданет——нетСданет———нетDдаданет——нетЕданет———нетFданет———нетGдадададапринадлежитдаНдададанетне принадлежитдаIнет————нетJдададанетне принадлежитнетKнет————нет Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0): if (x*x+y*y<=1) and (y<=0) and (x>=0) or  (x<=0) and (y>=-1) and (y<=x) then write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от окружности):  if((x*x+y*y<=1) && (y<=x) && (y<=0) || (x*x+y*y>=1) && (y<=x) && (y>=-1) && (x<=0)) cout << \"принадлежит\"; else  cout << \"не принадлежит\"; Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:16.304540",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования. БейсикПаскальINPUT x, y IF y>=-1 THEN IF y<=x THEN IF y<=0 THEN IF x*x+y*y<=1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" END IF END IF END IF END IF ENDvar x,y: real; begin readln(x,y); if y>=-1 then if y<=x then if y<=0 then if x*x+y*y<=1 then write('принадлежит') else write('не принадлежит'); end.Си++Алгоритмический#include <iostream>using namespace std; int main() { float x,y; cin >> x >> y; if (y>=-1) if (y<=x) if (y<=0) if (x*x+y*y<=1) cout << \"принадлежит\"; else cout << \"не принадлежит\"; } алг нач вещ x,y ввод x,y если y>=-1 то если y<=x то если y<=0 то если x*x+y*y<=1 то вывод 'принадлежит' иначе вывод 'не принадлежит' все все все все конPythonx,y = float(input())if y>=-1:    if y<=x:        if y<=0:            if x*x+y*y<=1:                print(\"принадлежит\")            else:                print(\"не принадлежит\")  Последовательно выполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».  ОбластьУсловие1 (y>=–1)Условие 2 (y<=x)Условие 3 (y<=0)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAВСDЕFGНIJK 2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948189\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.<img src=\"/get_file?id=11452\" style=\"margin:10px auto;display:block\"/><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><p><div class=\"source_code lang_basic\"><p class=\"left_margin\">INPUT x, y <p class=\"left_margin\">IF y&gt;=-1 THEN <p class=\"left_margin\">IF y&lt;=x THEN <p class=\"left_margin\">IF y&lt;=0 THEN <p class=\"left_margin\">IF x*x+y*y&lt;=1 THEN <p class=\"left_margin\">PRINT \"принадлежит\" <p class=\"left_margin\">ELSE <p class=\"left_margin\">PRINT \"не принадлежит\" <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END IF <p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_pascal\"><p>var x,y: real; <p>begin <p>readln(x,y); <p>if y&gt;=-1 then <p>if y&lt;=x then <p>if y&lt;=0 then <p>if x*x+y*y&lt;=1 then <p>write('принадлежит') <p>else <p>write('не принадлежит'); <p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><p><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std; <p>int main() <p>{ <p>float x,y; <p>cin &gt;&gt; x &gt;&gt; y; <p>if (y&gt;=-1) <p>if (y&lt;=x) <p>if (y&lt;=0) <p>if (x*x+y*y&lt;=1) <p>cout &lt;&lt; \"принадлежит\"; <p>else <p>cout &lt;&lt; \"не принадлежит\"; <p>} <p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td><td><div class=\"source_code lang_alg\"><p>алг <p>нач <p>вещ x,y <p>ввод x,y <p>если y&gt;=-1 то <p>если y&lt;=x то <p>если y&lt;=0 то <p>если x*x+y*y&lt;=1 то <p>вывод 'принадлежит' <p>иначе <p>вывод 'не принадлежит' <p>все <p>все <p>все <p>все <p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&gt;=-1:<p>    if y&lt;=x:<p>        if y&lt;=0:<p>            if x*x+y*y&lt;=1:<p>                print(\"принадлежит\")<p>            else:<p>                print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=11453\" style=\"float:right;margin:10px\"/><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\">Условие1<p> (y&gt;=–1)</p></td><td style=\"text-align:center\">Условие 2 <p class=\"left_margin\">(y&lt;=x)</p></td><td style=\"text-align:center\">Условие 3 <p class=\"left_margin\">(y&lt;=0)</p></td><td style=\"text-align:center\">Условие 4 <p class=\"left_margin\">(x*x+y*y&lt;=1)</p></td><td style=\"text-align:center\">Программа<p> выведет</p></td><td style=\"text-align:center\">Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">В</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">С</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">Е</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">Н</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">J</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">K</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr></table><p> </p></p></center><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: ОбластьУсловие1 (y>=–1)Условие 2 (y<=x)Условие 3(y<=0)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAданет———нетВдаданет——нетСданет———нетDдаданет——нетЕданет———нетFданет———нетGдадададапринадлежитдаНдададанетне принадлежитдаIнет————нетJдададанетне принадлежитнетKнет————нет Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0): if (x*x+y*y<=1) and (y<=0) and (x>=0) or  (x<=0) and (y>=-1) and (y<=x) then write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от окружности):  if((x*x+y*y<=1) && (y<=x) && (y<=0) || (x*x+y*y>=1) && (y<=x) && (y>=-1) && (x<=0)) cout << \"принадлежит\"; else  cout << \"не принадлежит\"; Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6433\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\" width=\"80\">Условие1 <p class=\"left_margin\">(y&gt;=–1)</p></td><td style=\"text-align:center\">Условие 2 (y&lt;=x)</td><td style=\"text-align:center\" width=\"90\">Условие 3<p class=\"left_margin\">(y&lt;=0)</p></td><td style=\"text-align:center\">Условие 4 (x*x+y*y&lt;=1)</td><td style=\"text-align:center\">Программа<p> выведет</p></td><td style=\"text-align:center\" width=\"100\">Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">В</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">С</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">Е</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">Н</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">J</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">K</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr></table><p> </p></p></center><p class=\"left_margin\">Возможная доработка (Паскаль, отдельно рассматриваем области, лежащие по разные стороны от прямой x=0):<p> </p><p>if (x*x+y*y&lt;=1) and (y&lt;=0) and (x&gt;=0) or  (x&lt;=0) and (y&gt;=-1) and (y&lt;=x) then <p>write('принадлежит') <p>else  write('не принадлежит') <p> </p><p class=\"left_margin\">Возможная доработка (Си, отдельно рассматриваем области, лежащие по разные стороны от окружности): <p> </p><p>if((x*x+y*y&lt;=1) &amp;&amp; (y&lt;=x) &amp;&amp; (y&lt;=0) || (x*x+y*y&gt;=1) &amp;&amp; (y&lt;=x) &amp;&amp; (y&gt;=-1) &amp;&amp; (x&lt;=0)) <p>cout &lt;&lt; \"принадлежит\"; <p>else  cout &lt;&lt; \"не принадлежит\";<p> </p><p class=\"left_margin\">Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x&gt;=0 или x&lt;=0) может быть строгим) Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 08.07.2013. Вторая волна. Ва­ри­ант 602.",
            "task_id": "6433"
        },
        {
            "answer": "Решение.Элементы ответа: ОбластьУсловие1 (y<=1–x)Условие 2 (y>=0)Условие 3 (x>=0)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAдаданет——нетВнет————нетСнет————нетDдаданет——нетЕдадададапринадлежитдаFнет————нетGданет———нетНданет———нетIданет———нетJданет———нетKнет————нет Возможная доработка (Паскаль, объединение двух пересекающихся областей, с отсечением):  if (x*x+y*y<=1) and (y<=1-x) and ((x>=0) or (y>=0)) then write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, отдельно рассматриваем три области, лежащие по разные стороны от координатных осей):   if ((x*x+y*y<=1) && (y>=0) && (x<=0) ||  (x*x+y*y<=1) && (y<=0) && (x>=0) ||  (x>=0) && (y>=0) && (y<=1-x))  cout << \"принадлежит\";  else  cout << \"не принадлежит\";   Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:16.704209",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.БейсикПаскаль INPUT x, y  IF y<=1-x THEN  IF y>=0 THEN   IF x>=0 THEN    IF x*x+y*y<=1 THEN     PRINT \"принадлежит\"    ELSE     PRINT \"не принадлежит\"    END IF   END IF  END IF  END IF  END   var x,y: real;  begin  readln(x,y);  if y<=1-x then  if y>=0 then  if x>=0 then  if x*x+y*y<=1 then  write('принадлежит')  else  write('не принадлежит');  end.  Си++Алгоритмический язык #include <iostream>using namespace std;  int main()  {  float x,y;  cin >> x >> y;  if (y<=1-x)  if (y>=0)  if (x>=0)  if (x*x+y*y<=1)  cout << \"принадлежит\";  else  cout << \"не принадлежит\";  }  алг  нач  вещ x,y  ввод x,y  если y<=1-x то  если y>=0 то  если x>=0 то  если x*x+y*y<=1 то  вывод 'принадлежит'  иначе  вывод 'не принадлежит'  все  все  все  все  кон  Pythonx,y = float(input())if y<=1-x:    if y>=0:        if x>=0:            if x*x+y*y<=1:                print(\"принадлежит\")            else:                print(\"не принадлежит\")  Последовательно выполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет». ОбластьУсловие1 (y<=1–x)Условие 2 (y>=0)Условие 3 (x>=0)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAВСDЕFGНIJK 2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948153\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). Программист торопился и написал программу неправильно. Ниже для Вашего удобства программа представлена на четырёх языках программирования.<img src=\"/get_file?id=11545\" style=\"margin:10px auto;display:block\"/><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x, y <p> IF y&lt;=1-x THEN <p> IF y&gt;=0 THEN <p>  IF x&gt;=0 THEN <p>   IF x*x+y*y&lt;=1 THEN <p>    PRINT \"принадлежит\" <p>   ELSE <p>    PRINT \"не принадлежит\" <p>   END IF <p>  END IF <p> END IF <p> END IF <p> END <p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p> var x,y: real; <p> begin <p> readln(x,y); <p> if y&lt;=1-x then <p> if y&gt;=0 then <p> if x&gt;=0 then <p> if x*x+y*y&lt;=1 then <p> write('принадлежит') <p> else <p> write('не принадлежит'); <p> end. <p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_c\"><p> #include &lt;iostream&gt;<p>using namespace std; <p> int main() <p> { <p> float x,y; <p> cin &gt;&gt; x &gt;&gt; y; <p> if (y&lt;=1-x) <p> if (y&gt;=0) <p> if (x&gt;=0) <p> if (x*x+y*y&lt;=1) <p> cout &lt;&lt; \"принадлежит\"; <p> else <p> cout &lt;&lt; \"не принадлежит\"; <p> }<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг <p> нач <p> вещ x,y <p> ввод x,y <p> если y&lt;=1-x то <p> если y&gt;=0 то <p> если x&gt;=0 то <p> если x*x+y*y&lt;=1 то <p> вывод 'принадлежит' <p> иначе <p> вывод 'не принадлежит' <p> все <p> все <p> все <p> все <p> кон <p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x,y = float(input())<p>if y&lt;=1-x:<p>    if y&gt;=0:<p>        if x&gt;=0:<p>            if x*x+y*y&lt;=1:<p>                print(\"принадлежит\")<p>            else:<p>                print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p><img src=\"/get_file?id=11546\" style=\"float:right;margin:10px\"/><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G, H, I, J, K). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\">Условие1 (y&lt;=1–x)</td><td style=\"text-align:center\">Условие 2 (y&gt;=0)</td><td style=\"text-align:center\" width=\"100\">Условие 3 <p class=\"left_margin\">(x&gt;=0)</p></td><td style=\"text-align:center\">Условие 4 (x*x+y*y&lt;=1)</td><td style=\"text-align:center\" width=\"80\">Программа<p> выведет</p></td><td style=\"text-align:center\" width=\"120\">Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">В</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">С</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">Е</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">Н</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">J</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr><tr><td style=\"text-align:center\">K</td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td><td style=\"text-align:center\"></td></tr></table><p> </p></p></center><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: ОбластьУсловие1 (y<=1–x)Условие 2 (y>=0)Условие 3 (x>=0)Условие 4 (x*x+y*y<=1)Программа выведетОбласть обрабатывается верноAдаданет——нетВнет————нетСнет————нетDдаданет——нетЕдадададапринадлежитдаFнет————нетGданет———нетНданет———нетIданет———нетJданет———нетKнет————нет Возможная доработка (Паскаль, объединение двух пересекающихся областей, с отсечением):  if (x*x+y*y<=1) and (y<=1-x) and ((x>=0) or (y>=0)) then write('принадлежит') else  write('не принадлежит')  Возможная доработка (Си, отдельно рассматриваем три области, лежащие по разные стороны от координатных осей):   if ((x*x+y*y<=1) && (y>=0) && (x<=0) ||  (x*x+y*y<=1) && (y<=0) && (x>=0) ||  (x>=0) && (y>=0) && (y<=1-x))  cout << \"принадлежит\";  else  cout << \"не принадлежит\";   Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6469\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"80\">Область</td><td style=\"text-align:center\">Условие1 (y&lt;=1–x)</td><td style=\"text-align:center\">Условие 2 (y&gt;=0)</td><td style=\"text-align:center\" width=\"100\">Условие 3 <p class=\"left_margin\">(x&gt;=0)</p></td><td style=\"text-align:center\">Условие 4 (x*x+y*y&lt;=1)</td><td style=\"text-align:center\" width=\"80\">Программа<p> выведет</p></td><td style=\"text-align:center\" width=\"120\">Область <p>обрабатывается <p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">В</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">С</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">Е</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">да</td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">Н</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">I</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">J</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">K</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr></table><p> </p></p></center><p class=\"left_margin\">Возможная доработка (Паскаль, объединение двух пересекающихся областей, с отсечением): <p> </p><p>if (x*x+y*y&lt;=1) and (y&lt;=1-x) and ((x&gt;=0) or (y&gt;=0)) <p>then <p>write('принадлежит') <p>else  write('не принадлежит') <p> </p><p class=\"left_margin\">Возможная доработка (Си, отдельно рассматриваем три области, лежащие по разные стороны от координатных осей): <p> </p><p> if ((x*x+y*y&lt;=1) &amp;&amp; (y&gt;=0) &amp;&amp; (x&lt;=0) || <p> (x*x+y*y&lt;=1) &amp;&amp; (y&lt;=0) &amp;&amp; (x&gt;=0) || <p> (x&gt;=0) &amp;&amp; (y&gt;=0) &amp;&amp; (y&lt;=1-x)) <p> cout &lt;&lt; \"принадлежит\"; <p> else <p> cout &lt;&lt; \"не принадлежит\";  <p> </p><p class=\"left_margin\">Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x&gt;=0 или x&lt;=0) может быть строгим) Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 08.07.2013. Вторая волна. Ва­ри­ант 603.",
            "task_id": "6469"
        },
        {
            "answer": "Решение.Элементы ответа: ОбластьУсловие1 (y>=–1)Условие 2 (y<=1)Условие 3 ((x+1)2+y2<=1)Условие 4 ((x−1)2+y2<=1)Программа выведетОбласть обрабатывается верноAданет———нетВдаданет——нетСдададанетне принадлежитнетDдаданет——нетЕдаданет——нетFдаданет——нетGдаданет——нет Возможная доработка (Паскаль, разбиение на три области):  if ((x+1)*(x+1)+y*y<=1) and (x<=-1) or((x-1)*(x-1)+y*y<=1) and (x>=1) or(x>=-1) and (x<=1) and (y<=1) and (y>=-1) thenwrite('принадлежит')elsewrite('не принадлежит') Возможная доработка (Си, объединение пересекающихся областей):   if(((fabs(x)-1)*(fabs(x)-1)+y*y<=1) ||(fabs(x)<=1) && (fabs(y)<=1))cout << \"принадлежит\";elsecout << \"не принадлежит\";   Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "parsed": "2019-04-29 21:10:17.010844",
            "question": "Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы).  Программист торопился и написал программу неправильно. Ниже для вашего удобства программа представлена на четырёх языках программирования. БейсикПаскаль INPUT x, y  IF y>=-1 THEN  IF y<=1 THEN  IF (x+1)*(x+1)+y*y<=1 THEN  IF (x-1)*(x-1)+y*y<=1 THEN  PRINT \" принадлежит\"  ELSE  PRINT \" не принадлежит\"  END IF  END IF  END IF  END IF  END  var x,y: real;  begin  readln(x,y);  if y>=-1 then  if y<=1 then  if (x+1)*(x+1)+y*y<=1 then  if (x-1)*(x-1)+y*y<=1 then  write('принадлежит')  else  write('не принадлежит');  end.Си++Алгоритмический #include <iostream>using namespace std;  int main()  {   float x,y;   cin >> x >> y;   if (y>=-1)  if (y<=1)  if ((x+1)*(x+1)+y*y<=1)  if ((x-1)*(x-1)+y*y<=1)  cout << \"принадлежит\";  else  cout << \"не принадлежит\"; }  алг  нач  вещ x,y   ввод x,y  если y>=-1 то  если y<=1 то  если (x+1)*(x+1)+y*y<=1 то   если (x-1)*(x-1)+y*y<=1 то  вывод 'принадлежит'   иначе   вывод 'не принадлежит'   все  все  все  все  кон Pythonx = float(input())if y>=-1:    if y<=1:        if (x+1)*(x+1)+y*y<=1:            if (x-1)*(x-1)+y*y<=1:                print(\"принадлежит\")            else:                print(\"не принадлежит\")  Последовательно выполните следующее. 1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет». ОбластьУсловие1 (y>=–1)Условие 2 (y<=1)Условие 3 ((x+1)2+y2<=1)Условие 4 ((x–1)2+y2<=1)Программа выведетОбласть обрабатывается верноAВСDЕFG 2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body948115\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая вводит с клавиатуры координаты точки на плоскости (x, y — действительные числа) и определяет принадлежность точки заштрихованной области (включая границы). <img src=\"/get_file?id=11637\" style=\"margin:10px auto;display:block\"/><p> </p><p class=\"left_margin\">Программист торопился и написал программу неправильно. Ниже для вашего удобства программа представлена на четырёх языках программирования.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x, y <p> IF y&gt;=-1 THEN <p> IF y&lt;=1 THEN <p> IF (x+1)*(x+1)+y*y&lt;=1 THEN <p> IF (x-1)*(x-1)+y*y&lt;=1 THEN <p> PRINT \"<p> принадлежит\" <p> ELSE <p> PRINT \"<p> не принадлежит\" <p> END IF <p> END IF <p> END IF <p> END IF <p> END <p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p> var x,y: real; <p> begin <p> readln(x,y); <p> if y&gt;=-1 then <p> if y&lt;=1 then <p> if (x+1)*(x+1)+y*y&lt;=1 then <p> if (x-1)*(x-1)+y*y&lt;=1 then <p> write('принадлежит') <p> else <p> write('не принадлежит'); <p> end.<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"><p> #include &lt;iostream&gt;<p>using namespace std; <p> int main() <p> { <p>  float x,y; <p>  cin &gt;&gt; x &gt;&gt; y; <p>  if (y&gt;=-1) <p> if (y&lt;=1) <p> if ((x+1)*(x+1)+y*y&lt;=1) <p> if ((x-1)*(x-1)+y*y&lt;=1) <p> cout &lt;&lt; \"принадлежит\"; <p> else <p> cout &lt;&lt; \"не принадлежит\"; <p>} <p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг <p> нач <p> вещ x,y  <p> ввод x,y <p> если y&gt;=-1 то <p> если y&lt;=1 то <p> если (x+1)*(x+1)+y*y&lt;=1 то  <p> если (x-1)*(x-1)+y*y&lt;=1 то <p> вывод 'принадлежит'  <p> иначе  <p> вывод 'не принадлежит'  <p> все <p> все <p> все <p> все <p> кон <p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = float(input())<p>if y&gt;=-1:<p>    if y&lt;=1:<p>        if (x+1)*(x+1)+y*y&lt;=1:<p>            if (x-1)*(x-1)+y*y&lt;=1:<p>                print(\"принадлежит\")<p>            else:<p>                print(\"не принадлежит\")<p></p></p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p> </p><p><img src=\"/get_file?id=11636\" style=\"float:right;margin:10px\"/><p class=\"left_margin\">Последовательно выполните следующее.<p> </p><p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D, E, F, G). Точки, лежащие на границах областей, отдельно не рассматривать. Координатные оси не являются границами областей. В столбцах условий укажите «да», если условие выполнится, «нет», если условие не выполнится, «—» (прочерк), если условие не будет проверяться, «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, напишите «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «да» или «нет».<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"220\">Область</td><td style=\"text-align:center\" width=\"220\">Условие1 (y&gt;=–1)</td><td style=\"text-align:center\" width=\"220\">Условие 2 (y&lt;=1)</td><td style=\"text-align:center\" width=\"220\">Условие 3 <p class=\"left_margin\">((x+1)<sup>2</sup>+y<sup>2</sup>&lt;=1)</p></td><td style=\"text-align:center\" width=\"220\">Условие 4 <p class=\"left_margin\">((x–1)<sup>2</sup>+y<sup>2</sup>&lt;=1)</p></td><td style=\"text-align:center\" width=\"220\">Программа выведет</td><td style=\"text-align:center\" width=\"220\">Область обрабатывается <p>верно</p></td></tr><tr><td style=\"text-align:center\" width=\"220\">A</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">В</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">С</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">D</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">Е</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">F</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr><tr><td style=\"text-align:center\" width=\"220\">G</td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td><td style=\"text-align:center\" width=\"220\"></td></tr></table><p> </p></p></center><p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: ОбластьУсловие1 (y>=–1)Условие 2 (y<=1)Условие 3 ((x+1)2+y2<=1)Условие 4 ((x−1)2+y2<=1)Программа выведетОбласть обрабатывается верноAданет———нетВдаданет——нетСдададанетне принадлежитнетDдаданет——нетЕдаданет——нетFдаданет——нетGдаданет——нет Возможная доработка (Паскаль, разбиение на три области):  if ((x+1)*(x+1)+y*y<=1) and (x<=-1) or((x-1)*(x-1)+y*y<=1) and (x>=1) or(x>=-1) and (x<=1) and (y<=1) and (y>=-1) thenwrite('принадлежит')elsewrite('не принадлежит') Возможная доработка (Си, объединение пересекающихся областей):   if(((fabs(x)-1)*(fabs(x)-1)+y*y<=1) ||(fabs(x)<=1) && (fabs(y)<=1))cout << \"принадлежит\";elsecout << \"не принадлежит\";   Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x>=0 или x<=0) может быть строгим) Могут быть и другие верные способы доработки.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6511\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><center><p><table border=\"1\" rules=\"all\"><tr><td style=\"text-align:center\" width=\"60\">Область</td><td style=\"text-align:center\">Условие1 (y&gt;=–1)</td><td style=\"text-align:center\">Условие 2 (y&lt;=1)</td><td style=\"text-align:center\">Условие 3 <p class=\"left_margin\">((x+1)<sup>2</sup>+y<sup>2</sup>&lt;=1)</p></td><td style=\"text-align:center\" width=\"110\">Условие 4 <p class=\"left_margin\">((x−1)<sup>2</sup>+y<sup>2</sup>&lt;=1)</p></td><td style=\"text-align:center\">Программа <p>выведет</p></td><td style=\"text-align:center\">Область обрабатывается верно</td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">В</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">С</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">Е</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">F</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr><tr><td style=\"text-align:center\">G</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">нет</td></tr></table><p> </p></p></center><p class=\"left_margin\">Возможная доработка (Паскаль, разбиение на три области): <p> </p><p>if ((x+1)*(x+1)+y*y&lt;=1) and (x&lt;=-1) or<p class=\"left_margin\">((x-1)*(x-1)+y*y&lt;=1) and (x&gt;=1) or<p class=\"left_margin\">(x&gt;=-1) and (x&lt;=1) and (y&lt;=1) and (y&gt;=-1) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Возможная доработка (Си, объединение пересекающихся областей): <p> </p><p> if(((fabs(x)-1)*(fabs(x)-1)+y*y&lt;=1) ||<p class=\"left_margin\">(fabs(x)&lt;=1) &amp;&amp; (fabs(y)&lt;=1))<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";  <p> </p><p class=\"left_margin\">Обратите внимание! При разделении области вдоль какой-либо линии точки, которые лежат на этой линии внутри области, могут быть причислены к одной части, к другой или к обеим (то есть, например, в приведённом решении на языке Паскаль одно из условий (x&gt;=0 или x&lt;=0) может быть строгим) Могут быть и другие верные способы доработки.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по информатике 08.07.2013. Вторая волна. Ва­ри­ант 801.",
            "task_id": "6511"
        },
        {
            "answer": "Решение.Элементы ответа: 1. При вводе числа 1984 программа выведет число 4. (Комментарий Приведённая программа выводит ответ 10 для n = 10 и последнюю цифру для любого другого значения n.)2. Пример числа, для которого программа даёт верный ответ: 2012. (Комментарий Программа даст верный ответ для любого числа, у которого совпадают первая и последняя цифры. В частности, для любого однозначного числа.)3. Ошибки содержатся в двух строках программы:1) Неверное условие цикла: неравенство должно быть нестрогим, иначе можно в качестве ответа получить 10.2) Неверная операция отбрасывания последней цифры: вместо нахождения остатка нужно использовать целочисленное деление. Пример исправления для языка Паскаль: Первая строка с ошибкой: while n>10 do begin. Исправленная строка: while n>=10 do begin. Другой способ исправления: while n>9 do begin Вторая строка с ошибкой: n := n mod 10. Исправленная строка: n := n div 10. В программах на других языках ошибочные строки и их исправления аналогичны.",
            "parsed": "2019-04-29 21:10:02.438211",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры вводится натуральное число, не превосходящее 108, и выводится его первая (старшая) цифра. Ученик написал такую программу: БейсикПаскальDIM N AS LONGINPUT NWHILE N>10N = N MOD 10WENDPRINT NENDvar n: longint;beginread(n);while n>10 do beginn := n mod 10end;write(n);end.Си++Алгоритмический#include <iostream>using namespace std;int main(){long int n;cin >> n;while (n>10) {n = n%10;}cout << n;}алгначцел nввод nнц пока n>10n := mod(n,10)кцвывод nконPythonn = int(input())while n > 10:     n %= 10  print(n) Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 1984.2. Приведите пример числа, при вводе которого программа выдаст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947321\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры вводится натуральное число, не превосходящее 10<sup>8</sup>, и выводится его первая (старшая) цифра. Ученик написал такую программу:<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p class=\"left_margin\">DIM N AS LONG<p class=\"left_margin\">INPUT N<p class=\"left_margin\">WHILE N&gt;10<p class=\"left_margin\">N = N MOD 10<p class=\"left_margin\">WEND<p class=\"left_margin\">PRINT N<p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var n: longint;<p>begin<p>read(n);<p>while n&gt;10 do begin<p>n := n mod 10<p>end;<p>write(n);<p>end.<p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>long int n;<p>cin &gt;&gt; n;<p>while (n&gt;10) {<p>n = n%10;<p>}<p>cout &lt;&lt; n;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел n<p>ввод n<p>нц пока n&gt;10<p>n := mod(n,10)<p>кц<p>вывод n<p>кон<p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>while n &gt; 10: <p>    n %= 10  <p>print(n)<p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1984.<p class=\"left_margin\">2. Приведите пример числа, при вводе которого программа выдаст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: 1. При вводе числа 1984 программа выведет число 4. (Комментарий Приведённая программа выводит ответ 10 для n = 10 и последнюю цифру для любого другого значения n.)2. Пример числа, для которого программа даёт верный ответ: 2012. (Комментарий Программа даст верный ответ для любого числа, у которого совпадают первая и последняя цифры. В частности, для любого однозначного числа.)3. Ошибки содержатся в двух строках программы:1) Неверное условие цикла: неравенство должно быть нестрогим, иначе можно в качестве ответа получить 10.2) Неверная операция отбрасывания последней цифры: вместо нахождения остатка нужно использовать целочисленное деление. Пример исправления для языка Паскаль: Первая строка с ошибкой: while n>10 do begin. Исправленная строка: while n>=10 do begin. Другой способ исправления: while n>9 do begin Вторая строка с ошибкой: n := n mod 10. Исправленная строка: n := n div 10. В программах на других языках ошибочные строки и их исправления аналогичны.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6789\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><p class=\"left_margin\">1. При вводе числа 1984 программа выведет число 4. (<i>Комментарий</i> Приведённая программа выводит ответ 10 для n = 10 и последнюю цифру для любого другого значения n.)<p class=\"left_margin\">2. Пример числа, для которого программа даёт верный ответ: 2012. (<i>Комментарий</i> Программа даст верный ответ для любого числа, у которого совпадают первая и последняя цифры. В частности, для любого однозначного числа.)<p class=\"left_margin\">3. Ошибки содержатся в двух строках программы:<p class=\"left_margin\">1) Неверное условие цикла: неравенство должно быть нестрогим, иначе можно в качестве ответа получить 10.<p class=\"left_margin\">2) Неверная операция отбрасывания последней цифры: вместо нахождения остатка нужно использовать целочисленное деление.<p> </p><p><b>Пример исправления для языка Паскаль:</b><p> </p><p class=\"left_margin\">Первая строка с ошибкой: while n&gt;10 do begin. Исправленная строка: while n&gt;=10 do begin. Другой способ исправления: while n&gt;9 do begin<p> </p><p class=\"left_margin\">Вторая строка с ошибкой: n := n mod 10. Исправленная строка: n := n div 10.<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.</p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "6789"
        },
        {
            "answer": "Решение.1. При вводе последовательности 1, 1, 2, 3, 5, 8 программа выведет число 13.Комментарий. Приведённая программа вместо подсчёта суммы чётных чисел считает сумму чисел, стоящих на чётных позициях в последовательности, и дополнительно увеличивает эту сумму на 1 из-за неверной инициализации.2. Пример последовательности, для которой программа даёт верный ответ:2, 1, 1, 2, 1, 2.Комментарий. При любом вводе данных результатом программы будет сумма второго, четвертого и шестого чисел, увеличенная на 1. Чтобы результат был верным, нужно подобрать такую последовательность, в которой эта сумма совпадет с суммой чётных чисел. Например, в приведённой выше последовательности обе суммы равны 6.3. Ошибки содержатся в двух строках программы:1) неверная инициализация переменной s: вместо значения 1 нужно присваивать 0;2) неверная проверка условия: вместо чётности i нужно проверять четность n. Пример исправления для языка Паскаль Первая строка с ошибкой:s:=1;Исправленная строка:s:=0; Вторая строка с ошибкой:if i mod 2 = 0 thenИсправленная строка:if n mod 2 = 0 then В программах на других языках ошибочные строки и их исправления аналогичны.",
            "parsed": "2019-04-29 21:09:28.192421",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры вводится последовательность из шести неотрицательных целых чисел, не превышающих 106, подсчитывается и выводится сумма введённых чётных чисел или 0, если чётных чисел в последовательности нет. Ученик написал такую программу: БейсикПаскаль DIM N, S AS LONG DIM I AS INTEGER S = 1 FOR I = 1 TO 6 INPUT N IF I MOD 2 = 0 THEN S = S + N END IF  NEXT I PRINT S END var n, s: longint; i: integer; begin s:=1; for i:=1 to 6 do begin readln(n); if i mod 2 = 0 then s := s + n; end; write(s); end.Си++Алгоритмический  #include <iostream>using namespace std; int main(){ long int n, s; int i; s = 1; for (i=1; i<=6; ++i) { cin >> n; if (i%2 == 0) s = s + n; } cout << s; } алг нач цел n, s цел i s := 1 нц для i от 1 до 6 ввод n если mod(i,2) = 0 то s := s + n все кц вывод s конPythons = 1for i in range(1, 7):    n = int(input())        if i % 2 == 0:            s = s + nprint(s)  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе последовательности 1, 1, 2, 3, 5, 8.2. Приведите пример последовательности, при вводе которой программа выдаст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947211\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры вводится последовательность из шести неотрицательных целых чисел, не превышающих 10<sup>6</sup>, подсчитывается и выводится сумма введённых чётных чисел или 0, если чётных чисел в последовательности нет. Ученик написал такую программу:<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, S AS LONG<p> DIM I AS INTEGER<p> S = 1<p> FOR I = 1 TO 6<p> INPUT N<p> IF I MOD 2 = 0 THEN<p> S = S + N<p> END IF <p> NEXT I<p> PRINT S<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p> var n, s: longint;<p> i: integer;<p> begin<p> s:=1;<p> for i:=1 to 6 do begin<p> readln(n);<p> if i mod 2 = 0 then<p> s := s + n;<p> end;<p> write(s);<p> end.<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p> #include &lt;iostream&gt;<p>using namespace std;<p> int main(){<p> long int n, s;<p> int i;<p> s = 1;<p> for (i=1; i&lt;=6; ++i) {<p> cin &gt;&gt; n;<p> if (i%2 == 0)<p> s = s + n;<p> }<p> cout &lt;&lt; s;<p> }<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг<p> нач<p> цел n, s<p> цел i<p> s := 1<p> нц для i от 1 до 6<p> ввод n<p> если mod(i,2) = 0<p> то s := s + n<p> все<p> кц<p> вывод s<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>s = 1<p>for i in range(1, 7):<p>    n = int(input())<p>        if i % 2 == 0:<p>            s = s + n<p>print(s)<p> </p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе последовательности 1, 1, 2, 3, 5, 8.<p class=\"left_margin\">2. Приведите пример последовательности, при вводе которой программа выдаст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). <p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе последовательности 1, 1, 2, 3, 5, 8 программа выведет число 13.Комментарий. Приведённая программа вместо подсчёта суммы чётных чисел считает сумму чисел, стоящих на чётных позициях в последовательности, и дополнительно увеличивает эту сумму на 1 из-за неверной инициализации.2. Пример последовательности, для которой программа даёт верный ответ:2, 1, 1, 2, 1, 2.Комментарий. При любом вводе данных результатом программы будет сумма второго, четвертого и шестого чисел, увеличенная на 1. Чтобы результат был верным, нужно подобрать такую последовательность, в которой эта сумма совпадет с суммой чётных чисел. Например, в приведённой выше последовательности обе суммы равны 6.3. Ошибки содержатся в двух строках программы:1) неверная инициализация переменной s: вместо значения 1 нужно присваивать 0;2) неверная проверка условия: вместо чётности i нужно проверять четность n. Пример исправления для языка Паскаль Первая строка с ошибкой:s:=1;Исправленная строка:s:=0; Вторая строка с ошибкой:if i mod 2 = 0 thenИсправленная строка:if n mod 2 = 0 then В программах на других языках ошибочные строки и их исправления аналогичны.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6903\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе последовательности 1, 1, 2, 3, 5, 8 программа выведет число 13.<p><i>Комментарий.</i> Приведённая программа вместо подсчёта суммы чётных чисел считает сумму чисел, стоящих на чётных позициях в последовательности, и дополнительно увеличивает эту сумму на 1 из-за неверной инициализации.<p class=\"left_margin\">2. Пример последовательности, для которой программа даёт верный ответ:<p class=\"left_margin\">2, 1, 1, 2, 1, 2.<p><i>Комментарий</i>. При любом вводе данных результатом программы будет сумма второго, четвертого и шестого чисел, увеличенная на 1. Чтобы результат был верным, нужно подобрать такую последовательность, в которой эта сумма совпадет с суммой чётных чисел. Например, в приведённой выше последовательности обе суммы равны 6.<p class=\"left_margin\">3. Ошибки содержатся в двух строках программы:<p class=\"left_margin\">1) неверная инициализация переменной <i>s</i>: вместо значения 1 нужно присваивать 0;<p class=\"left_margin\">2) неверная проверка условия: вместо чётности i нужно проверять четность <i>n</i>.<p> </p><p><b>Пример исправления для языка Паскаль</b><p> </p><p class=\"left_margin\">Первая строка с ошибкой:<p>s:=1;<p class=\"left_margin\">Исправленная строка:<p>s:=0;<p> </p><p class=\"left_margin\">Вторая строка с ошибкой:<p>if i mod 2 = 0 then<p class=\"left_margin\">Исправленная строка:<p>if n mod 2 = 0 then<p> </p><p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "6903"
        },
        {
            "answer": "Решение.Элементы ответа:1.Программа выведет число 3. (Примечание Программа выводит число, которое на 1 большеколичества содержащихся в исходном числе цифр, не равных 1).2. Первая ошибка. Неверное изменение переменной T.Строка в программе на Паскале:T := T+1Правильная строка:T := T*103. Вторая ошибка. Программа выводит значение переменной T, а не число R, в которое преобразуется исходное число. Строка в программе на Паскале:writeln(T);Правильная строка:writeln(R);",
            "parsed": "2019-04-29 21:10:02.889066",
            "question": "Требовалось написать программу, которая получает на вход натуральное число N, не превосходящее 109, и выводит число, которое получается из N после удаления всех единиц; порядок остальных цифр при этом не меняется. Например, число 19520125 должно быть преобразовано в число 952025. Число, в котором все цифры — единицы и нули, должно быть преобразовано в 0. Незначащие нули в старших разрядах полученного числа печатать не нужно.Программист торопился и написал программу неправильно. БейсикПаскаль DIM N, R, T AS LONGDIM d AS INTEGERINPUT NR = 0T = 1WHILE N > 0d = N MOD 10IF d <> 1 THENR = R + d * TT = T + 1END IFN = N \\ 10WENDPRINT TEND var N, R, T: longint;d: integer;beginreadln(N);R:=0;T:=1;while N>0 do begind := N mod 10;if d<>1 then beginR := R + d*T;T := T+1end;N := N div 10;end;writeln(T);end.Си++Алгоритмический  #include <iostream>using namespace std;int main(){long int N, R, T;int d;cin >> N;R = 0;T = 1;while (N > 0) {d = N % 10;if (d != 1) {R = R + d*T;T = T+1;}N = N / 10;}cout << T;} алгначцел N, R, T, dввод NR := 0T := 1нц пока N > 0d := mod(N, 10)если d <> 1 тоR := R + d*TT := T+1всеN := div(N, 10)кцвывод TконPythonn = int(input()) R=0 T=1while N > 0:    d = N % 10    if d != 1:        R = R + d*T        T = T+1    N //= 10;print(T) Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 314.2. Найдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:1) Выпишите строку, в которой сделана ошибка.2) Укажите, как исправить ошибку — приведите правильный вариант строки.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947652\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, которая получает на вход натуральное число N, не превосходящее 10<sup>9</sup>, и выводит число, которое получается из N после удаления всех единиц; порядок остальных цифр при этом не меняется. Например, число 19520125 должно быть преобразовано в число 952025. Число, в котором все цифры — единицы и нули, должно быть преобразовано в 0. Незначащие нули в старших разрядах полученного числа печатать не нужно.<p class=\"left_margin\">Программист торопился и написал программу неправильно.<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, R, T AS LONG<p class=\"left_margin\">DIM d AS INTEGER<p class=\"left_margin\">INPUT N<p class=\"left_margin\">R = 0<p class=\"left_margin\">T = 1<p class=\"left_margin\">WHILE N &gt; 0<p>d = N MOD 10<p class=\"left_margin\">IF d &lt;&gt; 1 THEN<p class=\"left_margin\">R = R + d * T<p class=\"left_margin\">T = T + 1<p class=\"left_margin\">END IF<p class=\"left_margin\">N = N \\ 10<p class=\"left_margin\">WEND<p class=\"left_margin\">PRINT T<p class=\"left_margin\">END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p> var N, R, T: longint;<p>d: integer;<p>begin<p>readln(N);<p class=\"left_margin\">R:=0;<p class=\"left_margin\">T:=1;<p>while N&gt;0 do begin<p>d := N mod 10;<p>if d&lt;&gt;1 then begin<p class=\"left_margin\">R := R + d*T;<p class=\"left_margin\">T := T+1<p>end;<p class=\"left_margin\">N := N div 10;<p>end;<p>writeln(T);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p> #include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>long int N, R, T;<p>int d;<p>cin &gt;&gt; N;<p class=\"left_margin\">R = 0;<p class=\"left_margin\">T = 1;<p>while (N &gt; 0) {<p>d = N % 10;<p>if (d != 1) {<p class=\"left_margin\">R = R + d*T;<p class=\"left_margin\">T = T+1;<p>}<p class=\"left_margin\">N = N / 10;<p>}<p>cout &lt;&lt; T;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг<p>нач<p>цел N, R, T, d<p>ввод N<p class=\"left_margin\">R := 0<p class=\"left_margin\">T := 1<p>нц пока N &gt; 0<p>d := mod(N, 10)<p>если d &lt;&gt; 1 то<p class=\"left_margin\">R := R + d*T<p class=\"left_margin\">T := T+1<p>все<p class=\"left_margin\">N := div(N, 10)<p>кц<p>вывод T<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p> R=0<p> T=1<p>while N &gt; 0:<p>    d = N % 10<p>    if d != 1:<p>        R = R + d*T<p>        T = T+1<p>    N //= 10;<p>print(T)<p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 314.<p class=\"left_margin\">2. Найдите все ошибки в этой программе (их может быть одна или несколько). Для каждой ошибки:<p class=\"left_margin\">1) Выпишите строку, в которой сделана ошибка.<p class=\"left_margin\">2) Укажите, как исправить ошибку — приведите правильный вариант строки.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.</p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа:1.Программа выведет число 3. (Примечание Программа выводит число, которое на 1 большеколичества содержащихся в исходном числе цифр, не равных 1).2. Первая ошибка. Неверное изменение переменной T.Строка в программе на Паскале:T := T+1Правильная строка:T := T*103. Вторая ошибка. Программа выводит значение переменной T, а не число R, в которое преобразуется исходное число. Строка в программе на Паскале:writeln(T);Правильная строка:writeln(R);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol6968\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p class=\"left_margin\">1.Программа выведет число 3. (<i>Примечание</i> Программа выводит число, которое на 1 больше<p>количества содержащихся в исходном числе цифр, не равных 1).<p class=\"left_margin\">2. Первая ошибка. Неверное изменение переменной T.<p class=\"left_margin\">Строка в программе на Паскале:<p class=\"left_margin\">T := T+1<p class=\"left_margin\">Правильная строка:<p class=\"left_margin\">T := T*10<p class=\"left_margin\">3. Вторая ошибка. Программа выводит значение переменной T, а не число R, в которое преобразуется исходное число. Строка в программе на Паскале:<p>writeln(T);<p class=\"left_margin\">Правильная строка:<p>writeln(R);</p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "6968"
        },
        {
            "answer": "Решение.ОбластьУсловие 1(x<=17)Условие 2(x<=5)Условие 3(x>= –1)ПрограммавыведетОбластьобрабатываетсяверноAДаДаНетНе принадлежитДаBДаДаДаПринадлежитДаCДаНет−−НетDДаНет−−НетEНет−−−Нет 2) Заменим условный переход на такой:if (x >= -1) and (x <= 5) or (x >= 11) and (x <= 17) thenwrite(‘принадлежит’)else\twrite (‘не принадлежит);",
            "parsed": "2019-04-29 21:09:52.451045",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x – действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БейсикПаскаль INPUT x IF x<=17 THEN IF x<=5 THEN IF x>=-1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDvar x: real;beginreadln(x);if x<=17 thenif x<=5 thenif x>=-1 thenwrite('принадлежит')elsewrite('не принадлежит')end.Си++Алгоритмический int main(void){float x;cin >> x;if(x<=17)if(x<=5)if(x>=-1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ xввод xесли x<=17 тоесли x<=5 тоесли x>=-1 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx = int(input())if x <= 17:    if x <= 5:        if x >= -1:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки –1, 5, 11 и 17) принадлежат заштрихованным областям (B и D соответственно). ОбластьУсловие 1(x<=17)Условие 2(x<=5)Условие 3(x>= –1)ПрограммавыведетОбластьобрабатываетсяверноABCDE В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946897\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=13354\" style=\"float:right;margin:10px;width:200\"/>Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x – действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x<p> IF x&lt;=17 THEN<p> IF x&lt;=5 THEN<p> IF x&gt;=-1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var x: real;<p>begin<p>readln(x);<p>if x&lt;=17 then<p>if x&lt;=5 then<p>if x&gt;=-1 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>int main(void)<p>{<p>float x;<p>cin &gt;&gt; x;<p>if(x&lt;=17)<p>if(x&lt;=5)<p>if(x&gt;=-1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ x<p>ввод x<p>если x&lt;=17 то<p>если x&lt;=5 то<p>если x&gt;=-1 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if x &lt;= 17:<p>    if x &lt;= 5:<p>        if x &gt;= -1:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки –1, 5, 11 и 17) принадлежат заштрихованным областям (B и D соответственно).<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<p class=\"left_margin\">(x&lt;=17)</p></td><td style=\"text-align:center\">Условие 2<p class=\"left_margin\">(x&lt;=5)</p></td><td style=\"text-align:center\">Условие 3<p class=\"left_margin\">(x&gt;= –1)</p></td><td style=\"text-align:center\">Программа<p>выведет</p></td><td style=\"text-align:center\">Область<p>обрабатывается<p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr></table><p> </p><p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.ОбластьУсловие 1(x<=17)Условие 2(x<=5)Условие 3(x>= –1)ПрограммавыведетОбластьобрабатываетсяверноAДаДаНетНе принадлежитДаBДаДаДаПринадлежитДаCДаНет−−НетDДаНет−−НетEНет−−−Нет 2) Заменим условный переход на такой:if (x >= -1) and (x <= 5) or (x >= 11) and (x <= 17) thenwrite(‘принадлежит’)else\twrite (‘не принадлежит);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7213\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<p class=\"left_margin\">(x&lt;=17)</p></td><td style=\"text-align:center\">Условие 2<p class=\"left_margin\">(x&lt;=5)</p></td><td style=\"text-align:center\">Условие 3<p class=\"left_margin\">(x&gt;= –1)</p></td><td style=\"text-align:center\">Программа<p>выведет<p></p></p></td><td style=\"text-align:center\">Область<p>обрабатывается<p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">Не принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr></table><p> </p><p class=\"left_margin\">2) Заменим условный переход на такой:<p>if (x &gt;= -1) and (x &lt;= 5) or (x &gt;= 11) and (x &lt;= 17) then<p>write(‘принадлежит’)<p>else<p>\twrite (‘не принадлежит);</p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 05.05.2014. До­сроч­ная волна. Ва­ри­ант 1.",
            "task_id": "7213"
        },
        {
            "answer": "Решение.1. При вводе числа 1984 программа выведет число 210.Комментарий. Приведённая программа выводит умноженную на 10 сумму цифр числа, отличных от 1.2. Примеры чисел, для которых программа даёт верный ответ: 11010, 109, 101701.3. Ошибки содержатся в двух строках программы.1. Неверное условие проверки цифры. Приведённое условие вычеркивает не только единицы, но и нули.2. Неверная операция добавления цифры к записи: перепутаны переменные d и m. Условие цикла n>=1 может показаться неверным, но в действительности оно записано правильно. Обычно в подобных задачах используется условие n > 0, но для целого n эти два условия эквивалентны и, следовательно, взаимозаменяемы.Неверной может показаться операция изменения N (n:=(n – d) div 10), но ошибки здесь нет. Вычитание d — лишнее действие, но оно не оказывает влияния на результат всего выражения, поэтому его нельзя считать ошибочным. Пример исправления для языка ПаскальПервая строка с ошибкой:if d > 1 then beginИсправленная строка:if d <> 1 then beginВторая строка с ошибкой:m := 10*d + m;Исправленная строка:m := 10*m + d; В программах на других языках программирования ошибочные строки и их исправления аналогичны.Допустимы избыточные скобки, не изменяющие правильный порядок действий.",
            "parsed": "2019-04-29 21:10:03.333964",
            "question": "Дано натуральное число N, не превосходящее 108. Необходимо найти и вывести число, которое получится при записи N справа налево и удалении всех единиц. Ведущие нули выводить не надо. Если в числе N нет цифр кроме единиц и нулей, необходимо вывести 0. Например, при вводе числа 1984 нужно вывести 489, а при вводе 2001 нужно вывести 2. Для решения этой задачи ученик написал такую программу: БейсикПаскаль DIM N, M AS LONG DIM D AS INTEGER INPUT N M = 0 WHILE N>=1 D = N MOD 10 IF D>1 THEN M = 10*D + M END IF N = (N – D) \\ 10 WEND PRINT M ENDvar n, m: longint;d: integer;beginread(n);m := 0;while n>=1 do begind := n mod 10;if d > 1 then beginm := 10*d + m;end;n := (n – d) div 10;end;write(m);end.Си++Алгоритмический #include <iostream>using namespace std;int main(){long int n, m;int d;cin >> n;m = 0;while (n>=1) {d = n%10;if (d>1) {m = 10*d + m;}n = (n – d) / 10;}cout << m;}алгначцел n, mцел dввод nm := 0нц пока n>=1d := mod(n,10)если d>1 тоm := 10*d + mвсеn := div(n-d,10)кцвывод mконPythonn = int(input())m = 0while n >= 1:    d = n %10;    if d > 1:        m = 10*d + m    n = (n – d) // 10print(m) Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 1984.2. Приведите пример числа, при вводе которого программа выдаст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946794\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число <i>N</i>, не превосходящее 10<sup>8</sup>. Необходимо найти и вывести число, которое получится при записи <i>N</i> справа налево и удалении всех единиц. Ведущие нули выводить не надо. Если в числе <i>N</i> нет цифр кроме единиц и нулей, необходимо вывести 0. Например, при вводе числа 1984 нужно вывести 489, а при вводе 2001 нужно вывести 2. Для решения этой задачи ученик написал такую программу:<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, M AS LONG<p> DIM D AS INTEGER<p> INPUT N<p> M = 0<p> WHILE N&gt;=1<p> D = N MOD 10<p> IF D&gt;1 THEN<p> M = 10*D + M<p> END IF<p> N = (N – D) \\ 10<p> WEND<p> PRINT M<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var n, m: longint;<p>d: integer;<p>begin<p>read(n);<p>m := 0;<p>while n&gt;=1 do begin<p>d := n mod 10;<p>if d &gt; 1 then begin<p>m := 10*d + m;<p>end;<p>n := (n – d) div 10;<p>end;<p>write(m);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>long int n, m;<p>int d;<p>cin &gt;&gt; n;<p>m = 0;<p>while (n&gt;=1) {<p>d = n%10;<p>if (d&gt;1) {<p>m = 10*d + m;<p>}<p>n = (n – d) / 10;<p>}<p>cout &lt;&lt; m;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел n, m<p>цел d<p>ввод n<p>m := 0<p>нц пока n&gt;=1<p>d := mod(n,10)<p>если d&gt;1 то<p>m := 10*d + m<p>все<p>n := div(n-d,10)<p>кц<p>вывод m<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>m = 0<p>while n &gt;= 1:<p>    d = n %10;<p>    if d &gt; 1:<p>        m = 10*d + m<p>    n = (n – d) // 10<p>print(m)<p></p></p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1984.<p class=\"left_margin\">2. Приведите пример числа, при вводе которого программа выдаст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p> </p><p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 1984 программа выведет число 210.Комментарий. Приведённая программа выводит умноженную на 10 сумму цифр числа, отличных от 1.2. Примеры чисел, для которых программа даёт верный ответ: 11010, 109, 101701.3. Ошибки содержатся в двух строках программы.1. Неверное условие проверки цифры. Приведённое условие вычеркивает не только единицы, но и нули.2. Неверная операция добавления цифры к записи: перепутаны переменные d и m. Условие цикла n>=1 может показаться неверным, но в действительности оно записано правильно. Обычно в подобных задачах используется условие n > 0, но для целого n эти два условия эквивалентны и, следовательно, взаимозаменяемы.Неверной может показаться операция изменения N (n:=(n – d) div 10), но ошибки здесь нет. Вычитание d — лишнее действие, но оно не оказывает влияния на результат всего выражения, поэтому его нельзя считать ошибочным. Пример исправления для языка ПаскальПервая строка с ошибкой:if d > 1 then beginИсправленная строка:if d <> 1 then beginВторая строка с ошибкой:m := 10*d + m;Исправленная строка:m := 10*m + d; В программах на других языках программирования ошибочные строки и их исправления аналогичны.Допустимы избыточные скобки, не изменяющие правильный порядок действий.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7318\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 1984 программа выведет число 210.<p><i>Комментарий.</i> Приведённая программа выводит умноженную на 10 сумму цифр числа, отличных от 1.<p class=\"left_margin\">2. Примеры чисел, для которых программа даёт верный ответ: 11010, 109, 101701.<p class=\"left_margin\">3. Ошибки содержатся в двух строках программы.<p class=\"left_margin\">1. Неверное условие проверки цифры. Приведённое условие вычеркивает не только единицы, но и нули.<p class=\"left_margin\">2. Неверная операция добавления цифры к записи: перепутаны переменные <i>d</i> и <i>m</i>.<p> </p><p class=\"left_margin\">Условие цикла n&gt;=1 может показаться неверным, но в действительности оно записано правильно. Обычно в подобных задачах используется условие n &gt; 0, но для целого n эти два условия эквивалентны и, следовательно, взаимозаменяемы.<p class=\"left_margin\">Неверной может показаться операция изменения N (n:=(n – d) div 10), но ошибки здесь нет. Вычитание d — лишнее действие, но оно не оказывает влияния на результат всего выражения, поэтому его нельзя считать ошибочным.<p> </p><p><b><p class=\"left_margin\">Пример исправления для языка Паскаль</p></b><p class=\"left_margin\">Первая строка с ошибкой:<p>if d &gt; 1 then begin<p class=\"left_margin\">Исправленная строка:<p>if d &lt;&gt; 1 then begin<p class=\"left_margin\">Вторая строка с ошибкой:<p>m := 10*d + m;<p class=\"left_margin\">Исправленная строка:<p>m := 10*m + d;<p> </p><p class=\"left_margin\">В программах на других языках программирования ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Допустимы избыточные скобки, не изменяющие правильный порядок действий.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "7318"
        },
        {
            "answer": "Решение.1. При вводе числа 1984 программа выведет число 12.Комментарий. Приведённая программа выводит сумму цифр числа, отличных от 9, при этом если старшая цифра равна 1, она не учитывается.2. Примеры чисел, для которых программа даёт верный ответ: 990909, 996, 96909.3. Ошибки содержатся в двух строках программы. 1. Неверное условие цикла. При данном условии не обрабатывается старшая цифра числа, если она равна 1.2. Неверная операция добавления цифры к записи: чтобы цифра d дописывалась после m, а не прибавлялась арифметически, нужно умножать m на 10.Проверка значения цифры d < 9 может показаться неверной, но в действительности она записана правильно. Обычно в подобных задачах используется условие d < > 9, но поскольку d — цифра, а 9 — наибольшее возможное значение цифры, эти два условия эквивалентны и, следовательно, взаимозаменяемы. Пример исправления для языка ПаскальПервая строка с ошибкой:while n>1 do beginИсправленная строка:while n>0 do beginДругой вариант исправления:while n>=1 do beginВторая строка с ошибкой:m := m + d;Исправленная строка:m := 10*m + d; В программах на других языках программирования ошибочные строки и их исправления аналогичны.Допустимы избыточные скобки, не изменяющие правильный порядок действий.",
            "parsed": "2019-04-29 21:10:03.823358",
            "question": "Дано натуральное число N, не превосходящее 108. Необходимо найти и вывести число, которое получится при записи N справа налево и удалении всех девяток. Ведущие нули выводить не надо. Если в числе N нет цифр кроме девяток и нулей, необходимо вывести 0. Например, при вводе числа 1984 нужно вывести 481, а при вводе 2009 нужно вывести 2. Для решения этой задачи ученик написал такую программу: БейсикПаскаль DIM N, M AS LONG DIM D AS INTEGER INPUT N M = 0 WHILE N>1 D = N MOD 10 IF D<9 THEN M = M + D END IF N = N \\ 10 WEND PRINT M ENDvar n, m: longint;d: integer;beginread(n);m := 0;while n>1 do begind := n mod 10;if d < 9 then beginm := m + d;end;n := n div 10;end;write(m);end.Си++Алгоритмический #include <iostream>using namespace std;int main(){long int n, m;int d;cin >> n;m = 0;while (n>1) {d = n%10;if (d<9) {m = m + d;}n = n / 10;}cout << m;}алгначцел n, mцел dввод nm := 0нц пока n>1d := mod(n,10)если d<9 тоm := m + dвсеn := div(n,10)кцвывод mконPythonn = int(input())m = 0while n > 1:    d = n % 10    if d < 9:        m = m + d    n //= 10print(m)  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 1984.2. Приведите пример числа, при вводе которого программа выдаст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946762\" width=\"100%\"><p class=\"left_margin\">Дано натуральное число <i>N</i>, не превосходящее 10<sup>8</sup>. Необходимо найти и вывести число, которое получится при записи <i>N</i> справа налево и удалении всех девяток. Ведущие нули выводить не надо. Если в числе <i>N</i> нет цифр кроме девяток и нулей, необходимо вывести 0. Например, при вводе числа 1984 нужно вывести 481, а при вводе 2009 нужно вывести 2. Для решения этой задачи ученик написал такую программу:<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, M AS LONG<p> DIM D AS INTEGER<p> INPUT N<p> M = 0<p> WHILE N&gt;1<p> D = N MOD 10<p> IF D&lt;9 THEN<p> M = M + D<p> END IF<p> N = N \\ 10<p> WEND<p> PRINT M<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var n, m: longint;<p>d: integer;<p>begin<p>read(n);<p>m := 0;<p>while n&gt;1 do begin<p>d := n mod 10;<p>if d &lt; 9 then begin<p>m := m + d;<p>end;<p>n := n div 10;<p>end;<p>write(m);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>long int n, m;<p>int d;<p>cin &gt;&gt; n;<p>m = 0;<p>while (n&gt;1) {<p>d = n%10;<p>if (d&lt;9) {<p>m = m + d;<p>}<p>n = n / 10;<p>}<p>cout &lt;&lt; m;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел n, m<p>цел d<p>ввод n<p>m := 0<p>нц пока n&gt;1<p>d := mod(n,10)<p>если d&lt;9 то<p>m := m + d<p>все<p>n := div(n,10)<p>кц<p>вывод m<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>m = 0<p>while n &gt; 1:<p>    d = n % 10<p>    if d &lt; 9:<p>        m = m + d<p>    n //= 10<p>print(m)<p></p></p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1984.<p class=\"left_margin\">2. Приведите пример числа, при вводе которого программа выдаст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p> </p><p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. При вводе числа 1984 программа выведет число 12.Комментарий. Приведённая программа выводит сумму цифр числа, отличных от 9, при этом если старшая цифра равна 1, она не учитывается.2. Примеры чисел, для которых программа даёт верный ответ: 990909, 996, 96909.3. Ошибки содержатся в двух строках программы. 1. Неверное условие цикла. При данном условии не обрабатывается старшая цифра числа, если она равна 1.2. Неверная операция добавления цифры к записи: чтобы цифра d дописывалась после m, а не прибавлялась арифметически, нужно умножать m на 10.Проверка значения цифры d < 9 может показаться неверной, но в действительности она записана правильно. Обычно в подобных задачах используется условие d < > 9, но поскольку d — цифра, а 9 — наибольшее возможное значение цифры, эти два условия эквивалентны и, следовательно, взаимозаменяемы. Пример исправления для языка ПаскальПервая строка с ошибкой:while n>1 do beginИсправленная строка:while n>0 do beginДругой вариант исправления:while n>=1 do beginВторая строка с ошибкой:m := m + d;Исправленная строка:m := 10*m + d; В программах на других языках программирования ошибочные строки и их исправления аналогичны.Допустимы избыточные скобки, не изменяющие правильный порядок действий.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7350\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. При вводе числа 1984 программа выведет число 12.<p><i>Комментарий</i>. Приведённая программа выводит сумму цифр числа, отличных от 9, при этом если старшая цифра равна 1, она не учитывается.<p class=\"left_margin\">2. Примеры чисел, для которых программа даёт верный ответ: 990909, 996, 96909.<p class=\"left_margin\">3. Ошибки содержатся в двух строках программы.<p> </p><p class=\"left_margin\">1. Неверное условие цикла. При данном условии не обрабатывается старшая цифра числа, если она равна 1.<p class=\"left_margin\">2. Неверная операция добавления цифры к записи: чтобы цифра <i>d</i> дописывалась после <i>m</i>, а не прибавлялась арифметически, нужно умножать <i>m</i> на 10.<p class=\"left_margin\">Проверка значения цифры <i>d</i> &lt; 9 может показаться неверной, но в действительности она записана правильно. Обычно в подобных задачах используется условие d &lt; &gt; 9, но поскольку <i>d</i> — цифра, а 9 — наибольшее возможное значение цифры, эти два условия эквивалентны и, следовательно, взаимозаменяемы.<p> </p><p><b><p class=\"left_margin\">Пример исправления для языка Паскаль</p></b><p class=\"left_margin\">Первая строка с ошибкой:<p>while n&gt;1 do begin<p class=\"left_margin\">Исправленная строка:<p>while n&gt;0 do begin<p class=\"left_margin\">Другой вариант исправления:<p>while n&gt;=1 do begin<p class=\"left_margin\">Вторая строка с ошибкой:<p>m := m + d;<p class=\"left_margin\">Исправленная строка:<p>m := 10*m + d;<p> </p><p class=\"left_margin\">В программах на других языках программирования ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Допустимы избыточные скобки, не изменяющие правильный порядок действий.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "7350"
        },
        {
            "answer": "Решение.1)ОбластьУсловие 1(x<12)Условие 2(x>=0)Условие 3(x<= 6)ПрограммавыведетОбластьобрабатываетсяверноAДаНет−−НетBДаДаДаПринадлежитДаCДаДаНетНе принадлежитДаDНет−−−НетEНет−−−Нет 2) Заменим условный переход на такой:if(x >= 0) and (x <= 6) or (x >= 12) and (x <= 18) thenwrite(‘принадлежит’)else\twrite(‘не принадлежит’);",
            "parsed": "2019-04-29 21:09:53.353964",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БейсикПаскаль INPUT x IF x<12 THEN IF x>=0 THEN IF x<=6 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDvar x: real;beginreadln(x);if x<12 thenif x>=0 thenif x<=6 thenwrite('принадлежит')elsewrite('не принадлежит')end.Си++Алгоритмический int main(void){float x;cin >> x;if(x<12)if(x>=0)if(x<=6)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ xввод xесли x<12 тоесли x>=0 тоесли x<=6 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx = int(input())if x < 12:    if x >= 0:        if x <= 6:            print(\"принадлежит\")        else:            print(\"не принадлежит\")  Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки 0, 6, 12 и 18) принадлежат заштрихованным областям (B и D соответственно). ОбластьУсловие 1(x<12)Условие 2(x>=0)Условие 3(x<= 6)ПрограммавыведетОбластьобрабатываетсяверноABCDE В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946730\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=13503\" style=\"float:right;margin:10px;\" width=\"200\"/>Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (<i>x</i> — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x<p> IF x&lt;12 THEN<p> IF x&gt;=0 THEN<p> IF x&lt;=6 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var x: real;<p>begin<p>readln(x);<p>if x&lt;12 then<p>if x&gt;=0 then<p>if x&lt;=6 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>int main(void)<p>{<p>float x;<p>cin &gt;&gt; x;<p>if(x&lt;12)<p>if(x&gt;=0)<p>if(x&lt;=6)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ x<p>ввод x<p>если x&lt;12 то<p>если x&gt;=0 то<p>если x&lt;=6 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if x &lt; 12:<p>    if x &gt;= 0:<p>        if x &lt;= 6:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки 0, 6, 12 и 18) принадлежат заштрихованным областям (B и D соответственно).<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<p class=\"left_margin\">(x&lt;12)</p></td><td style=\"text-align:center\">Условие 2<p class=\"left_margin\">(x&gt;=0)</p></td><td style=\"text-align:center\">Условие 3<p class=\"left_margin\">(x&lt;= 6)</p></td><td style=\"text-align:center\">Программа<p>выведет</p></td><td style=\"text-align:center\">Область<p>обрабатывается<p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr></table><p> </p><p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1)ОбластьУсловие 1(x<12)Условие 2(x>=0)Условие 3(x<= 6)ПрограммавыведетОбластьобрабатываетсяверноAДаНет−−НетBДаДаДаПринадлежитДаCДаДаНетНе принадлежитДаDНет−−−НетEНет−−−Нет 2) Заменим условный переход на такой:if(x >= 0) and (x <= 6) or (x >= 12) and (x <= 18) thenwrite(‘принадлежит’)else\twrite(‘не принадлежит’);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7382\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1)<p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<p class=\"left_margin\">(x&lt;12)</p></td><td style=\"text-align:center\">Условие 2<p class=\"left_margin\">(x&gt;=0)</p></td><td style=\"text-align:center\">Условие 3<p class=\"left_margin\">(x&lt;= 6)</p></td><td style=\"text-align:center\">Программа<p>выведет</p></td><td style=\"text-align:center\">Область<p>обрабатывается<p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">Не принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr></table><p> </p><p class=\"left_margin\">2) Заменим условный переход на такой:<p>if(x &gt;= 0) and (x &lt;= 6) or (x &gt;= 12) and (x &lt;= 18) then<p>write(‘принадлежит’)<p>else<p>\twrite(‘не принадлежит’);</p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 05.05.2014. До­сроч­ная волна. Ва­ри­ант 2.",
            "task_id": "7382"
        },
        {
            "answer": "Решение.1.ОбластьУсловие 1 (x<=18)Условие 2 (x>= −6)Условие 3 (x<10)ПрограммавыведетОбластьобрабатываетсяверноAДаНет−−НетBДаДаДане принадлежитНетCДаДаДаНе принадлежитДаDДаДаНетпринадлежитДаEНет−−−Нет 2. Возможная доработка (Паскаль): if (x>=-6) and (x<=2) or (x>=10) and (x<=18) thenwrite('принадлежит')elsewrite('не принадлежит') Возможны и другие способы доработки. Например: if x>=-6 thenif x<=2 thenwrite('принадлежит')elseif x>=10 thenif x<=18 thenwrite('принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит') Другой пример: if abs(abs(x-6)-8)<=4 thenwrite('принадлежит')elsewrite('не принадлежит')",
            "parsed": "2019-04-29 21:09:54.123516",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БейсикПаскаль INPUT x IF x<=18 THEN IF x>=-6 THEN IF x<10 THEN PRINT \"не принадлежит\" ELSE PRINT \"принадлежит\" ENDIF ENDIF ENDIF ENDvar x: real;beginreadln(x);if x<=18 thenif x>=-6 thenif x<10 thenwrite('не принадлежит')elsewrite('принадлежит')end.Си++Алгоритмический int main(void){float x;cin >> x;if(x<=18)if(x>=-6)if(x<10)cout << \"не принадлежит\";elsecout << \"принадлежит\";}алгначвещ xввод xесли x<=18 тоесли x>=-6 тоесли x<10 товывод 'не принадлежит'иначевывод 'принадлежит'всевсевсеконPythonx = int(input())if x <= 18:    if x >= -6:        if x < 10:            print(\"не принадлежит\")        else:            print(\"принадлежит\")   Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки –6, 2, 10 и 18) принадлежат заштрихованным областям (B и D соответственно). ОбластьУсловие 1 (x<=18)Условие 2 (x>= −6)Условие 3 (x<10)Программа выведетОбласть обрабатывается верноABCDE В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946693\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=15273\" style=\"float:right;margin:10px;\"/>Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (<i>x</i> — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x<p> IF x&lt;=18 THEN<p> IF x&gt;=-6 THEN<p> IF x&lt;10 THEN<p> PRINT \"не принадлежит\"<p> ELSE<p> PRINT \"принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var x: real;<p>begin<p>readln(x);<p>if x&lt;=18 then<p>if x&gt;=-6 then<p>if x&lt;10 then<p>write('не принадлежит')<p>else<p>write('принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>int main(void)<p>{<p>float x;<p>cin &gt;&gt; x;<p>if(x&lt;=18)<p>if(x&gt;=-6)<p>if(x&lt;10)<p>cout &lt;&lt; \"не принадлежит\";<p>else<p>cout &lt;&lt; \"принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ x<p>ввод x<p>если x&lt;=18 то<p>если x&gt;=-6 то<p>если x&lt;10 то<p>вывод 'не принадлежит'<p>иначе<p>вывод 'принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if x &lt;= 18:<p>    if x &gt;= -6:<p>        if x &lt; 10:<p>            print(\"не принадлежит\")<p>        else:<p>            print(\"принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center> <p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки –6, 2, 10 и 18) принадлежат заштрихованным областям (B и D соответственно).<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1 (x&lt;=18)</td><td style=\"text-align:center\">Условие 2 (x&gt;= −6)</td><td style=\"text-align:center\">Условие 3 (x&lt;10)</td><td style=\"text-align:center\">Программа <p>выведет</p></td><td style=\"text-align:center\">Область обрабатывается верно</td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr></table><p> </p><p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.ОбластьУсловие 1 (x<=18)Условие 2 (x>= −6)Условие 3 (x<10)ПрограммавыведетОбластьобрабатываетсяверноAДаНет−−НетBДаДаДане принадлежитНетCДаДаДаНе принадлежитДаDДаДаНетпринадлежитДаEНет−−−Нет 2. Возможная доработка (Паскаль): if (x>=-6) and (x<=2) or (x>=10) and (x<=18) thenwrite('принадлежит')elsewrite('не принадлежит') Возможны и другие способы доработки. Например: if x>=-6 thenif x<=2 thenwrite('принадлежит')elseif x>=10 thenif x<=18 thenwrite('принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит') Другой пример: if abs(abs(x-6)-8)<=4 thenwrite('принадлежит')elsewrite('не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7417\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1 (x&lt;=18)</td><td style=\"text-align:center\">Условие 2 (x&gt;= −6)</td><td style=\"text-align:center\">Условие 3 (x&lt;10)</td><td style=\"text-align:center\">Программа<p>выведет</p></td><td style=\"text-align:center\">Область<p>обрабатывается<p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Не принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Да</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">Нет</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">−</td><td style=\"text-align:center\">Нет</td></tr></table><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p> </p><p>if (x&gt;=-6) and (x&lt;=2) or (x&gt;=10) and (x&lt;=18) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Возможны и другие способы доработки. Например:<p> </p><p>if x&gt;=-6 then<p>if x&lt;=2 then<p>write('принадлежит')<p>else<p>if x&gt;=10 then<p>if x&lt;=18 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Другой пример:<p> </p><p>if abs(abs(x-6)-8)&lt;=4 then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 08.05.2014. До­сроч­ная волна, ре­зерв­ный день. Ва­ри­ант 201.",
            "task_id": "7417"
        },
        {
            "answer": "Решение.1.ОбластьУсловие 1(x<13)Условие 2(x<=7)Условие 3(x>=1)ПрограммавыведетОбластьобрабатываетсяверноAдаданетне принадлежитДаBдададапринадлежитДаCданет——НетDнет———НетEнет———Нет 2. Возможная доработка (Паскаль): if (x>=1) and (x<=7) or (x>=13) and (x<=19) thenwrite('принадлежит')elsewrite('не принадлежит') Возможны и другие способы доработки. Например: if x>=1 thenif x<=7 thenwrite('принадлежит')elseif x>=13 thenif x<=19 thenwrite('принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит') Другой пример: if abs(abs(x-10)-6)<=3 thenwrite('принадлежит')elsewrite('не принадлежит')",
            "parsed": "2019-04-29 21:09:54.570467",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (x — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БейсикПаскаль INPUT x IF x<13 THEN IF x<=7 THEN IF x>=1 THEN PRINT \"принадлежит\" ELSE PRINT \"не принадлежит\" ENDIF ENDIF ENDIF ENDvar x: real;beginreadln(x);if x<13 thenif x<=7 thenif x>=1 thenwrite('принадлежит')elsewrite('не принадлежит')end.Си++Алгоритмический int main(void){float x;cin >> x;if(x<13)if(x<=7)if(x>=1)cout << \"принадлежит\";elsecout << \"не принадлежит\";}алгначвещ xввод xесли x<13 тоесли x<=7 тоесли x>=1 товывод 'принадлежит'иначевывод 'не принадлежит'всевсевсеконPythonx = int(input())if x < 13:    if x <= 7:        if x >= 1:            print(\"принадлежит\")        else:            print(\"не принадлежит\")   Последовательно выполните следующее.1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки 1, 7, 13 и 19) принадлежат заштрихованным областям (B и D соответственно). ОбластьУсловие 1 (x<13)Условие 2 (x<=7)Условие 3 (x>=1)Программа выведетОбласть обрабатывается верноABCDE В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946689\" width=\"100%\"><p class=\"left_margin\"><img src=\"/get_file?id=15404\" style=\"float:right;margin:10px;\"/>Требовалось написать программу, при выполнении которой с клавиатуры считывается координата точки на прямой (<i>x</i> — действительное число) и определяется принадлежность этой точки одному из выделенных отрезков В и D (включая границы). Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x<p> IF x&lt;13 THEN<p> IF x&lt;=7 THEN<p> IF x&gt;=1 THEN<p> PRINT \"принадлежит\"<p> ELSE<p> PRINT \"не принадлежит\"<p> ENDIF<p> ENDIF<p> ENDIF<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var x: real;<p>begin<p>readln(x);<p>if x&lt;13 then<p>if x&lt;=7 then<p>if x&gt;=1 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>int main(void)<p>{<p>float x;<p>cin &gt;&gt; x;<p>if(x&lt;13)<p>if(x&lt;=7)<p>if(x&gt;=1)<p>cout &lt;&lt; \"принадлежит\";<p>else<p>cout &lt;&lt; \"не принадлежит\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ x<p>ввод x<p>если x&lt;13 то<p>если x&lt;=7 то<p>если x&gt;=1 то<p>вывод 'принадлежит'<p>иначе<p>вывод 'не принадлежит'<p>все<p>все<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>x = int(input())<p>if x &lt; 13:<p>    if x &lt;= 7:<p>        if x &gt;= 1:<p>            print(\"принадлежит\")<p>        else:<p>            print(\"не принадлежит\")<p> </p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Перерисуйте и заполните таблицу, которая показывает, как работает программа при аргументах, принадлежащих различным областям (A, B, C, D и E). Границы (точки 1, 7, 13 и 19) принадлежат заштрихованным областям (B и D соответственно).<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1 (x&lt;13)</td><td style=\"text-align:center\">Условие 2 (x&lt;=7)</td><td style=\"text-align:center\">Условие 3 (x&gt;=1)</td><td style=\"text-align:center\">Программа <p>выведет</p></td><td style=\"text-align:center\">Область обрабатывается верно</td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td><td style=\"text-align:left\"></td></tr></table><p> </p><p class=\"left_margin\">В столбцах условий укажите «да», если условие выполнится; «нет», если условие не выполнится; «—» (прочерк), если условие не будет проверяться; «не изв.», если программа ведёт себя по-разному для разных значений, принадлежащих данной области. В столбце «Программа выведет» укажите, что программа выведет на экран. Если программа ничего не выводит, поставьте «—» (прочерк). Если для разных значений, принадлежащих области, будут выведены разные тексты, напишите «не изв.». В последнем столбце укажите «Да» или «Нет».<p class=\"left_margin\">2. Укажите, как нужно доработать программу, чтобы не было случаев её неправильной работы. (Это можно сделать несколькими способами, достаточно указать любой способ доработки исходной программы.)</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1.ОбластьУсловие 1(x<13)Условие 2(x<=7)Условие 3(x>=1)ПрограммавыведетОбластьобрабатываетсяверноAдаданетне принадлежитДаBдададапринадлежитДаCданет——НетDнет———НетEнет———Нет 2. Возможная доработка (Паскаль): if (x>=1) and (x<=7) or (x>=13) and (x<=19) thenwrite('принадлежит')elsewrite('не принадлежит') Возможны и другие способы доработки. Например: if x>=1 thenif x<=7 thenwrite('принадлежит')elseif x>=13 thenif x<=19 thenwrite('принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит')elsewrite('не принадлежит') Другой пример: if abs(abs(x-10)-6)<=3 thenwrite('принадлежит')elsewrite('не принадлежит')",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7421\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1.<p><table style=\"margin:auto\"><tr><td style=\"text-align:center\">Область</td><td style=\"text-align:center\">Условие 1<p class=\"left_margin\">(x&lt;13)</p></td><td style=\"text-align:center\">Условие 2<p class=\"left_margin\">(x&lt;=7)</p></td><td style=\"text-align:center\">Условие 3<p class=\"left_margin\">(x&gt;=1)</p></td><td style=\"text-align:center\">Программа<p>выведет</p></td><td style=\"text-align:center\">Область<p>обрабатывается<p>верно</p></p></td></tr><tr><td style=\"text-align:center\">A</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">не принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">B</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">принадлежит</td><td style=\"text-align:center\">Да</td></tr><tr><td style=\"text-align:center\">C</td><td style=\"text-align:center\">да</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">D</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">Нет</td></tr><tr><td style=\"text-align:center\">E</td><td style=\"text-align:center\">нет</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">—</td><td style=\"text-align:center\">Нет</td></tr></table><p> </p><p class=\"left_margin\">2. Возможная доработка (Паскаль):<p> </p><p>if (x&gt;=1) and (x&lt;=7) or (x&gt;=13) and (x&lt;=19) then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Возможны и другие способы доработки. Например:<p> </p><p>if x&gt;=1 then<p>if x&lt;=7 then<p>write('принадлежит')<p>else<p>if x&gt;=13 then<p>if x&lt;=19 then<p>write('принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p>else<p>write('не принадлежит')<p> </p><p class=\"left_margin\">Другой пример:<p> </p><p>if abs(abs(x-10)-6)&lt;=3 then<p>write('принадлежит')<p>else<p>write('не принадлежит')</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ по ин­фор­ма­ти­ке 08.05.2014. До­сроч­ная волна, ре­зерв­ный день. Ва­ри­ант 202.",
            "task_id": "7421"
        },
        {
            "answer": "Решение.Элементы ответа: 1. При вводе числа 578 программа выведет число 4.2. Ошибки содержатся в двух строках программы:1) Переменная sum изначально должна быть инициализирована нулём, то есть sum = 0;2) Условие в цикле должно быть N > 0, а не N > 1.3. Пример числа, для которого программа даёт верный ответ: 1. ----------Дублирует задание 5372.",
            "parsed": "2019-04-29 21:10:04.211585",
            "question": "Программист писал программу, для определения количества цифр в целом положительном числе, не большем 10^9. Программист торопился, и допустил ошибку. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.) БейсикПаскаль DIM N AS LONG INPUT N sum = 1 WHILE N > 1  N = N \\ 10  sum = sum + 1 WEND PRINT sum ENDvar N: longint;sum: integer;beginreadln(N);sum := 1;while N > 1 dobeginN := N div 10;sum := sum + 1;end;writeln(sum);end.Си++Алгоритмический #include <iostream>using namespace std;int main(){  long int N;  int sum;  cin >> N;  sum = 1;  while (N > 1)  {    N = N / 10;    sum = sum + 1;  }cout << sum << endl;}алгнач  цел N, sum  ввод N  sum := 1  нц пока N > 1    N := div(N, 10)    sum := sum + 1  КЦ  вывод sumКОН Pythonn = int(input())sum = 1while n > 1:    n //= 10    sum += 1print(sum) Последовательно выполните следующее. 1. Напишите, что выведет эта программа при вводе числа 578.2. Найдите все ошибки в этой программе (их может быть одна или несколько). Укажите все строки (одну или более), содержащие ошибки, и для каждой такой строки приведите правильный вариант. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.3. Укажите одно число для которого эта программа будет работать верно.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947197\" width=\"100%\"><p class=\"left_margin\">Программист писал программу, для определения количества цифр в целом положительном числе, не большем 10^9. Программист торопился, и допустил ошибку. (Ниже для Вашего удобства программа представлена на четырёх языках программирования.)<p> </p><center><p><table border=\"\" width=\"60%\"><tr><th><b>Бейсик</b></th><th><b>Паскаль</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N AS LONG<p> INPUT N<p> sum = 1<p> WHILE N &gt; 1<p>  N = N \\ 10<p>  sum = sum + 1<p> WEND<p> PRINT sum<p> END<p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_pascal\"><p>var N: longint;<p>sum: integer;<p>begin<p>readln(N);<p>sum := 1;<p>while N &gt; 1 do<p>begin<p class=\"left_margin\">N := N div 10;<p>sum := sum + 1;<p>end;<p>writeln(sum);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th><b>Си++</b></th><th><b>Алгоритмический</b></th></tr><tr><td><div class=\"source_code lang_c\"> <p>#include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>  long int N;<p>  int sum;<p>  cin &gt;&gt; N;<p>  sum = 1;<p>  while (N &gt; 1)<p>  {<p>    N = N / 10;<p>    sum = sum + 1;<p>  }<p>cout &lt;&lt; sum &lt;&lt; endl;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел N, sum<p>  ввод N<p>  sum := 1<p>  нц пока N &gt; 1<p>    N := div(N, 10)<p>    sum := sum + 1<p>  КЦ<p>  вывод sum<p class=\"left_margin\">КОН<p> </p><p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><tr><th colspan=\"2\"><b>Python</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_python\"><p>n = int(input())<p>sum = 1<p>while n &gt; 1:<p>    n //= 10<p>    sum += 1<p>print(sum)<p></p></p></p></p></p></p></p></div></td></tr></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p> <p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 578.<p class=\"left_margin\">2. Найдите все ошибки в этой программе (их может быть одна или несколько). Укажите все строки (одну или более), содержащие ошибки, и для каждой такой строки приведите правильный вариант. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.<p class=\"left_margin\">3. Укажите одно число для которого эта программа будет работать верно.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Элементы ответа: 1. При вводе числа 578 программа выведет число 4.2. Ошибки содержатся в двух строках программы:1) Переменная sum изначально должна быть инициализирована нулём, то есть sum = 0;2) Условие в цикле должно быть N > 0, а не N > 1.3. Пример числа, для которого программа даёт верный ответ: 1. ----------Дублирует задание 5372.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7425\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Элементы ответа:<p> </p><p class=\"left_margin\">1. При вводе числа 578 программа выведет число 4.<p class=\"left_margin\">2. Ошибки содержатся в двух строках программы:<p class=\"left_margin\">1) Переменная sum изначально должна быть инициализирована нулём, то есть sum = 0;<p class=\"left_margin\">2) Условие в цикле должно быть N &gt; 0, а не N &gt; 1.<p class=\"left_margin\">3. Пример числа, для которого программа даёт верный ответ: 1.<p> </p><p>----------<p class=\"left_margin\">Дублирует задание 5372.</p></p></p></p></p></p></p></p></div>",
            "source": "Источник: РЕШУ ЕГЭ — Пред­эк­за­ме­на­ци­он­ная ра­бо­та 2014 по информатике.",
            "task_id": "7425"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале.  1. Программа выведет два числа: 2 и 999.2. Пример последовательности, содержащей нечётные числа, для которой программа работает правильно: 1 2 3 999. Замечание. В конце работы программы значение переменной maximum всегда равно 999. Соответственно, программа будет работать верно, если в последовательности есть 999. Выведенное количество нечётных чисел будет правильным в любом случае.3. В программе есть две ошибки.Первая ошибка: неверная инициализация maximum.Строка с ошибкой:maximum := 999;Верное исправление:maximum := 0;Вместо 0 может быть использовано любое число, меньшее или равное 1.Вторая ошибка: неверное присваивание при вычислении максимума.Строка с ошибкой:maximum = i;Верное исправление:maximum = x;",
            "parsed": "2019-04-29 21:09:28.526732",
            "question": "На обработку поступает последовательность из четырёх неотрицательных целых чисел (некоторые числа могут быть одинаковыми). Нужно написать программу, которая выводит на экран количество нечётных чисел в исходной последовательности и максимальное нечётное число. Если нечётных чисел нет, требуется на экран вывести «NO». Известно, что вводимые числа не превышают 1000. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython CONST n = 4 count = 0 maximum = 999 FOR I = 1 TO n INPUT x IF x mod 2 <> 0 THEN count = count + 1 IF x > maximum THEN maximum = I END IF END IF NEXT I IF count > 0 THEN PRINT count PRINT maximum ELSE PRINT \"NO\" END IF n = 4count = 0maximum = 999for i in range(1, n + 1):    x = int(input())    if x % 2 != 0:        count += 1        if x > maximum:            maximum = iif count > 0:    print(count)    print(maximum)else:    print(\"NO\")  ПаскальАлгоритмический языкconst n = 4;var i, x: integer;var maximum, count: integer;begincount := 0;maximum := 999;for i := 1 to n dobeginread(x);if x mod 2 <> 0 thenbegincount := count + 1;if x > maximum thenmaximum := iendend;if count > 0 thenbeginwriteln(count);writeln(maximum);endelsewriteln('NO')end. алгначцел n = 4цел i, xцел maximum, countcount := 0maximum := 999нц для i от 1 до nввод xесли mod(x, 2) <> 0 тоcount := count + 1если x > maximum тоmaximum := iвсевсекцесли count > 0 товывод count, нсвывод maximumиначевывод \"NO\"всеконСи++#include <iostream>using namespace std;int main(void){const int n = 4;int i, x, maximum, count;count = 0;maximum = 999;for (i = 1; i <= n; i++) {cin >> x;if (x % 2 != 0) {count++;if (x > maximum)maximum = i;}}if (count > 0) {cout << count;cout << maximum;}elsecout << \"NO\\n\";}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе последовательности: 2 9 4 32. Приведите пример такой последовательности, содержащей хотя бы одно нечётное число, что, несмотря на ошибки, программа печатает правильный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки: 1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т. е приведите правильный вариант строки.   Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body947153\" width=\"100%\"><p class=\"left_margin\">На обработку поступает последовательность из четырёх неотрицательных целых чисел (некоторые числа могут быть одинаковыми). Нужно написать программу, которая выводит на экран количество нечётных чисел в исходной последовательности и максимальное нечётное число. Если нечётных чисел нет, требуется на экран вывести «NO». Известно, что вводимые числа не превышают 1000. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> CONST n = 4<p> count = 0<p> maximum = 999<p> FOR I = 1 TO n<p> INPUT x<p> IF x mod 2 &lt;&gt; 0 THEN<p> count = count + 1<p> IF x &gt; maximum THEN<p> maximum = I<p> END IF<p> END IF<p> NEXT I<p> IF count &gt; 0 THEN<p> PRINT count<p> PRINT maximum<p> ELSE<p> PRINT \"NO\"<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = 4<p>count = 0<p>maximum = 999<p>for i in range(1, n + 1):<p>    x = int(input())<p>    if x % 2 != 0:<p>        count += 1<p>        if x &gt; maximum:<p>            maximum = i<p>if count &gt; 0:<p>    print(count)<p>    print(maximum)<p>else:<p>    print(\"NO\")<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>const n = 4;<p>var i, x: integer;<p>var maximum, count: integer;<p>begin<p>count := 0;<p>maximum := 999;<p>for i := 1 to n do<p>begin<p>read(x);<p>if x mod 2 &lt;&gt; 0 then<p>begin<p>count := count + 1;<p>if x &gt; maximum then<p>maximum := i<p>end<p>end;<p>if count &gt; 0 then<p>begin<p>writeln(count);<p>writeln(maximum);<p>end<p>else<p>writeln('NO')<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел n = 4<p>цел i, x<p>цел maximum, count<p>count := 0<p>maximum := 999<p>нц для i от 1 до n<p>ввод x<p>если mod(x, 2) &lt;&gt; 0 то<p>count := count + 1<p>если x &gt; maximum то<p>maximum := i<p>все<p>все<p>кц<p>если count &gt; 0 то<p>вывод count, нс<p>вывод maximum<p>иначе<p>вывод \"NO\"<p>все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void)<p>{<p>const int n = 4;<p>int i, x, maximum, count;<p>count = 0;<p>maximum = 999;<p>for (i = 1; i &lt;= n; i++) {<p>cin &gt;&gt; x;<p>if (x % 2 != 0) {<p>count++;<p>if (x &gt; maximum)<p>maximum = i;<p>}<p>}<p>if (count &gt; 0) {<p>cout &lt;&lt; count;<p>cout &lt;&lt; maximum;<p>}<p>else<p>cout &lt;&lt; \"NO\\n\";<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе последовательности: 2 9 4 3<p class=\"left_margin\">2. Приведите пример такой последовательности, содержащей хотя бы одно нечётное число, что, несмотря на ошибки, программа печатает правильный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p> </p><p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т. е приведите правильный вариант строки. <p> </p><p> </p><p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале.  1. Программа выведет два числа: 2 и 999.2. Пример последовательности, содержащей нечётные числа, для которой программа работает правильно: 1 2 3 999. Замечание. В конце работы программы значение переменной maximum всегда равно 999. Соответственно, программа будет работать верно, если в последовательности есть 999. Выведенное количество нечётных чисел будет правильным в любом случае.3. В программе есть две ошибки.Первая ошибка: неверная инициализация maximum.Строка с ошибкой:maximum := 999;Верное исправление:maximum := 0;Вместо 0 может быть использовано любое число, меньшее или равное 1.Вторая ошибка: неверное присваивание при вычислении максимума.Строка с ошибкой:maximum = i;Верное исправление:maximum = x;",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7469\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. <p> </p><p class=\"left_margin\">1. Программа выведет два числа: 2 и 999.<p class=\"left_margin\">2. Пример последовательности, содержащей нечётные числа, для которой программа работает правильно: 1 2 3 999.<p> </p><p class=\"left_margin\">Замечание. В конце работы программы значение переменной maximum всегда равно 999. Соответственно, программа будет работать верно, если в последовательности есть 999. Выведенное количество нечётных чисел будет правильным в любом случае.<p class=\"left_margin\">3. В программе есть две ошибки.<p class=\"left_margin\">Первая ошибка: неверная инициализация maximum.<p class=\"left_margin\">Строка с ошибкой:<p class=\"left_margin\">maximum := 999;<p class=\"left_margin\">Верное исправление:<p class=\"left_margin\">maximum := 0;<p class=\"left_margin\">Вместо 0 может быть использовано любое число, меньшее или равное 1.<p class=\"left_margin\">Вторая ошибка: неверное присваивание при вычислении максимума.<p class=\"left_margin\">Строка с ошибкой:<p class=\"left_margin\">maximum = i;<p class=\"left_margin\">Верное исправление:<p class=\"left_margin\">maximum = x;</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Де­мон­стра­ци­он­ная версия ЕГЭ—2015 по информатике.",
            "task_id": "7469"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на четырех других языках.1. Программа выведет число 2. 2. Программа напечатает правильный ответ при x=1. Замечание для проверяющего: это единственный случай, когда программа сработает верно. 3. Первая ошибка. Неверный подсчёт количества цифр. Программа не учитывает значащие нули.Строка с ошибкой:cnt:=cnt + x mod 2;Возможный вариант исправления:cnt:=cnt + 1; 4. Вторая ошибка. Неверная обработка числа x в цикле. Строка с ошибкой:x := x div 10;Возможный вариант исправления:x := x div 2;",
            "parsed": "2019-04-29 21:09:58.707529",
            "question": "Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число x, не превосходящее 1000, и выводится количество значащих цифр в двоичной записи этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на пяти языках программирования.)  БейсикPython INPUT x cnt = 0 WHILE x > 0 cnt = cnt + x MOD 2 x = x \\ 10 WEND PRINT cnt END  x = int(input()) cnt = 0 while x > 0:    cnt = cnt+x % 2    x = x // 10 print(cnt)  ПаскальАлгоритмический языкvar x,cnt: integer;beginreadln(x);cnt := 0;while x > 0 dobegincnt:=cnt + x mod 2;x := x div 10end;writeln(cnt);end. алгначцел x, cntввод xcnt := 0нц пока x > 0cnt := cnt+mod(x,2)x := div(x, 10)кцвывод cntконСи++#include <iostream>using namespace std;int main(){int x,cnt;cin >> x;cnt = 0;while (x > 0){cnt = cnt + x%2;x = x /10;}cout « cnt « endl;}   Последовательно выполните следующее:1. Напишите, что выведет эта программа при вводе числа 15.2. Приведите пример такого числа x, что, несмотря на ошибки, программа печатает правильный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк.  Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки. Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946341\" width=\"100%\"><p class=\"left_margin\">Требовалось написать программу, при выполнении которой с клавиатуры считывается натуральное число x, не превосходящее 1000, и выводится количество значащих цифр в двоичной записи этого числа. Программист торопился и написал программу неправильно. (Ниже для Вашего удобства программа представлена на пяти языках программирования.)<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> INPUT x<p> cnt = 0<p> WHILE x &gt; 0<p> cnt = cnt + x MOD 2<p> x = x \\ 10<p> WEND<p> PRINT cnt<p> END<p> </p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> x = int(input())<p> cnt = 0<p> while x &gt; 0:<p>    cnt = cnt+x % 2<p>    x = x // 10<p> print(cnt)<p> </p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var x,cnt: integer;<p>begin<p>readln(x);<p>cnt := 0;<p>while x &gt; 0 do<p>begin<p>cnt:=cnt + x mod 2;<p>x := x div 10<p>end;<p>writeln(cnt);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>цел x, cnt<p>ввод x<p>cnt := 0<p>нц пока x &gt; 0<p>cnt := cnt+mod(x,2)<p>x := div(x, 10)<p>кц<p>вывод cnt<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>int x,cnt;<p>cin &gt;&gt; x;<p>cnt = 0;<p>while (x &gt; 0)<p>{<p>cnt = cnt + x%2;<p>x = x /10;<p>}<p>cout « cnt « endl;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее:<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 15.<p class=\"left_margin\">2. Приведите пример такого числа x, что, несмотря на ошибки, программа печатает правильный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. <p> </p><p class=\"left_margin\">Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p> </p><p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на четырех других языках.1. Программа выведет число 2. 2. Программа напечатает правильный ответ при x=1. Замечание для проверяющего: это единственный случай, когда программа сработает верно. 3. Первая ошибка. Неверный подсчёт количества цифр. Программа не учитывает значащие нули.Строка с ошибкой:cnt:=cnt + x mod 2;Возможный вариант исправления:cnt:=cnt + 1; 4. Вторая ошибка. Неверная обработка числа x в цикле. Строка с ошибкой:x := x div 10;Возможный вариант исправления:x := x div 2;",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7769\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на четырех других языках.<p class=\"left_margin\">1. Программа выведет число 2.<p> </p><p class=\"left_margin\">2. Программа напечатает правильный ответ при x=1. Замечание для проверяющего: это единственный случай, когда программа сработает верно.<p> </p><p class=\"left_margin\">3. Первая ошибка. Неверный подсчёт количества цифр. Программа не учитывает значащие нули.<p class=\"left_margin\">Строка с ошибкой:<p>cnt:=cnt + x mod 2;<p class=\"left_margin\">Возможный вариант исправления:<p>cnt:=cnt + 1;<p> </p><p class=\"left_margin\">4. Вторая ошибка. Неверная обработка числа x в цикле. Строка с ошибкой:<p>x := x div 10;<p class=\"left_margin\">Возможный вариант исправления:<p>x := x div 2;</p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "7769"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 1.4 программа выведет число 0.2. Программа не выведет ответ 1 ни при каком вводе, то есть ответ на задание: 0. Примечание для проверяющего. При вводе A > 1 тело цикла не будет выполнено ни разу и программа выведет ответ 0. При A ≤ 1 происходит зацикливание.3. Программа содержит две ошибки.1) Неверная инициализация. Переменные s и k должны иметь одинаковые начальные значения: либо обе равны нулю, либо обе равны единице.2) Неверное условие цикла.Возможные варианты исправления для языка Паскаль следующие. Первая ошибка содержится в одной (любой) из двух строк:k := 0;s := 1;Первый способ исправления. Вместо строкиk := 0;записатьk := 1;Второй способ исправления. Вместо строкиs := 1;записатьs := 0;Вторая ошибка: while s>=a do beginИсправленная строка: while s < a do beginВ программах на других языках ошибочные строки и их исправления аналогичны.",
            "parsed": "2019-04-29 21:09:34.803674",
            "question": "Для заданного положительного вещественного числа A необходимо найти минимальное целое число K, при котором выполняется неравенство  Для решения этой задачи ученик написал такую программу.  БейсикPython DIM A, S AS DOUBLE DIM K AS INTEGER INPUT A K = 0 S = 1 WHILE S >= A K = K + 1 S = S + 1.0/K WEND PRINT K END a = float(input())k = 0s = 1while s>=a:    k = k + 1    s = s + 1.0/kprint(k)  ПаскальАлгоритмический языкvar a, s: real;k: integer;beginread(a);k := 0;s := 1;while s>=a do begink := k + 1;s := s + 1.0/k;end;write(k);end. алгначвещ a, sцел kввод ak := 0s := 1нц пока s>=ak := k + 1s := s + 1.0/kкцвывод kконСи++#include <iostream>using namespace std;int main(){double a, s;int k;cin >> a;k = 0;s = 1;while (s>=a) {k = k + 1;s = s + 1.0/k;}cout « k « endl;return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 1.4.2. Сколько существует натуральных чисел А, при вводе которых программа выведет ответ 1?3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946179\" width=\"100%\"><p class=\"left_margin\">Для заданного положительного вещественного числа A необходимо найти минимальное целое число <i>K</i>, при котором выполняется неравенство <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/f6/f60db4071f867ba9c178e48c81f45193.svg\" style=\"vertical-align:-8pt\"/> Для решения этой задачи ученик написал такую программу.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, S AS DOUBLE<p> DIM K AS INTEGER<p> INPUT A<p> K = 0<p> S = 1<p> WHILE S &gt;= A<p> K = K + 1<p> S = S + 1.0/K<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = float(input())<p>k = 0<p>s = 1<p>while s&gt;=a:<p>    k = k + 1<p>    s = s + 1.0/k<p>print(k)<p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, s: real;<p>k: integer;<p>begin<p>read(a);<p>k := 0;<p>s := 1;<p>while s&gt;=a do begin<p>k := k + 1;<p>s := s + 1.0/k;<p>end;<p>write(k);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ a, s<p>цел k<p>ввод a<p>k := 0<p>s := 1<p>нц пока s&gt;=a<p>k := k + 1<p>s := s + 1.0/k<p>кц<p>вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>double a, s;<p>int k;<p>cin &gt;&gt; a;<p>k = 0;<p>s = 1;<p>while (s&gt;=a) {<p>k = k + 1;<p>s = s + 1.0/k;<p>}<p>cout « k « endl;<p>return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1.4.<p class=\"left_margin\">2. Сколько существует натуральных чисел А, при вводе которых программа выведет ответ 1?<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 1.4 программа выведет число 0.2. Программа не выведет ответ 1 ни при каком вводе, то есть ответ на задание: 0. Примечание для проверяющего. При вводе A > 1 тело цикла не будет выполнено ни разу и программа выведет ответ 0. При A ≤ 1 происходит зацикливание.3. Программа содержит две ошибки.1) Неверная инициализация. Переменные s и k должны иметь одинаковые начальные значения: либо обе равны нулю, либо обе равны единице.2) Неверное условие цикла.Возможные варианты исправления для языка Паскаль следующие. Первая ошибка содержится в одной (любой) из двух строк:k := 0;s := 1;Первый способ исправления. Вместо строкиk := 0;записатьk := 1;Второй способ исправления. Вместо строкиs := 1;записатьs := 0;Вторая ошибка: while s>=a do beginИсправленная строка: while s < a do beginВ программах на других языках ошибочные строки и их исправления аналогичны.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol7935\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на других языках.<p class=\"left_margin\">1. При вводе числа 1.4 программа выведет число 0.<p class=\"left_margin\">2. Программа не выведет ответ 1 ни при каком вводе, то есть ответ на задание: 0. Примечание для проверяющего. При вводе A &gt; 1 тело цикла не будет выполнено ни разу и программа выведет ответ 0. При A ≤ 1 происходит зацикливание.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Переменные s и k должны иметь одинаковые начальные значения: либо обе равны нулю, либо обе равны единице.<p class=\"left_margin\">2) Неверное условие цикла.<p class=\"left_margin\">Возможные варианты исправления для языка Паскаль следующие. Первая ошибка содержится в одной (любой) из двух строк:<p>k := 0;<p>s := 1;<p class=\"left_margin\">Первый способ исправления. Вместо строки<p>k := 0;<p>записать<p>k := 1;<p class=\"left_margin\">Второй способ исправления. Вместо строки<p>s := 1;<p>записать<p>s := 0;<p class=\"left_margin\">Вторая ошибка:<p> while s&gt;=a do begin<p class=\"left_margin\">Исправленная строка:<p> while s &lt; a do begin<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "7935"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 0.4 программа выведет число 1.2. Программа не выведет ответ 2 ни при каком вводе, то есть ответ на задание: 0.Примечание для проверяющего. При вводе A < 1 тело цикла не будет выполнено ни разу и программа выведет ответ 1. При A ≥ 1 происходит зацикливание. 3. Возможные варианты исправления для языка Паскаль следующие.Первая ошибка:while s<=a do beginИсправленная строка:while s < a  do begin Вторая ошибка:s := 1.0/k;Исправленная строка:s := s + 1.0/k;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:35.251047",
            "question": "Для заданного положительного вещественного числа A необходимо найти минимальное целое число K, при котором выполняется неравенство  Для решения этой задачи ученик написал такую программу.  БейсикPython DIM A, S AS DOUBLE DIM K AS INTEGER INPUT A K = 1 S = 1 WHILE S <= A K = K + 1 S = 1.0/K WEND PRINT K END a = float(input())k = 1s = 1while s<=a:k = k + 1s = 1.0/kprint(k)  ПаскальАлгоритмический языкvar a, s: real;k: integer;beginread(a);k := 1;s := 1;while s<=a do begink := k + 1;s := 1.0/k;end;write(k);end. алгначвещ a, sцел kввод ak := 1s := 1нц пока s<=ak := k + 1s := 1.0/kкцвывод kконСи++#include <iostream>using namespace std;int main(){double a, s;int k;cin >> a;k = 1;s = 1;while (s<=a) {k = k + 1;s = 1.0/k;}cout « k « endl;return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 0.4.2. Сколько существует натуральных чисел А, при вводе которых программа выведет ответ 2?3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946620\" width=\"100%\"><p class=\"left_margin\">Для заданного положительного вещественного числа A необходимо найти минимальное целое число <i>K</i>, при котором выполняется неравенство <img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/f6/f60db4071f867ba9c178e48c81f45193.svg\" style=\"vertical-align:-8pt\"/> Для решения этой задачи ученик написал такую программу.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, S AS DOUBLE<p> DIM K AS INTEGER<p> INPUT A<p> K = 1<p> S = 1<p> WHILE S &lt;= A<p> K = K + 1<p> S = 1.0/K<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>a = float(input())<p>k = 1<p>s = 1<p>while s&lt;=a:<p>k = k + 1<p>s = 1.0/k<p>print(k)<p> </p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var a, s: real;<p>k: integer;<p>begin<p>read(a);<p>k := 1;<p>s := 1;<p>while s&lt;=a do begin<p>k := k + 1;<p>s := 1.0/k;<p>end;<p>write(k);<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>вещ a, s<p>цел k<p>ввод a<p>k := 1<p>s := 1<p>нц пока s&lt;=a<p>k := k + 1<p>s := 1.0/k<p>кц<p>вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>double a, s;<p>int k;<p>cin &gt;&gt; a;<p>k = 1;<p>s = 1;<p>while (s&lt;=a) {<p>k = k + 1;<p>s = 1.0/k;<p>}<p>cout « k « endl;<p>return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 0.4.<p class=\"left_margin\">2. Сколько существует натуральных чисел А, при вводе которых программа выведет ответ 2?<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде. Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 0.4 программа выведет число 1.2. Программа не выведет ответ 2 ни при каком вводе, то есть ответ на задание: 0.Примечание для проверяющего. При вводе A < 1 тело цикла не будет выполнено ни разу и программа выведет ответ 1. При A ≥ 1 происходит зацикливание. 3. Возможные варианты исправления для языка Паскаль следующие.Первая ошибка:while s<=a do beginИсправленная строка:while s < a  do begin Вторая ошибка:s := 1.0/k;Исправленная строка:s := s + 1.0/k;В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol8000\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на других языках.<p class=\"left_margin\">1. При вводе числа 0.4 программа выведет число 1.<p class=\"left_margin\">2. Программа не выведет ответ 2 ни при каком вводе, то есть ответ на задание: 0.<p class=\"left_margin\">Примечание для проверяющего. При вводе A &lt; 1 тело цикла не будет выполнено ни разу и программа выведет ответ 1. При A ≥ 1 происходит зацикливание. 3. Возможные варианты исправления для языка Паскаль следующие.<p class=\"left_margin\">Первая ошибка:<p>while s&lt;=a do begin<p class=\"left_margin\">Исправленная строка:<p>while s &lt; a  do begin <p class=\"left_margin\">Вторая ошибка:<p>s := 1.0/k;<p class=\"left_margin\">Исправленная строка:<p>s := s + 1.0/k;<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "8000"
        },
        {
            "answer": "Решение.1. В maxDigit изначально запишется 4. При работе программы будет найдена одна цифра, которая делится на 3 — это 3. Но так как она меньше 4, то ответ обновлён не будет и результатом работы программы будет 4.2. 333. Изначально в maxDigit запишется 3. Чисел, делящихся на 3 и больших, чем 3, нет, поэтому ответ не обновится ни разу за время работы программы и результатом будет 3.3.  Для языка Pascal: Первая ошибка.Неверная инициализация переменной maxDigit: maxDigit := N mod 10;Следует проинициализировать её числом, меньшим нуля, например, -1, что будет означать, что пока в числе не найдена цифра, которая делится на 3:maxDigit := -1; Вторая ошибка.0 может быть ответом, поэтому ошибка в строчках:if maxDigit = 0 then        writeln('NO')И так как мы условились изначально проинициализировать maxDigit как -1, то именно это значение и стоит использовать для обнаружения отсутствия ответа:if maxDigit = -1 then        writeln('NO')  Для языка C: Первая ошибка.Неверная инициализация переменной maxDigit: maxDigit = N % 10;Следует проинициализировать её числом, меньшим нуля, например, -1, что будет означать, что пока в числе не найдена цифра, которая делится на 3:maxDigit = -1; Вторая ошибка.0 может быть ответом, поэтому ошибка в строчках:if (maxDigit == 0)        cout << \"NO\";И так как мы условились изначально проинициализировать maxDigit как -1, то именно это значение и стоит использовать для обнаружения отсутствия ответа:if (maxDigit == -1)        cout << \"NO\";",
            "parsed": "2019-04-29 21:09:59.125047",
            "question": "На обработку поступает натуральное число, не превышающее 109. Нужно написать программу, которая выводит на экран максимальную цифру числа, кратную 3. Если в числе нет цифр, кратных 3, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. Напоминание: 0 делится на любое натуральное число.  БейсикPython DIM N, DIGIT, MAXDIGIT AS LONG INPUT N MAXDIGIT = N MOD 10 WHILE N > 0    DIGIT = N MOD 10    IF DIGIT MOD 3 = 0 THEN        IF DIGIT > MAXDIGIT THEN            MAXDIGIT = DIGIT        END IF    END IF    N = N \\ 10 WEND IF MAXDIGIT = 0 THEN    PRINT \"NO\" ELSE    PRINT MAXDIGIT END IF  N = int(input())maxDigit = N % 10while N > 0:    digit = N % 10    if digit % 3 == 0:        if digit > maxDigit:            maxDigit = digit    N = N // 10if maxDigit == 0:    print(\"NO\")else:    print(maxDigit)  ПаскальАлгоритмический языкvar N,digit,maxDigit: longint;begin    readln(N);    maxDigit := N mod 10;    while N > 0 do    begin        digit := N mod 10;        if digit mod 3 = 0 then            if digit > maxDigit then                maxDigit := digit;        N := N div 10;    end;    if maxDigit = 0 then        writeln('NO')    else        writeln(maxDigit)end. алгнач    цел N, digit, maxDigit    ввод N    maxDigit := mod(N,10)    нц пока N > 0        digit := mod(N,10)            если mod(digit, 3) = 0 то            если digit > maxDigit то                maxDigit := digit            все        все        N := div(N,10)    кц    если maxDigit = 0 то        вывод \"NO\"    иначе        вывод maxDigit    всеконСи++#include <iostream>using namespace std;int main(){    int N, digit, maxDigit;    cin >> N;    maxDigit = N % 10;    while (N > 0)    {        digit = N % 10;        if (digit % 3 == 0)            if (digit > maxDigit)                maxDigit = digit;        N = N / 10;    }    if (maxDigit == 0)        cout << \"NO\";    else        cout << maxDigit<< endl;    return 0;}   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 134.2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body946508\" width=\"100%\"><p class=\"left_margin\">На обработку поступает натуральное число, не превышающее 10<sup>9</sup>. Нужно написать программу, которая выводит на экран максимальную цифру числа, кратную 3. Если в числе нет цифр, кратных 3, требуется на экран вывести «NO». Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования. <p><b>Напоминание:</b> 0 делится на любое натуральное число.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, MAXDIGIT AS LONG<p> INPUT N<p> MAXDIGIT = N MOD 10<p> WHILE N &gt; 0<p>    DIGIT = N MOD 10<p>    IF DIGIT MOD 3 = 0 THEN<p>        IF DIGIT &gt; MAXDIGIT THEN<p>            MAXDIGIT = DIGIT<p>        END IF<p>    END IF<p>    N = N \\ 10<p> WEND<p> IF MAXDIGIT = 0 THEN<p>    PRINT \"NO\"<p> ELSE<p>    PRINT MAXDIGIT<p> END IF<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p>maxDigit = N % 10<p>while N &gt; 0:<p>    digit = N % 10<p>    if digit % 3 == 0:<p>        if digit &gt; maxDigit:<p>            maxDigit = digit<p>    N = N // 10<p>if maxDigit == 0:<p>    print(\"NO\")<p>else:<p>    print(maxDigit)<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var N,digit,maxDigit: longint;<p>begin<p>    readln(N);<p>    maxDigit := N mod 10;<p>    while N &gt; 0 do<p>    begin<p>        digit := N mod 10;<p>        if digit mod 3 = 0 then<p>            if digit &gt; maxDigit then<p>                maxDigit := digit;<p>        N := N div 10;<p>    end;<p>    if maxDigit = 0 then<p>        writeln('NO')<p>    else<p>        writeln(maxDigit)<p>end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел N, digit, maxDigit<p>    ввод N<p>    maxDigit := mod(N,10)<p>    нц пока N &gt; 0<p>        digit := mod(N,10)<p>            если mod(digit, 3) = 0 то<p>            если digit &gt; maxDigit то<p>                maxDigit := digit<p>            все<p>        все<p>        N := div(N,10)<p>    кц<p>    если maxDigit = 0 то<p>        вывод \"NO\"<p>    иначе<p>        вывод maxDigit<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main()<p>{<p>    int N, digit, maxDigit;<p>    cin &gt;&gt; N;<p>    maxDigit = N % 10;<p>    while (N &gt; 0)<p>    {<p>        digit = N % 10;<p>        if (digit % 3 == 0)<p>            if (digit &gt; maxDigit)<p>                maxDigit = digit;<p>        N = N / 10;<p>    }<p>    if (maxDigit == 0)<p>        cout &lt;&lt; \"NO\";<p>    else<p>        cout &lt;&lt; maxDigit&lt;&lt; endl;<p>    return 0;<p>}<p> </p><p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 134.<p class=\"left_margin\">2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. В maxDigit изначально запишется 4. При работе программы будет найдена одна цифра, которая делится на 3 — это 3. Но так как она меньше 4, то ответ обновлён не будет и результатом работы программы будет 4.2. 333. Изначально в maxDigit запишется 3. Чисел, делящихся на 3 и больших, чем 3, нет, поэтому ответ не обновится ни разу за время работы программы и результатом будет 3.3.  Для языка Pascal: Первая ошибка.Неверная инициализация переменной maxDigit: maxDigit := N mod 10;Следует проинициализировать её числом, меньшим нуля, например, -1, что будет означать, что пока в числе не найдена цифра, которая делится на 3:maxDigit := -1; Вторая ошибка.0 может быть ответом, поэтому ошибка в строчках:if maxDigit = 0 then        writeln('NO')И так как мы условились изначально проинициализировать maxDigit как -1, то именно это значение и стоит использовать для обнаружения отсутствия ответа:if maxDigit = -1 then        writeln('NO')  Для языка C: Первая ошибка.Неверная инициализация переменной maxDigit: maxDigit = N % 10;Следует проинициализировать её числом, меньшим нуля, например, -1, что будет означать, что пока в числе не найдена цифра, которая делится на 3:maxDigit = -1; Вторая ошибка.0 может быть ответом, поэтому ошибка в строчках:if (maxDigit == 0)        cout << \"NO\";И так как мы условились изначально проинициализировать maxDigit как -1, то именно это значение и стоит использовать для обнаружения отсутствия ответа:if (maxDigit == -1)        cout << \"NO\";",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol8112\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. В <i>maxDigit</i> изначально запишется 4. При работе программы будет найдена одна цифра, которая делится на 3 — это 3. Но так как она меньше 4, то ответ обновлён не будет и результатом работы программы будет 4.<p class=\"left_margin\">2. 333. Изначально в <i>maxDigit</i> запишется 3. Чисел, делящихся на 3 и больших, чем 3, нет, поэтому ответ не обновится ни разу за время работы программы и результатом будет 3.<p class=\"left_margin\">3. <p> </p><p class=\"left_margin\">Для языка <b>Pascal</b>:<p> </p><p><b>Первая ошибка.</b><p class=\"left_margin\">Неверная инициализация переменной maxDigit: <p><i>maxDigit := N mod 10;</i><p class=\"left_margin\">Следует проинициализировать её числом, меньшим нуля, например, -1, что будет означать, что пока в числе не найдена цифра, которая делится на 3:<p><i>maxDigit := -1;</i><p> </p><p><b>Вторая ошибка.</b><p class=\"left_margin\">0 может быть ответом, поэтому ошибка в строчках:<p><i>if maxDigit = 0 then<p>        writeln('NO')</p></i><p class=\"left_margin\">И так как мы условились изначально проинициализировать maxDigit как -1, то именно это значение и стоит использовать для обнаружения отсутствия ответа:<p><i>if maxDigit = -1 then<p>        writeln('NO')</p></i><p> </p><p> </p><p class=\"left_margin\">Для языка <b>C</b>:<p> </p><p><b>Первая ошибка.</b><p class=\"left_margin\">Неверная инициализация переменной maxDigit: <p><i>maxDigit = N % 10;</i><p class=\"left_margin\">Следует проинициализировать её числом, меньшим нуля, например, -1, что будет означать, что пока в числе не найдена цифра, которая делится на 3:<p><i>maxDigit = -1;</i><p> </p><p><b>Вторая ошибка.</b><p class=\"left_margin\">0 может быть ответом, поэтому ошибка в строчках:<p><i>if (maxDigit == 0)<p>        cout &lt;&lt; \"NO\";</p></i><p class=\"left_margin\">И так как мы условились изначально проинициализировать maxDigit как -1, то именно это значение и стоит использовать для обнаружения отсутствия ответа:<p><i>if (maxDigit == -1)<p>        cout &lt;&lt; \"NO\";</p></i></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: ЕГЭ 05.05.2015. До­сроч­ная волна.",
            "task_id": "8112"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1. Программа выведет два числа: 3 и 0.2. Программа напечатает правильный ответ, например, для последовательности 0 -1 -1 2Замечание для проверяющего. Программа будет работать верно, если в последовательности содержится 0 и при этом последнее число последовательности будет равно количеству неотрицательных чисел в последовательности.3. Первая ошибка. Неверная инициализация произведения.Строка с ошибкой:        p:=0;Возможный вариант исправления:        p:=1;4. Вторая ошибка. Вместо значения переменной count выводится значение переменной х:        writeln(х);Возможный вариант исправления:        writeln(count);",
            "parsed": "2019-04-29 21:09:27.258884",
            "question": "На обработку поступает последовательность из четырёх целых чисел. Нужно написать программу, которая выводит на экран количество неотрицательных чисел последовательности и их произведение. Если неотрицательных чисел нет, требуется вывести на экран «NO». Известно, что вводимые числа по абсолютной величине не превышают 10. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  Бейсик Python count = 0p = 0 FOR I = 1 TO 4    INPUT x    IF x >= 0 THEN        p = p*x        count = count + 1    END IF NEXT I IF count > 0 THEN    PRINT x    PRINT p ELSE    PRINT \"NO\" END IF  count = 0p = 0for i in range(1, 5):    x = int(input())    if x >= 0:        p = p*x        count = count + 1if count > 0:    print(x)    print(p)else:    print(\"NO\")  Алгоритмический язык Паскальалгнач    цел p,i,x,count    count := 0    p := 0    нц для i от 1 до 4        ввод x        если x >= 0 то            p := p*x            count := count+1        все    кц    если count > 0 то        вывод x, нс        вывод p    иначе        вывод \"NO\"    всекон var p,i,x,count: integer;begin    count := 0;    p := 0;    for i := 1 to 4 do    begin        read (x);        if x >= 0 then begin            p := p*x;            count := count+1;        end    end;    if count > 0 then    begin        writeln(х);        writeln(p);    end    else        writeln('NO');end. Си++#include <iostream>using namespace std;int main(void){    int p, i, x, count;    count = 0;    p = 0;    for (i = 1; i <= 4; i++)    {        cin >> x;        if (x >= 0)        {            p = p*x;            count = count+1;        }    }    if (count > 0)    {        cout << x << \"\\n\";        cout << p << \"\\n\";    }    else        cout << \"NO\\n\";    }  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе последовательности -5 2 1 3.2. Приведите пример такой последовательности, содержащей хотя бы одно неотрицательное число, что, несмотря на ошибки, программа печатает правильный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body937756\" width=\"100%\"><p class=\"left_margin\">На обработку поступает последовательность из четырёх целых чисел. Нужно написать программу, которая выводит на экран количество неотрицательных чисел последовательности и их произведение. Если неотрицательных чисел нет, требуется вывести на экран «NO». Известно, что вводимые числа по абсолютной величине не превышают 10. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> <center><table border=\"\" width=\"60%\"><tr align=\"center\"><th width=\"50%\">Бейсик</th> <th width=\"50%\">Python</th></tr><tr><td><div class=\"source_code lang_basic\"><p> count = 0<p>p = 0<p> FOR I = 1 TO 4<p>    INPUT x<p>    IF x &gt;= 0 THEN<p>        p = p*x<p>        count = count + 1<p>    END IF<p> NEXT I<p> IF count &gt; 0 THEN<p>    PRINT x<p>    PRINT p<p> ELSE<p>    PRINT \"NO\"<p> END IF<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td> <td><div class=\"source_code lang_python\"><p>count = 0<p>p = 0<p>for i in range(1, 5):<p>    x = int(input())<p>    if x &gt;= 0:<p>        p = p*x<p>        count = count + 1<p>if count &gt; 0:<p>    print(x)<p>    print(p)<p>else:<p>    print(\"NO\")<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr> <tr align=\"center\"><th>Алгоритмический язык</th> <th>Паскаль</th></tr><tr><td><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел p,i,x,count<p>    count := 0<p>    p := 0<p>    нц для i от 1 до 4<p>        ввод x<p>        если x &gt;= 0 то<p>            p := p*x<p>            count := count+1<p>        все<p>    кц<p>    если count &gt; 0 то<p>        вывод x, нс<p>        вывод p<p>    иначе<p>        вывод \"NO\"<p>    все<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td> <td><div class=\"source_code lang_pascal\"><p>var p,i,x,count: integer;<p>begin<p>    count := 0;<p>    p := 0;<p>    for i := 1 to 4 do<p>    begin<p>        read (x);<p>        if x &gt;= 0 then begin<p>            p := p*x;<p>            count := count+1;<p>        end<p>    end;<p>    if count &gt; 0 then<p>    begin<p>        writeln(х);<p>        writeln(p);<p>    end<p>    else<p>        writeln('NO');<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr> <p><tr><th colspan=\"2\">Си++</th></tr><p><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void)<p>{<p>    int p, i, x, count;<p>    count = 0;<p>    p = 0;<p>    for (i = 1; i &lt;= 4; i++)<p>    {<p>        cin &gt;&gt; x;<p>        if (x &gt;= 0)<p>        {<p>            p = p*x;<p>            count = count+1;<p>        }<p>    }<p>    if (count &gt; 0)<p>    {<p>        cout &lt;&lt; x &lt;&lt; \"\\n\";<p>        cout &lt;&lt; p &lt;&lt; \"\\n\";<p>    }<p>    else<p>        cout &lt;&lt; \"NO\\n\";<p>    }<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><p></p></tr><p></p></p></p></table><p> </p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе последовательности -5 2 1 3.<p class=\"left_margin\">2. Приведите пример такой последовательности, содержащей хотя бы одно неотрицательное число, что, несмотря на ошибки, программа печатает правильный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.<p class=\"left_margin\">Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1. Программа выведет два числа: 3 и 0.2. Программа напечатает правильный ответ, например, для последовательности 0 -1 -1 2Замечание для проверяющего. Программа будет работать верно, если в последовательности содержится 0 и при этом последнее число последовательности будет равно количеству неотрицательных чисел в последовательности.3. Первая ошибка. Неверная инициализация произведения.Строка с ошибкой:        p:=0;Возможный вариант исправления:        p:=1;4. Вторая ошибка. Вместо значения переменной count выводится значение переменной х:        writeln(х);Возможный вариант исправления:        writeln(count);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol8672\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.<p class=\"left_margin\">1. Программа выведет два числа: 3 и 0.<p class=\"left_margin\">2. Программа напечатает правильный ответ, например, для последовательности 0 -1 -1 2<p><i>Замечание для проверяющего. Программа будет работать верно, если в последовательности содержится 0 и при этом последнее число последовательности будет равно количеству неотрицательных чисел в последовательности.</i><p class=\"left_margin\">3. <b>Первая ошибка</b>. Неверная инициализация произведения.<p class=\"left_margin\">Строка с ошибкой:<p>        <tt>p:=0;</tt><p class=\"left_margin\">Возможный вариант исправления:<p>        <tt>p:=1;</tt><p class=\"left_margin\">4. <b>Вторая ошибка</b>. Вместо значения переменной count выводится значение переменной х:<p>        <tt>writeln(х);</tt><p class=\"left_margin\">Возможный вариант исправления:<p>        <tt>writeln(count);</tt></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "8672"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1. Программа выведет два числа: -4 и 3.2. Программа напечатает правильный ответ, например, для последовательности -4 7 8 9Замечание для проверяющего. Программа будет работать верно, если в последовательности есть ровно одно отрицательное число.3. Первая ошибка. Неверная инициализация максимума.Строка с ошибкой:        mx:=0;Возможный вариант исправления:        mx:=-1000;4. Вторая ошибка. Неверно ведётся суммирование элементов.Строка с ошибкой:        s := x;Возможный вариант исправления:        s := s+x;",
            "parsed": "2019-04-29 21:09:27.774933",
            "question": "На обработку поступает последовательность из четырёх целых чисел. Нужно написать программу, которая выводит на экран сумму всех отрицательных чисел последовательности и максимальное число в последовательности.Известно, что вводимые числа по абсолютной величине не превышают 1000. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  Бейсик Pythonmx = 0s = 0 FOR I = 1 TO 4    INPUT x    IF x < 0 THEN        s = x    END IF    IF x > mx THEN        mx = x    END IF NEXT I PRINT s PRINT mx  mx = 0s = 0for i in range(1, 5):    x = int(input())    if x < 0:        s = x    if x > mx:        mx = xprint(s)print(mx)  Алгоритмический язык Паскальалгнач    цел s,i,x,mx    mx := 0    s := 0    нц для i от 1 до 4        ввод x        если x < 0 то            s := x        все        если x > mx то            mx := x        все    кцвывод s, нсвывод mxкон var s,i,x,mx: integer;begin    mx := 0;    s := 0;    for i := 1 to 4 do    begin        read (x);        if x < 0 then            s := x;        if x > mx then            mx := x;    end;    writeln(s);    writeln(mx);end. Си++#include <iostream>using namespace std;int main(void){    int s, i, x, mx;    mx = 0;    s = 0;    for (i = 1; i <= 4; i++)    {        cin >> x;        if (x < 0)        {            s = x;        }        if (x > mx)        {            mx = x;        }    }    cout << s << \"\\n\";    cout << mx << \"\\n\";}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе последовательности -5 2 -4 3.2. Приведите пример такой последовательности, содержащей хотя бы одно неотрицательное число, что, несмотря на ошибки, программа печатает правильный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body937252\" width=\"100%\"><p class=\"left_margin\">На обработку поступает последовательность из четырёх целых чисел. Нужно написать программу, которая выводит на экран сумму всех отрицательных чисел последовательности и максимальное число в последовательности.<p class=\"left_margin\">Известно, что вводимые числа по абсолютной величине не превышают 1000. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> <center><table border=\"\" width=\"60%\"><tr align=\"center\"><th width=\"50%\">Бейсик</th> <th width=\"50%\">Python</th></tr><tr><td><div class=\"source_code lang_basic\"><p>mx = 0<p>s = 0<p> FOR I = 1 TO 4<p>    INPUT x<p>    IF x &lt; 0 THEN<p>        s = x<p>    END IF<p>    IF x &gt; mx THEN<p>        mx = x<p>    END IF<p> NEXT I<p> PRINT s<p> PRINT mx<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td> <td><div class=\"source_code lang_python\"><p>mx = 0<p>s = 0<p>for i in range(1, 5):<p>    x = int(input())<p>    if x &lt; 0:<p>        s = x<p>    if x &gt; mx:<p>        mx = x<p>print(s)<p>print(mx)<p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td></tr> <tr align=\"center\"><th>Алгоритмический язык</th> <th>Паскаль</th></tr><tr><td><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    цел s,i,x,mx<p>    mx := 0<p>    s := 0<p>    нц для i от 1 до 4<p>        ввод x<p>        если x &lt; 0 то<p>            s := x<p>        все<p>        если x &gt; mx то<p>            mx := x<p>        все<p>    кц<p>вывод s, нс<p>вывод mx<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td> <td><div class=\"source_code lang_pascal\"><p>var s,i,x,mx: integer;<p>begin<p>    mx := 0;<p>    s := 0;<p>    for i := 1 to 4 do<p>    begin<p>        read (x);<p>        if x &lt; 0 then<p>            s := x;<p>        if x &gt; mx then<p>            mx := x;<p>    end;<p>    writeln(s);<p>    writeln(mx);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr> <p><tr><th colspan=\"2\">Си++</th></tr><p><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(void)<p>{<p>    int s, i, x, mx;<p>    mx = 0;<p>    s = 0;<p>    for (i = 1; i &lt;= 4; i++)<p>    {<p>        cin &gt;&gt; x;<p>        if (x &lt; 0)<p>        {<p>            s = x;<p>        }<p>        if (x &gt; mx)<p>        {<p>            mx = x;<p>        }<p>    }<p>    cout &lt;&lt; s &lt;&lt; \"\\n\";<p>    cout &lt;&lt; mx &lt;&lt; \"\\n\";<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><p></p></tr><p></p></p></p></table><p> </p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе последовательности -5 2 -4 3.<p class=\"left_margin\">2. Приведите пример такой последовательности, содержащей хотя бы одно неотрицательное число, что, несмотря на ошибки, программа печатает правильный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения.<p class=\"left_margin\">Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.1. Программа выведет два числа: -4 и 3.2. Программа напечатает правильный ответ, например, для последовательности -4 7 8 9Замечание для проверяющего. Программа будет работать верно, если в последовательности есть ровно одно отрицательное число.3. Первая ошибка. Неверная инициализация максимума.Строка с ошибкой:        mx:=0;Возможный вариант исправления:        mx:=-1000;4. Вторая ошибка. Неверно ведётся суммирование элементов.Строка с ошибкой:        s := x;Возможный вариант исправления:        s := s+x;",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol9176\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на трёх других языках.<p class=\"left_margin\">1. Программа выведет два числа: -4 и 3.<p class=\"left_margin\">2. Программа напечатает правильный ответ, например, для последовательности -4 7 8 9<p><i>Замечание для проверяющего. Программа будет работать верно, если в последовательности есть ровно одно отрицательное число.</i><p class=\"left_margin\">3. Первая ошибка. Неверная инициализация максимума.<p class=\"left_margin\">Строка с ошибкой:<p>        <tt>mx:=0;</tt><p class=\"left_margin\">Возможный вариант исправления:<p>        <tt>mx:=-1000;</tt><p class=\"left_margin\">4. Вторая ошибка. Неверно ведётся суммирование элементов.<p class=\"left_margin\">Строка с ошибкой:<p>        <tt>s := x;</tt><p class=\"left_margin\">Возможный вариант исправления:<p>        <tt>s := s+x;</tt></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "9176"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 1.2 программа выведет число 2.2. Примеры чисел, при вводе которых программа выводит верный ответ: 1.6, 2.05.Примечание для проверяющего. Программа содержит две ошибки, одна из которых приводит к увеличению ответа, другая – к уменьшению.В некоторых случаях эти ошибки компенсируют друг друга, и ответ оказывается правильным. Это происходит, если значение A попадает в один из следующих диапазонов: 1.5 < A < 1.83, 2 < A < 2.08.3. Программа содержит две ошибки.1) Неверная инициализация. Начальное значение S должно быть равно нулю.В приведённом варианте вычисленная сумма оказывается на 1 больше правильного значения.Строка с ошибкой:        s := 1;Правильная строка:        s := 0;2) Неверное определение ответа. Приведённая программа находит не максимальное K, при котором выполняется неравенство, а минимальное, при котором оно не выполняется, то есть увеличивает верное значение на 1.Кроме того, использованный порядок действий в цикле (увеличение K после увеличения S) приводит к увеличению ещё на 1. Это можно было бы исправить, изменив порядок действий в цикле и уменьшив K после завершения цикла, но эти действия не разрешены по условию задачи.Поэтому для исправления ошибки можно просто скорректировать значение при выводе.Строка с ошибкой:        write(k);Правильная строка:        write(k-2);",
            "parsed": "2019-04-29 21:09:35.666378",
            "question": "Для заданного положительного вещественного числа A необходимо найти максимальное целое число K, при котором выполняется неравенство (при K = 0 сумма считается равной 0).Для решения этой задачи ученик написал такую программу.  Бейсик Python DIM A, S AS DOUBLE DIM K AS INTEGER INPUT A K = 1 S = 1 WHILE S < A    S = S + 1.0/K    K = K + 1 WEND PRINT K END  a = float(input())k = 1s = 1while s < a:    s = s + 1.0/k    k = k + 1print(k)  Алгоритмический язык Паскальалгнач    вещ a, s    цел k    ввод a    k := 1    s := 1    нц пока s<a        s := s + 1.0/k        k := k + 1    кц    вывод kкон var a, s: real;k: integer;begin    read(a);    k := 1;    s := 1;    while s<a do begin        s := s + 1.0/k;        k := k + 1;    end;    write(k);end. Си++#include <iostream>using namespace std;int main(){    double a, s;    int k;    cin >> a;    k = 1;    s = 1;    while (s<a) {        s = s + 1.0/k;        k = k + 1;    }    cout « k « endl;    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 1.2.2. Приведите пример числа, при вводе которого программа даст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только исправлять ошибочные строки; удалять строки или добавлять новые строки нельзя. Постарайтесь также не внести новые ошибки – за это оценка снижается.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body937220\" width=\"100%\"><p class=\"left_margin\">Для заданного положительного вещественного числа A необходимо найти максимальное целое число K, при котором выполняется неравенство<p><img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/a0/a07b4c61e9fc502c6ac18e044f003904.svg\" style=\"vertical-align:-8pt\"/><p> (при K = 0 сумма считается равной 0).<p class=\"left_margin\">Для решения этой задачи ученик написал такую программу.<p> </p><p> <center><table border=\"\" width=\"60%\"><tr align=\"center\"><th width=\"50%\">Бейсик</th> <th width=\"50%\">Python</th></tr><tr><td><p><div class=\"source_code lang_basic\"><p> DIM A, S AS DOUBLE<p> DIM K AS INTEGER<p> INPUT A<p> K = 1<p> S = 1<p> WHILE S &lt; A<p>    S = S + 1.0/K<p>    K = K + 1<p> WEND<p> PRINT K<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></p></td> <td><div class=\"source_code lang_python\"><p>a = float(input())<p>k = 1<p>s = 1<p>while s &lt; a:<p>    s = s + 1.0/k<p>    k = k + 1<p>print(k)<p></p></p></p></p></p></p></p></p></div><p> </p></td></tr> <tr align=\"center\"><th>Алгоритмический язык</th> <th>Паскаль</th></tr><tr><td><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ a, s<p>    цел k<p>    ввод a<p>    k := 1<p>    s := 1<p>    нц пока s&lt;a<p>        s := s + 1.0/k<p>        k := k + 1<p>    кц<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td> <td><div class=\"source_code lang_pascal\"><p>var a, s: real;<p>k: integer;<p>begin<p>    read(a);<p>    k := 1;<p>    s := 1;<p>    while s&lt;a do begin<p>        s := s + 1.0/k;<p>        k := k + 1;<p>    end;<p>    write(k);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr> <p><tr><th colspan=\"2\">Си++</th></tr><p><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    double a, s;<p>    int k;<p>    cin &gt;&gt; a;<p>    k = 1;<p>    s = 1;<p>    while (s&lt;a) {<p>        s = s + 1.0/k;<p>        k = k + 1;<p>    }<p>    cout « k « endl;<p>    return 0;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><p></p></tr><p></p></p></p></table><p> </p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1.2.<p class=\"left_margin\">2. Приведите пример числа, при вводе которого программа даст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только исправлять ошибочные строки; удалять строки или добавлять новые строки нельзя. Постарайтесь также не внести новые ошибки – за это оценка снижается.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 1.2 программа выведет число 2.2. Примеры чисел, при вводе которых программа выводит верный ответ: 1.6, 2.05.Примечание для проверяющего. Программа содержит две ошибки, одна из которых приводит к увеличению ответа, другая – к уменьшению.В некоторых случаях эти ошибки компенсируют друг друга, и ответ оказывается правильным. Это происходит, если значение A попадает в один из следующих диапазонов: 1.5 < A < 1.83, 2 < A < 2.08.3. Программа содержит две ошибки.1) Неверная инициализация. Начальное значение S должно быть равно нулю.В приведённом варианте вычисленная сумма оказывается на 1 больше правильного значения.Строка с ошибкой:        s := 1;Правильная строка:        s := 0;2) Неверное определение ответа. Приведённая программа находит не максимальное K, при котором выполняется неравенство, а минимальное, при котором оно не выполняется, то есть увеличивает верное значение на 1.Кроме того, использованный порядок действий в цикле (увеличение K после увеличения S) приводит к увеличению ещё на 1. Это можно было бы исправить, изменив порядок действий в цикле и уменьшив K после завершения цикла, но эти действия не разрешены по условию задачи.Поэтому для исправления ошибки можно просто скорректировать значение при выводе.Строка с ошибкой:        write(k);Правильная строка:        write(k-2);",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol9208\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на других языках.<p class=\"left_margin\">1. При вводе числа 1.2 программа выведет число 2.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 1.6, 2.05.<p><i>Примечание для проверяющего. Программа содержит две ошибки, одна из которых приводит к увеличению ответа, другая – к уменьшению.</i><p class=\"left_margin\">В некоторых случаях эти ошибки компенсируют друг друга, и ответ оказывается правильным. Это происходит, если значение A попадает в один из следующих диапазонов: 1.5 &lt; A &lt; 1.83, 2 &lt; A &lt; 2.08.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Начальное значение S должно быть равно нулю.<p class=\"left_margin\">В приведённом варианте вычисленная сумма оказывается на 1 больше правильного значения.<p class=\"left_margin\">Строка с ошибкой:<p>        <tt>s := 1;</tt><p class=\"left_margin\">Правильная строка:<p>        <tt>s := 0;</tt><p class=\"left_margin\">2) Неверное определение ответа. Приведённая программа находит не максимальное K, при котором выполняется неравенство, а минимальное, при котором оно не выполняется, то есть увеличивает верное значение на 1.<p class=\"left_margin\">Кроме того, использованный порядок действий в цикле (увеличение K после увеличения S) приводит к увеличению ещё на 1. Это можно было бы исправить, изменив порядок действий в цикле и уменьшив K после завершения цикла, но эти действия не разрешены по условию задачи.<p class=\"left_margin\">Поэтому для исправления ошибки можно просто скорректировать значение при выводе.<p class=\"left_margin\">Строка с ошибкой:<p>        <tt>write(k);</tt><p class=\"left_margin\">Правильная строка:<p>        <tt>write(k-2);</tt></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "9208"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 1.8 программа выведет число 1.2. Примеры чисел, при вводе которых программа выводит верный ответ: 0.6, 1.4.Примечание для проверяющего. Программа содержит две ошибки, одна из которых приводит к увеличению ответа, другая – к уменьшению.В некоторых случаях эти ошибки компенсируют друг друга, и ответ оказывается правильным. Это происходит, если 0 < A ≤ 1.5.3. Программа содержит две ошибки.1) Неверная инициализация. Начальные значения S и K должны быть одинаковы: оба равны нулю или оба равны единице. В приведённом варианте вычисленная сумма оказывается на 1 больше правильного значения. Эту ошибку можно исправить двумя способами.Первый способ исправления:Строка с ошибкой:s := 1;Правильная строка:s := 0;Второй способ исправления:Строка с ошибкой:k := 0;Правильная строка:k := 1; 2) Неверное определение ответа. Приведённая программа находит не максимальное K, при котором выполняется неравенство, а минимальное, при котором оно не выполняется, то есть увеличивает верное значение на 1. Эту ошибку можно исправить двумя способами: скорректировать значение при выводе или использовать «предварительное вычисление» в условии цикла.Первый способ исправления:Строка с ошибкой:write(k);Правильная строка:write(k-1);Второй способ исправления:Строка с ошибкой:while s < a do beginПравильная строка:while s+1/(k+1) < a do beginВторой способ исправления возможен, только если первая ошибка была исправлена первым способом, то есть использована инициализация нулями.При инициализации единицами минимально возможный ответ оказывается равным 1, в то время как при A < 1 правильный ответ 0. Первый способ исправления работает независимо от того, как исправлена первая ошибка.В программах на других языках ошибочные строки и их исправления аналогичны. При использовании второго способа исправления второй ошибки на языке Си следует обратить внимание на типы данных при делении: чтобы результат получился правильного типа (вещественный), необходимо обеспечить, чтобы хотя бы один из операндов деления былвещественным.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:36.135179",
            "question": "Для заданного положительного вещественного числа A необходимо найти максимальное целое число K, при котором выполняется неравенство (при K = 0 сумма считается равной 0).Для решения этой задачи ученик написал такую программу.  Бейсик Python DIM A, S AS DOUBLE DIM K AS INTEGER INPUT A K = 0 S = 1 WHILE S < A    K = K + 1    S = S + 1.0/K WEND PRINT K END  a = float(input())k = 0s = 1while s < a:    k = k + 1    s = s + 1.0/kprint(k)  Алгоритмический язык Паскальалгнач    вещ a, s    цел k    ввод a    k := 0    s := 1    нц пока s<a        k := k + 1        s := s + 1.0/k    кц    вывод kкон var a, s: real;k: integer;begin    read(a);    k := 0;    s := 1;    while s<a do begin        k := k + 1;        s := s + 1.0/k;    end;    write(k);end. Си++#include <iostream>using namespace std;int main(){    double a, s;    int k;    cin >> a;    k = 0;    s = 1;    while (s<a) {        k = k + 1;        s = s + 1.0/k;    }    cout « k « endl;    return 0;}  Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 1.8.2. Приведите пример числа, при вводе которого программа даст верный ответ.3. Найдите в программе все ошибки (их может быть одна или несколько).Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только исправлять ошибочные строки; удалять строки или добавлять новые строки нельзя. Постарайтесь также не внести новые ошибки – за это оценка снижается.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body936600\" width=\"100%\"><p class=\"left_margin\">Для заданного положительного вещественного числа A необходимо найти максимальное целое число K, при котором выполняется неравенство<p><img class=\"tex\" src=\"https://ege.sdamgia.ru/formula/svg/a0/a07b4c61e9fc502c6ac18e044f003904.svg\" style=\"vertical-align:-8pt\"/><p> (при K = 0 сумма считается равной 0).<p class=\"left_margin\">Для решения этой задачи ученик написал такую программу.<p> </p><p> <center><table border=\"\" width=\"60%\"><tr align=\"center\"><th width=\"50%\">Бейсик</th> <th width=\"50%\">Python</th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM A, S AS DOUBLE<p> DIM K AS INTEGER<p> INPUT A<p> K = 0<p> S = 1<p> WHILE S &lt; A<p>    K = K + 1<p>    S = S + 1.0/K<p> WEND<p> PRINT K<p> END<p></p></p></p></p></p></p></p></p></p></p></p></p></div><p> </p></td> <td><div class=\"source_code lang_python\"><p>a = float(input())<p>k = 0<p>s = 1<p>while s &lt; a:<p>    k = k + 1<p>    s = s + 1.0/k<p>print(k)<p></p></p></p></p></p></p></p></p></div><p> </p></td></tr> <tr align=\"center\"><th>Алгоритмический язык</th> <th>Паскаль</th></tr><tr><td><p><div class=\"source_code lang_alg\"><p>алг<p>нач<p>    вещ a, s<p>    цел k<p>    ввод a<p>    k := 0<p>    s := 1<p>    нц пока s&lt;a<p>        k := k + 1<p>        s := s + 1.0/k<p>    кц<p>    вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></p></td> <td><div class=\"source_code lang_pascal\"><p>var a, s: real;<p>k: integer;<p>begin<p>    read(a);<p>    k := 0;<p>    s := 1;<p>    while s&lt;a do begin<p>        k := k + 1;<p>        s := s + 1.0/k;<p>    end;<p>    write(k);<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td></tr> <p><tr><th colspan=\"2\">Си++</th></tr><p><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>    double a, s;<p>    int k;<p>    cin &gt;&gt; a;<p>    k = 0;<p>    s = 1;<p>    while (s&lt;a) {<p>        k = k + 1;<p>        s = s + 1.0/k;<p>    }<p>    cout « k « endl;<p>    return 0;<p>}<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div><p></p></td><p></p></tr><p></p></p></p></table><p> </p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 1.8.<p class=\"left_margin\">2. Приведите пример числа, при вводе которого программа даст верный ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько).<p class=\"left_margin\">Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Обратите внимание: вам нужно исправить приведённую программу, а не написать свою. Вы можете только исправлять ошибочные строки; удалять строки или добавлять новые строки нельзя. Постарайтесь также не внести новые ошибки – за это оценка снижается.</p></p></p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на других языках.1. При вводе числа 1.8 программа выведет число 1.2. Примеры чисел, при вводе которых программа выводит верный ответ: 0.6, 1.4.Примечание для проверяющего. Программа содержит две ошибки, одна из которых приводит к увеличению ответа, другая – к уменьшению.В некоторых случаях эти ошибки компенсируют друг друга, и ответ оказывается правильным. Это происходит, если 0 < A ≤ 1.5.3. Программа содержит две ошибки.1) Неверная инициализация. Начальные значения S и K должны быть одинаковы: оба равны нулю или оба равны единице. В приведённом варианте вычисленная сумма оказывается на 1 больше правильного значения. Эту ошибку можно исправить двумя способами.Первый способ исправления:Строка с ошибкой:s := 1;Правильная строка:s := 0;Второй способ исправления:Строка с ошибкой:k := 0;Правильная строка:k := 1; 2) Неверное определение ответа. Приведённая программа находит не максимальное K, при котором выполняется неравенство, а минимальное, при котором оно не выполняется, то есть увеличивает верное значение на 1. Эту ошибку можно исправить двумя способами: скорректировать значение при выводе или использовать «предварительное вычисление» в условии цикла.Первый способ исправления:Строка с ошибкой:write(k);Правильная строка:write(k-1);Второй способ исправления:Строка с ошибкой:while s < a do beginПравильная строка:while s+1/(k+1) < a do beginВторой способ исправления возможен, только если первая ошибка была исправлена первым способом, то есть использована инициализация нулями.При инициализации единицами минимально возможный ответ оказывается равным 1, в то время как при A < 1 правильный ответ 0. Первый способ исправления работает независимо от того, как исправлена первая ошибка.В программах на других языках ошибочные строки и их исправления аналогичны. При использовании второго способа исправления второй ошибки на языке Си следует обратить внимание на типы данных при делении: чтобы результат получился правильного типа (вещественный), необходимо обеспечить, чтобы хотя бы один из операндов деления былвещественным.Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol9316\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на других языках.<p class=\"left_margin\">1. При вводе числа 1.8 программа выведет число 1.<p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ: 0.6, 1.4.<p><i>Примечание для проверяющего. Программа содержит две ошибки, одна из которых приводит к увеличению ответа, другая – к уменьшению.</i><p class=\"left_margin\">В некоторых случаях эти ошибки компенсируют друг друга, и ответ оказывается правильным. Это происходит, если 0 &lt; A ≤ 1.5.<p class=\"left_margin\">3. Программа содержит две ошибки.<p class=\"left_margin\">1) Неверная инициализация. Начальные значения S и K должны быть одинаковы: оба равны нулю или оба равны единице. В приведённом варианте вычисленная сумма оказывается на 1 больше правильного значения. Эту ошибку можно исправить двумя способами.<p class=\"left_margin\">Первый способ исправления:<p class=\"left_margin\">Строка с ошибкой:<p><tt>s := 1;</tt><p class=\"left_margin\">Правильная строка:<p><tt>s := 0;</tt><p class=\"left_margin\">Второй способ исправления:<p class=\"left_margin\">Строка с ошибкой:<p><tt>k := 0;</tt><p class=\"left_margin\">Правильная строка:<p><tt>k := 1;</tt><p> </p><p class=\"left_margin\">2) Неверное определение ответа. Приведённая программа находит не максимальное K, при котором выполняется неравенство, а минимальное, при котором оно не выполняется, то есть увеличивает верное значение на 1. Эту ошибку можно исправить двумя способами: скорректировать значение при выводе или использовать «предварительное вычисление» в условии цикла.<p class=\"left_margin\">Первый способ исправления:<p class=\"left_margin\">Строка с ошибкой:<p><tt>write(k);</tt><p class=\"left_margin\">Правильная строка:<p><tt>write(k-1);</tt><p class=\"left_margin\">Второй способ исправления:<p class=\"left_margin\">Строка с ошибкой:<p><tt>while s &lt; a do begin</tt><p class=\"left_margin\">Правильная строка:<p><tt>while s+1/(k+1) &lt; a do begin</tt><p class=\"left_margin\">Второй способ исправления возможен, только если первая ошибка была исправлена первым способом, то есть использована инициализация нулями.<p class=\"left_margin\">При инициализации единицами минимально возможный ответ оказывается равным 1, в то время как при A &lt; 1 правильный ответ 0. Первый способ исправления работает независимо от того, как исправлена первая ошибка.<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны. При использовании второго способа исправления второй ошибки на языке Си следует обратить внимание на типы данных при делении: чтобы результат получился правильного типа (вещественный), необходимо обеспечить, чтобы хотя бы один из операндов деления был<p>вещественным.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "9316"
        },
        {
            "answer": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков.1. Программа выведет число 4.2. Пример числа, при вводе которого программа выдаёт верный ответ: 835.Замечание для проверяющего. Программа работает неправильно из-за неверной выводимой на экран переменной и неверного увеличения суммы. Соответственно, программа будет работать верно, если в числе старшая цифра (крайняя левая) равна сумме цифр, меньших 7. Также программа верно отработает для чисел 100, 200, 300, 400, 500, 600.3. В программе есть две ошибки.Первая ошибка. Неверное увеличение суммы.Строка с ошибкой:sum := sum + 1;Верное исправление:sum := sum + digit;Вторая ошибка. Неверный вывод ответа на экран.Строка с ошибкой:writeln(digit)Верное исправление:writeln(sum)",
            "parsed": "2019-04-29 21:09:59.665599",
            "question": "На обработку поступает положительное целое число, не превышающее 109. Нужно написать программу, которая выводит на экран сумму цифр этого числа, меньших 7. Если в числе нет цифр, меньших 7, требуется на экран вывести 0. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.  БейсикPython DIM N, DIGIT, SUM AS LONG INPUT N SUM = 0 WHILE N > 0    DIGIT = N MOD 10    IF DIGIT < 7 THEN        SUM = SUM + 1    END IF    N = N \\ 10 WEND PRINT DIGIT  N = int(input()) sum = 0 while N > 0:    digit = N % 10    if digit < 7:        sum = sum + 1    N = N // 10 print(digit)  ПаскальАлгоритмический язык var N, digit, sum: longint; begin    readln(N);    sum := 0;    while N > 0 do    begin        digit := N mod 10;        if digit < 7 then            sum := sum + 1;        N := N div 10;    end;    writeln(digit) end.  алг нач    цел N, digit, sum    ввод N    sum := 0    нц пока N > 0        digit := mod(N,10)        если digit < 7 то            sum := sum + 1        все        N := div(N,10)    кц    вывод digit конСи++#include <iostream>using namespace std; int main() {    int N, digit, sum;    cin >> N;    sum = 0;    while (N > 0)    {        digit = N % 10;        if (digit < 7)            sum = sum + 1;        N = N / 10;    }    cout << digit<< endl;    return 0; }   Последовательно выполните следующее.1. Напишите, что выведет эта программа при вводе числа 456.2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:1) выпишите строку, в которой сделана ошибка;2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body936547\" width=\"100%\"><p class=\"left_margin\">На обработку поступает положительное целое число, не превышающее 10<sup>9</sup>. Нужно написать программу, которая выводит на экран сумму цифр этого числа, меньших 7. Если в числе нет цифр, меньших 7, требуется на экран вывести 0. Программист написал программу неправильно. Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><p> </p><center><p><table border=\"\" width=\"60%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, DIGIT, SUM AS LONG<p> INPUT N<p> SUM = 0<p> WHILE N &gt; 0<p>    DIGIT = N MOD 10<p>    IF DIGIT &lt; 7 THEN<p>        SUM = SUM + 1<p>    END IF<p>    N = N \\ 10<p> WEND<p> PRINT DIGIT<p> </p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p> N = int(input())<p> sum = 0<p> while N &gt; 0:<p>    digit = N % 10<p>    if digit &lt; 7:<p>        sum = sum + 1<p>    N = N // 10<p> print(digit)<p> </p></p></p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p> var N, digit, sum: longint;<p> begin<p>    readln(N);<p>    sum := 0;<p>    while N &gt; 0 do<p>    begin<p>        digit := N mod 10;<p>        if digit &lt; 7 then<p>            sum := sum + 1;<p>        N := N div 10;<p>    end;<p>    writeln(digit)<p> end.<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p> алг<p> нач<p>    цел N, digit, sum<p>    ввод N<p>    sum := 0<p>    нц пока N &gt; 0<p>        digit := mod(N,10)<p>        если digit &lt; 7 то<p>            sum := sum + 1<p>        все<p>        N := div(N,10)<p>    кц<p>    вывод digit<p> кон<p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p> int main()<p> {<p>    int N, digit, sum;<p>    cin &gt;&gt; N;<p>    sum = 0;<p>    while (N &gt; 0)<p>    {<p>        digit = N % 10;<p>        if (digit &lt; 7)<p>            sum = sum + 1;<p>        N = N / 10;<p>    }<p>    cout &lt;&lt; digit&lt;&lt; endl;<p>    return 0;<p> }<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p> </p><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Напишите, что выведет эта программа при вводе числа 456.<p class=\"left_margin\">2. Приведите пример такого трёхзначного числа, при вводе которого программа выдаёт верный ответ.<p class=\"left_margin\">3. Найдите все ошибки в этой программе (их может быть одна или несколько). Известно, что каждая ошибка затрагивает только одну строку и может быть исправлена без изменения других строк. Для каждой ошибки:<p class=\"left_margin\">1) выпишите строку, в которой сделана ошибка;<p class=\"left_margin\">2) укажите, как исправить ошибку, т.е. приведите правильный вариант строки.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования. Обратите внимание, что требуется найти ошибки в имеющейся программе, а не написать свою, возможно, использующую другой алгоритм решения. Исправление ошибки должно затрагивать только строку, в которой находится ошибка.</p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков.1. Программа выведет число 4.2. Пример числа, при вводе которого программа выдаёт верный ответ: 835.Замечание для проверяющего. Программа работает неправильно из-за неверной выводимой на экран переменной и неверного увеличения суммы. Соответственно, программа будет работать верно, если в числе старшая цифра (крайняя левая) равна сумме цифр, меньших 7. Также программа верно отработает для чисел 100, 200, 300, 400, 500, 600.3. В программе есть две ошибки.Первая ошибка. Неверное увеличение суммы.Строка с ошибкой:sum := sum + 1;Верное исправление:sum := sum + digit;Вторая ошибка. Неверный вывод ответа на экран.Строка с ошибкой:writeln(digit)Верное исправление:writeln(sum)",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol9375\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">Решение использует запись программы на Паскале. Допускается использование программы на любом из четырёх других языков.<p class=\"left_margin\">1. Программа выведет число 4.<p class=\"left_margin\">2. Пример числа, при вводе которого программа выдаёт верный ответ: 835.<p class=\"left_margin\">Замечание для проверяющего. Программа работает неправильно из-за неверной выводимой на экран переменной и неверного увеличения суммы. Соответственно, программа будет работать верно, если в числе старшая цифра (крайняя левая) равна сумме цифр, меньших 7. <i>Также программа верно отработает для чисел 100, 200, 300, 400, 500, 600.</i><p class=\"left_margin\">3. В программе есть две ошибки.<p class=\"left_margin\">Первая ошибка. Неверное увеличение суммы.<p class=\"left_margin\">Строка с ошибкой:<p>sum := sum + 1;<p class=\"left_margin\">Верное исправление:<p>sum := sum + digit;<p class=\"left_margin\">Вторая ошибка. Неверный вывод ответа на экран.<p class=\"left_margin\">Строка с ошибкой:<p>writeln(digit)<p class=\"left_margin\">Верное исправление:<p>writeln(sum)</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "Источник: Де­мон­стра­ци­он­ная вер­сия ЕГЭ—2016 по информатике.",
            "task_id": "9375"
        },
        {
            "answer": "Решение.1. Примеры чисел, при вводе которых программа выводит неверный ответ: Значение N Верный ответОтвет программы223434534745 2. Примеры чисел, при вводе которых программа выводит верный ответ: Значение NВерный ответОтвет программы1223336441055 Заметим, что программа выдаёт верный ответ для тех значений N, которые можно представить в виде суммы 1 + 2 + … + K. При K = 1, 2, 3, 4 получим примеры, приведённые в таблице. Во всех остальных случаях программа выдаёт неверный ответ.  3. Программа содержит две ошибки:1) неверное условие цикла;2) неверный вывод результата (выводится значение, на 1 превышающее верное). Пример исправления для языка Паскаль:Первая ошибка:while n>0 do beginИсправленная строка:while n>=0 do beginВторая ошибка:writeln(k)Исправленная строка:writeln(k-1)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:36.470043",
            "question": "Дано целое положительное число N. Необходимо определить наименьшее целое число K, для которого выполняется неравенство:  1 + 2 + … + K > N. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER INPUT N K = 1 WHILE N > 0  N = N - K  K = K + 1 WEND PRINT K END n = int(input())k = 1while n>0:  n = n - k  k = k + 1print(k)  ПаскальАлгоритмический языкvar n, k: integer;begin  read(n);  k := 1;  while n>0 do begin    n := n- k;    k := k + 1;  end;  writeln(k)end.алгнач  цел n, k  ввод n  k := 1  нц пока n>0    n := n - k    k := k + 1  кц  вывод kконСи++#include <iostream>using namespace std;int main(){int n, k;cin >> n;k = 1;while (n>0) {n = n - k;k = k + 1;}cout « k « endl;return 0;}  Последовательно выполните следующее.1. Приведите пример числа N, при вводе которого программа выведет неверный ответ. Укажите верный ответ и ответ, который выведет программа.2. Приведите пример числа N, при вводе которого программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body936146\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i>. Необходимо определить наименьшее целое число <i>K</i>, для которого выполняется неравенство: <p> </p><center><p class=\"left_margin\">1 + 2 + … + <i>K</i> &gt; <i>N</i>.<p> </p></p></center><p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"50%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 1<p> WHILE N &gt; 0<p>  N = N - K<p>  K = K + 1<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 1<p>while n&gt;0:<p>  n = n - k<p>  k = k + 1<p>print(k)<p> </p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>  read(n);<p>  k := 1;<p>  while n&gt;0 do begin<p>    n := n- k;<p>    k := k + 1;<p>  end;<p>  writeln(k)<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n, k<p>  ввод n<p>  k := 1<p>  нц пока n&gt;0<p>    n := n - k<p>    k := k + 1<p>  кц<p>  вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>int n, k;<p>cin &gt;&gt; n;<p>k = 1;<p>while (n&gt;0) {<p>n = n - k;<p>k = k + 1;<p>}<p>cout « k « endl;<p>return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Приведите пример числа <i>N</i>, при вводе которого программа выведет неверный ответ. Укажите верный ответ и ответ, который выведет программа.<p class=\"left_margin\">2. Приведите пример числа <i>N</i>, при вводе которого программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. Примеры чисел, при вводе которых программа выводит неверный ответ: Значение N Верный ответОтвет программы223434534745 2. Примеры чисел, при вводе которых программа выводит верный ответ: Значение NВерный ответОтвет программы1223336441055 Заметим, что программа выдаёт верный ответ для тех значений N, которые можно представить в виде суммы 1 + 2 + … + K. При K = 1, 2, 3, 4 получим примеры, приведённые в таблице. Во всех остальных случаях программа выдаёт неверный ответ.  3. Программа содержит две ошибки:1) неверное условие цикла;2) неверный вывод результата (выводится значение, на 1 превышающее верное). Пример исправления для языка Паскаль:Первая ошибка:while n>0 do beginИсправленная строка:while n>=0 do beginВторая ошибка:writeln(k)Исправленная строка:writeln(k-1)В программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol9774\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. Примеры чисел, при вводе которых программа выводит неверный ответ:<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:left\">Значение N </td><td style=\"text-align:left\">Верный ответ</td><td style=\"text-align:left\">Ответ программы</td></tr><tr><td style=\"text-align:left\">2</td><td style=\"text-align:left\">2</td><td style=\"text-align:left\">3</td></tr><tr><td style=\"text-align:left\">4</td><td style=\"text-align:left\">3</td><td style=\"text-align:left\">4</td></tr><tr><td style=\"text-align:left\">5</td><td style=\"text-align:left\">3</td><td style=\"text-align:left\">4</td></tr><tr><td style=\"text-align:left\">7</td><td style=\"text-align:left\">4</td><td style=\"text-align:left\">5</td></tr></table><p> </p><p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ:<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:left\">Значение N</td><td style=\"text-align:left\">Верный ответ</td><td style=\"text-align:left\">Ответ программы</td></tr><tr><td style=\"text-align:left\">1</td><td style=\"text-align:left\">2</td><td style=\"text-align:left\">2</td></tr><tr><td style=\"text-align:left\">3</td><td style=\"text-align:left\">3</td><td style=\"text-align:left\">3</td></tr><tr><td style=\"text-align:left\">6</td><td style=\"text-align:left\">4</td><td style=\"text-align:left\">4</td></tr><tr><td style=\"text-align:left\">10</td><td style=\"text-align:left\">5</td><td style=\"text-align:left\">5</td></tr></table><p> </p><p class=\"left_margin\">Заметим, что программа выдаёт верный ответ для тех значений N, которые можно представить в виде суммы 1 + 2 + … + K. При K = 1, 2, 3, 4 получим примеры, приведённые в таблице. Во всех остальных случаях программа выдаёт неверный ответ. <p> </p><p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверное условие цикла;<p class=\"left_margin\">2) неверный вывод результата (выводится значение, на 1 превышающее верное).<p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль:<p class=\"left_margin\">Первая ошибка:<p>while <i>n</i>&gt;0 do begin<p class=\"left_margin\">Исправленная строка:<p>while <i>n</i>&gt;=0 do begin<p class=\"left_margin\">Вторая ошибка:<p>writeln(<i>k</i>)<p class=\"left_margin\">Исправленная строка:<p>writeln(<i>k</i>-1)<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "9774"
        },
        {
            "answer": "Решение.1. Примеры чисел, при вводе которых программа выводит неверный ответ:  Значение NВерный ответОтвет программы1122233235346349451045 2. Примеры чисел, при вводе которых программа выводит верный ответ: Значение NВерный ответОтвет программы4337441255 3. Программа содержит две ошибки:1) неверная инициализация;2) неверное условие цикла.  Пример исправления для языка Паскаль:Первая ошибка:k := 1;Исправленная строка:k := 0;Вторая ошибка:while n>=0 do beginИсправленная строка:while n>0 do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "parsed": "2019-04-29 21:09:36.943614",
            "question": "Дано целое положительное число N. Необходимо определить наименьшее целое число K, для которого выполняется неравенство:  1 + 2 + … + K ≥ N. Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.Ниже эта программа для Вашего удобства приведена на пяти языках программирования. БейсикPython DIM N, K AS INTEGER INPUT N K = 1 WHILE N >= 0  K = K + 1  N = N - K WEND PRINT K END n = int(input())k = 1while n>=0:  k = k + 1  n = n - kprint(k)  ПаскальАлгоритмический языкvar n, k: integer;begin  read(n);  k := 1;  while n>=0 do begin    k := k + 1;    n := n- k;  end;  writeln(k)end.алгнач  цел n, k  ввод n  k := 1  нц пока n>=0    k := k + 1    n := n - k  кц  вывод kконСи++#include <iostream>using namespace std;int main(){int n, k;cin >> n;k = 1;while (n>=0) {k = k + 1;n = n - k;}cout « k « endl;return 0;}  Последовательно выполните следующее.1. Приведите пример числа N, при вводе которого программа выведет неверный ответ. Укажите верный ответ и ответ, который выведет программа.2. Приведите пример числа N, при вводе которого программа выведет верный ответ. Укажите этот ответ.3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.Достаточно указать ошибки и способ их исправления для одного языка программирования.Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.",
            "questionRaw": "<div align=\"justify\" class=\"pbody\" id=\"body936110\" width=\"100%\"><p class=\"left_margin\">Дано целое положительное число <i>N</i>. Необходимо определить наименьшее целое число <i>K</i>, для которого выполняется неравенство: <p> </p><center><p class=\"left_margin\">1 + 2 + … + <i>K</i> ≥ <i>N</i>.<p> </p></p></center><p class=\"left_margin\">Для решения этой задачи ученик написал программу, но, к сожалению, его программа неправильная.<p class=\"left_margin\">Ниже эта программа для Вашего удобства приведена на пяти языках программирования.<p> </p><center><p><table border=\"\" width=\"50%\"><tr><th width=\"50%\"><b>Бейсик</b></th><th width=\"50%\"><b>Python</b></th></tr><tr><td><div class=\"source_code lang_basic\"><p> DIM N, K AS INTEGER<p> INPUT N<p> K = 1<p> WHILE N &gt;= 0<p>  K = K + 1<p>  N = N - K<p> WEND<p> PRINT K<p> END<p> </p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_python\"><p>n = int(input())<p>k = 1<p>while n&gt;=0:<p>  k = k + 1<p>  n = n - k<p>print(k)<p> </p></p></p></p></p></p></p></div><p> </p></td></tr><tr><th><b>Паскаль</b></th><th><b>Алгоритмический язык</b></th></tr><tr><td><div class=\"source_code lang_pascal\"><p>var n, k: integer;<p>begin<p>  read(n);<p>  k := 1;<p>  while n&gt;=0 do begin<p>    k := k + 1;<p>    n := n- k;<p>  end;<p>  writeln(k)<p>end.<p></p></p></p></p></p></p></p></p></p></p></p></div></td><td><div class=\"source_code lang_alg\"><p>алг<p>нач<p>  цел n, k<p>  ввод n<p>  k := 1<p>  нц пока n&gt;=0<p>    k := k + 1<p>    n := n - k<p>  кц<p>  вывод k<p>кон<p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr><p><tr><th colspan=\"2\"><b>Си++</b></th></tr><tr><td colspan=\"2\"><div class=\"source_code lang_c\"><p>#include &lt;iostream&gt;<p>using namespace std;<p>int main(){<p>int n, k;<p>cin &gt;&gt; n;<p>k = 1;<p>while (n&gt;=0) {<p>k = k + 1;<p>n = n - k;<p>}<p>cout « k « endl;<p>return 0;<p>}<p> </p></p></p></p></p></p></p></p></p></p></p></p></p></p></div></td></tr></p></table><p> </p></p></center><p class=\"left_margin\">Последовательно выполните следующее.<p class=\"left_margin\">1. Приведите пример числа <i>N</i>, при вводе которого программа выведет неверный ответ. Укажите верный ответ и ответ, который выведет программа.<p class=\"left_margin\">2. Приведите пример числа <i>N</i>, при вводе которого программа выведет верный ответ. Укажите этот ответ.<p class=\"left_margin\">3. Найдите в программе все ошибки (их может быть одна или несколько). Для каждой ошибки выпишите строку, в которой она допущена, и приведите эту же строку в исправленном виде.<p class=\"left_margin\">Достаточно указать ошибки и способ их исправления для одного языка программирования.<p class=\"left_margin\">Обратите внимание: Вам нужно исправить приведённую программу, а не написать свою. Вы можете только заменять ошибочные строки, но не можете удалять строки или добавлять новые. Заменять следует только ошибочные строки: за исправления, внесённые в строки, не содержащие ошибок, баллы будут снижаться.</p></p></p></p></p></p></p></p></p></div>",
            "reference": "24 ",
            "solution": "Решение.1. Примеры чисел, при вводе которых программа выводит неверный ответ:  Значение NВерный ответОтвет программы1122233235346349451045 2. Примеры чисел, при вводе которых программа выводит верный ответ: Значение NВерный ответОтвет программы4337441255 3. Программа содержит две ошибки:1) неверная инициализация;2) неверное условие цикла.  Пример исправления для языка Паскаль:Первая ошибка:k := 1;Исправленная строка:k := 0;Вторая ошибка:while n>=0 do beginИсправленная строка:while n>0 do beginВ программах на других языках ошибочные строки и их исправления аналогичны.Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.",
            "solutionRaw": "<div align=\"justify\" class=\"pbody\" id=\"sol9810\" style=\"\" width=\"100%\"><p class=\"left_margin\"></p><b>Решение<!--rule_info-->.</b><p class=\"left_margin\">1. Примеры чисел, при вводе которых программа выводит неверный ответ: <p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:left\">Значение <i>N</i></td><td style=\"text-align:left\">Верный ответ</td><td style=\"text-align:left\">Ответ программы</td></tr><tr><td style=\"text-align:left\">1</td><td style=\"text-align:left\">1</td><td style=\"text-align:left\">2</td></tr><tr><td style=\"text-align:left\">2</td><td style=\"text-align:left\">2</td><td style=\"text-align:left\">3</td></tr><tr><td style=\"text-align:left\">3</td><td style=\"text-align:left\">2</td><td style=\"text-align:left\">3</td></tr><tr><td style=\"text-align:left\">5</td><td style=\"text-align:left\">3</td><td style=\"text-align:left\">4</td></tr><tr><td style=\"text-align:left\">6</td><td style=\"text-align:left\">3</td><td style=\"text-align:left\">4</td></tr><tr><td style=\"text-align:left\">9</td><td style=\"text-align:left\">4</td><td style=\"text-align:left\">5</td></tr><tr><td style=\"text-align:left\">10</td><td style=\"text-align:left\">4</td><td style=\"text-align:left\">5</td></tr></table><p> </p><p class=\"left_margin\">2. Примеры чисел, при вводе которых программа выводит верный ответ:<p> </p><p><table style=\"margin:auto\"><tr><td style=\"text-align:left\">Значение <i>N</i></td><td style=\"text-align:left\">Верный ответ</td><td style=\"text-align:left\">Ответ программы</td></tr><tr><td style=\"text-align:left\">4</td><td style=\"text-align:left\">3</td><td style=\"text-align:left\">3</td></tr><tr><td style=\"text-align:left\">7</td><td style=\"text-align:left\">4</td><td style=\"text-align:left\">4</td></tr><tr><td style=\"text-align:left\">12</td><td style=\"text-align:left\">5</td><td style=\"text-align:left\">5</td></tr></table><p> </p><p class=\"left_margin\">3. Программа содержит две ошибки:<p class=\"left_margin\">1) неверная инициализация;<p class=\"left_margin\">2) неверное условие цикла. <p> </p><p class=\"left_margin\">Пример исправления для языка Паскаль:<p class=\"left_margin\">Первая ошибка:<p class=\"left_margin\"><i>k</i> := 1;<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\"><i>k</i> := 0;<p class=\"left_margin\">Вторая ошибка:<p class=\"left_margin\">while <i>n</i>&gt;=0 do begin<p class=\"left_margin\">Исправленная строка:<p class=\"left_margin\">while <i>n</i>&gt;0 do begin<p class=\"left_margin\">В программах на других языках ошибочные строки и их исправления аналогичны.<p class=\"left_margin\">Незначительной опиской, не влияющей на оценку, следует считать отсутствие служебных слов и знаков после содержательной части исправления.</p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></p></div>",
            "source": "",
            "task_id": "9810"
        }
    ],
    "taskEGENumber": "24",
    "updated": "2019-05-06 17:29:08.608816"
}